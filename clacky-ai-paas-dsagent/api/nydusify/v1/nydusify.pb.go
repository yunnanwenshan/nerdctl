// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: nydusify/v1/nydusify.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Task status enumeration
type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED TaskStatus = 0
	TaskStatus_TASK_STATUS_PENDING     TaskStatus = 1 // Task submitted, waiting to start
	TaskStatus_TASK_STATUS_RUNNING     TaskStatus = 2 // Task is currently executing
	TaskStatus_TASK_STATUS_SUCCESS     TaskStatus = 3 // Task completed successfully
	TaskStatus_TASK_STATUS_FAILED      TaskStatus = 4 // Task failed
	TaskStatus_TASK_STATUS_CANCELLED   TaskStatus = 5 // Task was cancelled
	TaskStatus_TASK_STATUS_TIMEOUT     TaskStatus = 6 // Task timed out
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_PENDING",
		2: "TASK_STATUS_RUNNING",
		3: "TASK_STATUS_SUCCESS",
		4: "TASK_STATUS_FAILED",
		5: "TASK_STATUS_CANCELLED",
		6: "TASK_STATUS_TIMEOUT",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_PENDING":     1,
		"TASK_STATUS_RUNNING":     2,
		"TASK_STATUS_SUCCESS":     3,
		"TASK_STATUS_FAILED":      4,
		"TASK_STATUS_CANCELLED":   5,
		"TASK_STATUS_TIMEOUT":     6,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_nydusify_v1_nydusify_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_nydusify_v1_nydusify_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{0}
}

// Request to submit a nydusify commit task
type SubmitCommitTaskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name to commit
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Target repository URL for the nydus image
	TargetRepo string `protobuf:"bytes,2,opt,name=target_repo,json=targetRepo,proto3" json:"target_repo,omitempty"`
	// Optional callback configuration
	Callback *CallbackConfig `protobuf:"bytes,3,opt,name=callback,proto3" json:"callback,omitempty"`
	// Optional task metadata
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Task priority (1-10, where 10 is highest priority)
	Priority int32 `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	// Task timeout in seconds (default: 3600)
	TimeoutSeconds int32 `protobuf:"varint,6,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubmitCommitTaskRequest) Reset() {
	*x = SubmitCommitTaskRequest{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitCommitTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCommitTaskRequest) ProtoMessage() {}

func (x *SubmitCommitTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCommitTaskRequest.ProtoReflect.Descriptor instead.
func (*SubmitCommitTaskRequest) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitCommitTaskRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *SubmitCommitTaskRequest) GetTargetRepo() string {
	if x != nil {
		return x.TargetRepo
	}
	return ""
}

func (x *SubmitCommitTaskRequest) GetCallback() *CallbackConfig {
	if x != nil {
		return x.Callback
	}
	return nil
}

func (x *SubmitCommitTaskRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SubmitCommitTaskRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *SubmitCommitTaskRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

// Response for task submission
type SubmitCommitTaskResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique task ID
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Task status
	Status TaskStatus `protobuf:"varint,2,opt,name=status,proto3,enum=nydusify.v1.TaskStatus" json:"status,omitempty"`
	// Task creation timestamp
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Estimated start time (if queued)
	EstimatedStartTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=estimated_start_time,json=estimatedStartTime,proto3" json:"estimated_start_time,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SubmitCommitTaskResponse) Reset() {
	*x = SubmitCommitTaskResponse{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitCommitTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCommitTaskResponse) ProtoMessage() {}

func (x *SubmitCommitTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCommitTaskResponse.ProtoReflect.Descriptor instead.
func (*SubmitCommitTaskResponse) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitCommitTaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *SubmitCommitTaskResponse) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *SubmitCommitTaskResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SubmitCommitTaskResponse) GetEstimatedStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedStartTime
	}
	return nil
}

// Request to get task status
type GetTaskStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Task ID
	TaskId        string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskStatusRequest) Reset() {
	*x = GetTaskStatusRequest{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskStatusRequest) ProtoMessage() {}

func (x *GetTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*GetTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{2}
}

func (x *GetTaskStatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// Response with task status and results
type GetTaskStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Task information
	Task          *TaskInfo `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskStatusResponse) Reset() {
	*x = GetTaskStatusResponse{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskStatusResponse) ProtoMessage() {}

func (x *GetTaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskStatusResponse.ProtoReflect.Descriptor instead.
func (*GetTaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{3}
}

func (x *GetTaskStatusResponse) GetTask() *TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

// Request to list tasks
type ListTasksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page size (default: 20, max: 100)
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token for pagination
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter by task status
	StatusFilter []TaskStatus `protobuf:"varint,3,rep,packed,name=status_filter,json=statusFilter,proto3,enum=nydusify.v1.TaskStatus" json:"status_filter,omitempty"`
	// Filter by container ID
	ContainerId string `protobuf:"bytes,4,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Filter tasks created after this timestamp
	CreatedAfter *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_after,json=createdAfter,proto3" json:"created_after,omitempty"`
	// Filter tasks created before this timestamp
	CreatedBefore *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_before,json=createdBefore,proto3" json:"created_before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{4}
}

func (x *ListTasksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTasksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListTasksRequest) GetStatusFilter() []TaskStatus {
	if x != nil {
		return x.StatusFilter
	}
	return nil
}

func (x *ListTasksRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ListTasksRequest) GetCreatedAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAfter
	}
	return nil
}

func (x *ListTasksRequest) GetCreatedBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedBefore
	}
	return nil
}

// Response with list of tasks
type ListTasksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of tasks
	Tasks []*TaskInfo `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	// Next page token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total count of tasks (if available)
	TotalCount    int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{5}
}

func (x *ListTasksResponse) GetTasks() []*TaskInfo {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ListTasksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListTasksResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Request to cancel a task
type CancelTaskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Task ID
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Reason for cancellation
	Reason        string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTaskRequest) Reset() {
	*x = CancelTaskRequest{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTaskRequest) ProtoMessage() {}

func (x *CancelTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTaskRequest.ProtoReflect.Descriptor instead.
func (*CancelTaskRequest) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{6}
}

func (x *CancelTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CancelTaskRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Response for task cancellation
type CancelTaskResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success flag
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Updated task status
	Status        TaskStatus `protobuf:"varint,3,opt,name=status,proto3,enum=nydusify.v1.TaskStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTaskResponse) Reset() {
	*x = CancelTaskResponse{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTaskResponse) ProtoMessage() {}

func (x *CancelTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTaskResponse.ProtoReflect.Descriptor instead.
func (*CancelTaskResponse) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{7}
}

func (x *CancelTaskResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CancelTaskResponse) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

// Request to retry callback notification
type RetryCallbackRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Task ID
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Force retry even if max attempts reached
	Force         bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryCallbackRequest) Reset() {
	*x = RetryCallbackRequest{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryCallbackRequest) ProtoMessage() {}

func (x *RetryCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryCallbackRequest.ProtoReflect.Descriptor instead.
func (*RetryCallbackRequest) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{8}
}

func (x *RetryCallbackRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *RetryCallbackRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

// Response for callback retry
type RetryCallbackResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success flag
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Current retry count
	RetryCount    int32 `protobuf:"varint,3,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryCallbackResponse) Reset() {
	*x = RetryCallbackResponse{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryCallbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryCallbackResponse) ProtoMessage() {}

func (x *RetryCallbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryCallbackResponse.ProtoReflect.Descriptor instead.
func (*RetryCallbackResponse) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{9}
}

func (x *RetryCallbackResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RetryCallbackResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RetryCallbackResponse) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

// Task information structure
type TaskInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Task ID
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Task type (always "commit" for now)
	TaskType string `protobuf:"bytes,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	// Task status
	Status TaskStatus `protobuf:"varint,3,opt,name=status,proto3,enum=nydusify.v1.TaskStatus" json:"status,omitempty"`
	// Container ID
	ContainerId string `protobuf:"bytes,4,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Target repository
	TargetRepo string `protobuf:"bytes,5,opt,name=target_repo,json=targetRepo,proto3" json:"target_repo,omitempty"`
	// Task creation timestamp
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Task start timestamp
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Task completion timestamp
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// Task execution duration in seconds
	DurationSeconds int32 `protobuf:"varint,9,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	// Task priority
	Priority int32 `protobuf:"varint,10,opt,name=priority,proto3" json:"priority,omitempty"`
	// Task timeout
	TimeoutSeconds int32 `protobuf:"varint,11,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	// Task execution results
	Result *TaskResult `protobuf:"bytes,12,opt,name=result,proto3" json:"result,omitempty"`
	// Callback configuration
	Callback *CallbackConfig `protobuf:"bytes,13,opt,name=callback,proto3" json:"callback,omitempty"`
	// Callback status
	CallbackStatus *CallbackStatus `protobuf:"bytes,14,opt,name=callback_status,json=callbackStatus,proto3" json:"callback_status,omitempty"`
	// Task metadata
	Metadata map[string]string `protobuf:"bytes,15,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Error message (if failed)
	ErrorMessage  string `protobuf:"bytes,16,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskInfo) Reset() {
	*x = TaskInfo{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInfo) ProtoMessage() {}

func (x *TaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInfo.ProtoReflect.Descriptor instead.
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{10}
}

func (x *TaskInfo) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskInfo) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskInfo) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskInfo) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *TaskInfo) GetTargetRepo() string {
	if x != nil {
		return x.TargetRepo
	}
	return ""
}

func (x *TaskInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TaskInfo) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *TaskInfo) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *TaskInfo) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *TaskInfo) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *TaskInfo) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *TaskInfo) GetResult() *TaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskInfo) GetCallback() *CallbackConfig {
	if x != nil {
		return x.Callback
	}
	return nil
}

func (x *TaskInfo) GetCallbackStatus() *CallbackStatus {
	if x != nil {
		return x.CallbackStatus
	}
	return nil
}

func (x *TaskInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskInfo) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Task execution results
type TaskResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Exit code of nydusify command
	ExitCode int32 `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Standard output
	Stdout string `protobuf:"bytes,2,opt,name=stdout,proto3" json:"stdout,omitempty"`
	// Standard error
	Stderr string `protobuf:"bytes,3,opt,name=stderr,proto3" json:"stderr,omitempty"`
	// Generated nydus image digest
	ImageDigest string `protobuf:"bytes,4,opt,name=image_digest,json=imageDigest,proto3" json:"image_digest,omitempty"`
	// Target repository URL
	TargetUrl string `protobuf:"bytes,5,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`
	// Image size information
	SizeInfo *ImageSizeInfo `protobuf:"bytes,6,opt,name=size_info,json=sizeInfo,proto3" json:"size_info,omitempty"`
	// Execution metrics
	Metrics       *ExecutionMetrics `protobuf:"bytes,7,opt,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{11}
}

func (x *TaskResult) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *TaskResult) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *TaskResult) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *TaskResult) GetImageDigest() string {
	if x != nil {
		return x.ImageDigest
	}
	return ""
}

func (x *TaskResult) GetTargetUrl() string {
	if x != nil {
		return x.TargetUrl
	}
	return ""
}

func (x *TaskResult) GetSizeInfo() *ImageSizeInfo {
	if x != nil {
		return x.SizeInfo
	}
	return nil
}

func (x *TaskResult) GetMetrics() *ExecutionMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Image size information
type ImageSizeInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Original image size in bytes
	OriginalSize int64 `protobuf:"varint,1,opt,name=original_size,json=originalSize,proto3" json:"original_size,omitempty"`
	// Nydus image size in bytes
	NydusSize int64 `protobuf:"varint,2,opt,name=nydus_size,json=nydusSize,proto3" json:"nydus_size,omitempty"`
	// Compression ratio
	CompressionRatio float32 `protobuf:"fixed32,3,opt,name=compression_ratio,json=compressionRatio,proto3" json:"compression_ratio,omitempty"`
	// Size reduction in bytes
	SizeReduction int64 `protobuf:"varint,4,opt,name=size_reduction,json=sizeReduction,proto3" json:"size_reduction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageSizeInfo) Reset() {
	*x = ImageSizeInfo{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageSizeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageSizeInfo) ProtoMessage() {}

func (x *ImageSizeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageSizeInfo.ProtoReflect.Descriptor instead.
func (*ImageSizeInfo) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{12}
}

func (x *ImageSizeInfo) GetOriginalSize() int64 {
	if x != nil {
		return x.OriginalSize
	}
	return 0
}

func (x *ImageSizeInfo) GetNydusSize() int64 {
	if x != nil {
		return x.NydusSize
	}
	return 0
}

func (x *ImageSizeInfo) GetCompressionRatio() float32 {
	if x != nil {
		return x.CompressionRatio
	}
	return 0
}

func (x *ImageSizeInfo) GetSizeReduction() int64 {
	if x != nil {
		return x.SizeReduction
	}
	return 0
}

// Execution metrics
type ExecutionMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CPU usage percentage
	CpuUsage float32 `protobuf:"fixed32,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	// Memory usage in bytes
	MemoryUsage int64 `protobuf:"varint,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	// Disk I/O read bytes
	DiskReadBytes int64 `protobuf:"varint,3,opt,name=disk_read_bytes,json=diskReadBytes,proto3" json:"disk_read_bytes,omitempty"`
	// Disk I/O write bytes
	DiskWriteBytes int64 `protobuf:"varint,4,opt,name=disk_write_bytes,json=diskWriteBytes,proto3" json:"disk_write_bytes,omitempty"`
	// Network I/O bytes
	NetworkIoBytes int64 `protobuf:"varint,5,opt,name=network_io_bytes,json=networkIoBytes,proto3" json:"network_io_bytes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExecutionMetrics) Reset() {
	*x = ExecutionMetrics{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionMetrics) ProtoMessage() {}

func (x *ExecutionMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionMetrics.ProtoReflect.Descriptor instead.
func (*ExecutionMetrics) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{13}
}

func (x *ExecutionMetrics) GetCpuUsage() float32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *ExecutionMetrics) GetMemoryUsage() int64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *ExecutionMetrics) GetDiskReadBytes() int64 {
	if x != nil {
		return x.DiskReadBytes
	}
	return 0
}

func (x *ExecutionMetrics) GetDiskWriteBytes() int64 {
	if x != nil {
		return x.DiskWriteBytes
	}
	return 0
}

func (x *ExecutionMetrics) GetNetworkIoBytes() int64 {
	if x != nil {
		return x.NetworkIoBytes
	}
	return 0
}

// Callback configuration
type CallbackConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Callback URL
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// HTTP method (default: POST)
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	// Custom headers
	Headers map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Authentication configuration
	Auth *CallbackAuth `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	// Retry configuration
	Retry *RetryConfig `protobuf:"bytes,5,opt,name=retry,proto3" json:"retry,omitempty"`
	// Timeout for callback request in seconds
	TimeoutSeconds int32 `protobuf:"varint,6,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CallbackConfig) Reset() {
	*x = CallbackConfig{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallbackConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackConfig) ProtoMessage() {}

func (x *CallbackConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackConfig.ProtoReflect.Descriptor instead.
func (*CallbackConfig) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{14}
}

func (x *CallbackConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CallbackConfig) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *CallbackConfig) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CallbackConfig) GetAuth() *CallbackAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CallbackConfig) GetRetry() *RetryConfig {
	if x != nil {
		return x.Retry
	}
	return nil
}

func (x *CallbackConfig) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

// Callback authentication
type CallbackAuth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Auth type (bearer, basic, api_key)
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Bearer token
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// Basic auth username
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// Basic auth password
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// API key
	ApiKey string `protobuf:"bytes,5,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// API key header name
	ApiKeyHeader  string `protobuf:"bytes,6,opt,name=api_key_header,json=apiKeyHeader,proto3" json:"api_key_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallbackAuth) Reset() {
	*x = CallbackAuth{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallbackAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackAuth) ProtoMessage() {}

func (x *CallbackAuth) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackAuth.ProtoReflect.Descriptor instead.
func (*CallbackAuth) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{15}
}

func (x *CallbackAuth) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CallbackAuth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CallbackAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CallbackAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CallbackAuth) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *CallbackAuth) GetApiKeyHeader() string {
	if x != nil {
		return x.ApiKeyHeader
	}
	return ""
}

// Retry configuration
type RetryConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum retry attempts (default: 3)
	MaxAttempts int32 `protobuf:"varint,1,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	// Initial delay in seconds (default: 1)
	InitialDelay int32 `protobuf:"varint,2,opt,name=initial_delay,json=initialDelay,proto3" json:"initial_delay,omitempty"`
	// Maximum delay in seconds (default: 60)
	MaxDelay int32 `protobuf:"varint,3,opt,name=max_delay,json=maxDelay,proto3" json:"max_delay,omitempty"`
	// Backoff multiplier (default: 2.0)
	BackoffMultiplier float32 `protobuf:"fixed32,4,opt,name=backoff_multiplier,json=backoffMultiplier,proto3" json:"backoff_multiplier,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RetryConfig) Reset() {
	*x = RetryConfig{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryConfig) ProtoMessage() {}

func (x *RetryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryConfig.ProtoReflect.Descriptor instead.
func (*RetryConfig) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{16}
}

func (x *RetryConfig) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *RetryConfig) GetInitialDelay() int32 {
	if x != nil {
		return x.InitialDelay
	}
	return 0
}

func (x *RetryConfig) GetMaxDelay() int32 {
	if x != nil {
		return x.MaxDelay
	}
	return 0
}

func (x *RetryConfig) GetBackoffMultiplier() float32 {
	if x != nil {
		return x.BackoffMultiplier
	}
	return 0
}

// Callback status information
type CallbackStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Last callback attempt timestamp
	LastAttempt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_attempt,json=lastAttempt,proto3" json:"last_attempt,omitempty"`
	// Number of callback attempts made
	Attempts int32 `protobuf:"varint,2,opt,name=attempts,proto3" json:"attempts,omitempty"`
	// Last callback HTTP status code
	LastStatusCode int32 `protobuf:"varint,3,opt,name=last_status_code,json=lastStatusCode,proto3" json:"last_status_code,omitempty"`
	// Last callback response
	LastResponse string `protobuf:"bytes,4,opt,name=last_response,json=lastResponse,proto3" json:"last_response,omitempty"`
	// Last callback error message
	LastError string `protobuf:"bytes,5,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
	// Next retry timestamp
	NextRetry *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=next_retry,json=nextRetry,proto3" json:"next_retry,omitempty"`
	// Callback success flag
	Success       bool `protobuf:"varint,7,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallbackStatus) Reset() {
	*x = CallbackStatus{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallbackStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackStatus) ProtoMessage() {}

func (x *CallbackStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackStatus.ProtoReflect.Descriptor instead.
func (*CallbackStatus) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{17}
}

func (x *CallbackStatus) GetLastAttempt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAttempt
	}
	return nil
}

func (x *CallbackStatus) GetAttempts() int32 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

func (x *CallbackStatus) GetLastStatusCode() int32 {
	if x != nil {
		return x.LastStatusCode
	}
	return 0
}

func (x *CallbackStatus) GetLastResponse() string {
	if x != nil {
		return x.LastResponse
	}
	return ""
}

func (x *CallbackStatus) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

func (x *CallbackStatus) GetNextRetry() *timestamppb.Timestamp {
	if x != nil {
		return x.NextRetry
	}
	return nil
}

func (x *CallbackStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Callback payload sent to the callback URL
type CallbackPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Task ID
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Task status
	Status TaskStatus `protobuf:"varint,2,opt,name=status,proto3,enum=nydusify.v1.TaskStatus" json:"status,omitempty"`
	// Container ID
	ContainerId string `protobuf:"bytes,3,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Target repository
	TargetRepo string `protobuf:"bytes,4,opt,name=target_repo,json=targetRepo,proto3" json:"target_repo,omitempty"`
	// Task completion timestamp
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// Task execution duration in seconds
	DurationSeconds int32 `protobuf:"varint,6,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	// Task execution results (if successful)
	Result *TaskResult `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty"`
	// Error message (if failed)
	ErrorMessage string `protobuf:"bytes,8,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Task metadata
	Metadata map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Callback attempt number
	CallbackAttempt int32 `protobuf:"varint,10,opt,name=callback_attempt,json=callbackAttempt,proto3" json:"callback_attempt,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CallbackPayload) Reset() {
	*x = CallbackPayload{}
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallbackPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackPayload) ProtoMessage() {}

func (x *CallbackPayload) ProtoReflect() protoreflect.Message {
	mi := &file_nydusify_v1_nydusify_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackPayload.ProtoReflect.Descriptor instead.
func (*CallbackPayload) Descriptor() ([]byte, []int) {
	return file_nydusify_v1_nydusify_proto_rawDescGZIP(), []int{18}
}

func (x *CallbackPayload) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CallbackPayload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *CallbackPayload) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *CallbackPayload) GetTargetRepo() string {
	if x != nil {
		return x.TargetRepo
	}
	return ""
}

func (x *CallbackPayload) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *CallbackPayload) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *CallbackPayload) GetResult() *TaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CallbackPayload) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CallbackPayload) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CallbackPayload) GetCallbackAttempt() int32 {
	if x != nil {
		return x.CallbackAttempt
	}
	return 0
}

var File_nydusify_v1_nydusify_proto protoreflect.FileDescriptor

const file_nydusify_v1_nydusify_proto_rawDesc = "" +
	"\n" +
	"\x1anydusify/v1/nydusify.proto\x12\vnydusify.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x17validate/validate.proto\"\xfa\x02\n" +
	"\x17SubmitCommitTaskRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12(\n" +
	"\vtarget_repo\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"targetRepo\x127\n" +
	"\bcallback\x18\x03 \x01(\v2\x1b.nydusify.v1.CallbackConfigR\bcallback\x12N\n" +
	"\bmetadata\x18\x04 \x03(\v22.nydusify.v1.SubmitCommitTaskRequest.MetadataEntryR\bmetadata\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority\x12'\n" +
	"\x0ftimeout_seconds\x18\x06 \x01(\x05R\x0etimeoutSeconds\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xed\x01\n" +
	"\x18SubmitCommitTaskResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12/\n" +
	"\x06status\x18\x02 \x01(\x0e2\x17.nydusify.v1.TaskStatusR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12L\n" +
	"\x14estimated_start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x12estimatedStartTime\"8\n" +
	"\x14GetTaskStatusRequest\x12 \n" +
	"\atask_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06taskId\"B\n" +
	"\x15GetTaskStatusResponse\x12)\n" +
	"\x04task\x18\x01 \x01(\v2\x15.nydusify.v1.TaskInfoR\x04task\"\xb3\x02\n" +
	"\x10ListTasksRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12<\n" +
	"\rstatus_filter\x18\x03 \x03(\x0e2\x17.nydusify.v1.TaskStatusR\fstatusFilter\x12!\n" +
	"\fcontainer_id\x18\x04 \x01(\tR\vcontainerId\x12?\n" +
	"\rcreated_after\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\fcreatedAfter\x12A\n" +
	"\x0ecreated_before\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\rcreatedBefore\"\x89\x01\n" +
	"\x11ListTasksResponse\x12+\n" +
	"\x05tasks\x18\x01 \x03(\v2\x15.nydusify.v1.TaskInfoR\x05tasks\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"M\n" +
	"\x11CancelTaskRequest\x12 \n" +
	"\atask_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06taskId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"y\n" +
	"\x12CancelTaskResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12/\n" +
	"\x06status\x18\x03 \x01(\x0e2\x17.nydusify.v1.TaskStatusR\x06status\"N\n" +
	"\x14RetryCallbackRequest\x12 \n" +
	"\atask_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06taskId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"l\n" +
	"\x15RetryCallbackResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vretry_count\x18\x03 \x01(\x05R\n" +
	"retryCount\"\xad\x06\n" +
	"\bTaskInfo\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_type\x18\x02 \x01(\tR\btaskType\x12/\n" +
	"\x06status\x18\x03 \x01(\x0e2\x17.nydusify.v1.TaskStatusR\x06status\x12!\n" +
	"\fcontainer_id\x18\x04 \x01(\tR\vcontainerId\x12\x1f\n" +
	"\vtarget_repo\x18\x05 \x01(\tR\n" +
	"targetRepo\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"started_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12)\n" +
	"\x10duration_seconds\x18\t \x01(\x05R\x0fdurationSeconds\x12\x1a\n" +
	"\bpriority\x18\n" +
	" \x01(\x05R\bpriority\x12'\n" +
	"\x0ftimeout_seconds\x18\v \x01(\x05R\x0etimeoutSeconds\x12/\n" +
	"\x06result\x18\f \x01(\v2\x17.nydusify.v1.TaskResultR\x06result\x127\n" +
	"\bcallback\x18\r \x01(\v2\x1b.nydusify.v1.CallbackConfigR\bcallback\x12D\n" +
	"\x0fcallback_status\x18\x0e \x01(\v2\x1b.nydusify.v1.CallbackStatusR\x0ecallbackStatus\x12?\n" +
	"\bmetadata\x18\x0f \x03(\v2#.nydusify.v1.TaskInfo.MetadataEntryR\bmetadata\x12#\n" +
	"\rerror_message\x18\x10 \x01(\tR\ferrorMessage\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8d\x02\n" +
	"\n" +
	"TaskResult\x12\x1b\n" +
	"\texit_code\x18\x01 \x01(\x05R\bexitCode\x12\x16\n" +
	"\x06stdout\x18\x02 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x03 \x01(\tR\x06stderr\x12!\n" +
	"\fimage_digest\x18\x04 \x01(\tR\vimageDigest\x12\x1d\n" +
	"\n" +
	"target_url\x18\x05 \x01(\tR\ttargetUrl\x127\n" +
	"\tsize_info\x18\x06 \x01(\v2\x1a.nydusify.v1.ImageSizeInfoR\bsizeInfo\x127\n" +
	"\ametrics\x18\a \x01(\v2\x1d.nydusify.v1.ExecutionMetricsR\ametrics\"\xa7\x01\n" +
	"\rImageSizeInfo\x12#\n" +
	"\roriginal_size\x18\x01 \x01(\x03R\foriginalSize\x12\x1d\n" +
	"\n" +
	"nydus_size\x18\x02 \x01(\x03R\tnydusSize\x12+\n" +
	"\x11compression_ratio\x18\x03 \x01(\x02R\x10compressionRatio\x12%\n" +
	"\x0esize_reduction\x18\x04 \x01(\x03R\rsizeReduction\"\xce\x01\n" +
	"\x10ExecutionMetrics\x12\x1b\n" +
	"\tcpu_usage\x18\x01 \x01(\x02R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x02 \x01(\x03R\vmemoryUsage\x12&\n" +
	"\x0fdisk_read_bytes\x18\x03 \x01(\x03R\rdiskReadBytes\x12(\n" +
	"\x10disk_write_bytes\x18\x04 \x01(\x03R\x0ediskWriteBytes\x12(\n" +
	"\x10network_io_bytes\x18\x05 \x01(\x03R\x0enetworkIoBytes\"\xcc\x02\n" +
	"\x0eCallbackConfig\x12\x1a\n" +
	"\x03url\x18\x01 \x01(\tB\b\xfaB\x05r\x03\x88\x01\x01R\x03url\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12B\n" +
	"\aheaders\x18\x03 \x03(\v2(.nydusify.v1.CallbackConfig.HeadersEntryR\aheaders\x12-\n" +
	"\x04auth\x18\x04 \x01(\v2\x19.nydusify.v1.CallbackAuthR\x04auth\x12.\n" +
	"\x05retry\x18\x05 \x01(\v2\x18.nydusify.v1.RetryConfigR\x05retry\x12'\n" +
	"\x0ftimeout_seconds\x18\x06 \x01(\x05R\x0etimeoutSeconds\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaf\x01\n" +
	"\fCallbackAuth\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x17\n" +
	"\aapi_key\x18\x05 \x01(\tR\x06apiKey\x12$\n" +
	"\x0eapi_key_header\x18\x06 \x01(\tR\fapiKeyHeader\"\xa1\x01\n" +
	"\vRetryConfig\x12!\n" +
	"\fmax_attempts\x18\x01 \x01(\x05R\vmaxAttempts\x12#\n" +
	"\rinitial_delay\x18\x02 \x01(\x05R\finitialDelay\x12\x1b\n" +
	"\tmax_delay\x18\x03 \x01(\x05R\bmaxDelay\x12-\n" +
	"\x12backoff_multiplier\x18\x04 \x01(\x02R\x11backoffMultiplier\"\xae\x02\n" +
	"\x0eCallbackStatus\x12=\n" +
	"\flast_attempt\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\vlastAttempt\x12\x1a\n" +
	"\battempts\x18\x02 \x01(\x05R\battempts\x12(\n" +
	"\x10last_status_code\x18\x03 \x01(\x05R\x0elastStatusCode\x12#\n" +
	"\rlast_response\x18\x04 \x01(\tR\flastResponse\x12\x1d\n" +
	"\n" +
	"last_error\x18\x05 \x01(\tR\tlastError\x129\n" +
	"\n" +
	"next_retry\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tnextRetry\x12\x18\n" +
	"\asuccess\x18\a \x01(\bR\asuccess\"\x8f\x04\n" +
	"\x0fCallbackPayload\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12/\n" +
	"\x06status\x18\x02 \x01(\x0e2\x17.nydusify.v1.TaskStatusR\x06status\x12!\n" +
	"\fcontainer_id\x18\x03 \x01(\tR\vcontainerId\x12\x1f\n" +
	"\vtarget_repo\x18\x04 \x01(\tR\n" +
	"targetRepo\x12=\n" +
	"\fcompleted_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12)\n" +
	"\x10duration_seconds\x18\x06 \x01(\x05R\x0fdurationSeconds\x12/\n" +
	"\x06result\x18\a \x01(\v2\x17.nydusify.v1.TaskResultR\x06result\x12#\n" +
	"\rerror_message\x18\b \x01(\tR\ferrorMessage\x12F\n" +
	"\bmetadata\x18\t \x03(\v2*.nydusify.v1.CallbackPayload.MetadataEntryR\bmetadata\x12)\n" +
	"\x10callback_attempt\x18\n" +
	" \x01(\x05R\x0fcallbackAttempt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xc0\x01\n" +
	"\n" +
	"TaskStatus\x12\x1b\n" +
	"\x17TASK_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TASK_STATUS_PENDING\x10\x01\x12\x17\n" +
	"\x13TASK_STATUS_RUNNING\x10\x02\x12\x17\n" +
	"\x13TASK_STATUS_SUCCESS\x10\x03\x12\x16\n" +
	"\x12TASK_STATUS_FAILED\x10\x04\x12\x19\n" +
	"\x15TASK_STATUS_CANCELLED\x10\x05\x12\x17\n" +
	"\x13TASK_STATUS_TIMEOUT\x10\x062\xfb\x04\n" +
	"\x0fNydusifyService\x12\x7f\n" +
	"\x10SubmitCommitTask\x12$.nydusify.v1.SubmitCommitTaskRequest\x1a%.nydusify.v1.SubmitCommitTaskResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/nydusify/commit\x12|\n" +
	"\rGetTaskStatus\x12!.nydusify.v1.GetTaskStatusRequest\x1a\".nydusify.v1.GetTaskStatusResponse\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v1/nydusify/tasks/{task_id}\x12f\n" +
	"\tListTasks\x12\x1d.nydusify.v1.ListTasksRequest\x1a\x1e.nydusify.v1.ListTasksResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/nydusify/tasks\x12s\n" +
	"\n" +
	"CancelTask\x12\x1e.nydusify.v1.CancelTaskRequest\x1a\x1f.nydusify.v1.CancelTaskResponse\"$\x82\xd3\xe4\x93\x02\x1e*\x1c/v1/nydusify/tasks/{task_id}\x12\x8b\x01\n" +
	"\rRetryCallback\x12!.nydusify.v1.RetryCallbackRequest\x1a\".nydusify.v1.RetryCallbackResponse\"3\x82\xd3\xe4\x93\x02-\"+/v1/nydusify/tasks/{task_id}/retry-callbackB\x1cZ\x1adsagent/api/nydusify/v1;v1b\x06proto3"

var (
	file_nydusify_v1_nydusify_proto_rawDescOnce sync.Once
	file_nydusify_v1_nydusify_proto_rawDescData []byte
)

func file_nydusify_v1_nydusify_proto_rawDescGZIP() []byte {
	file_nydusify_v1_nydusify_proto_rawDescOnce.Do(func() {
		file_nydusify_v1_nydusify_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nydusify_v1_nydusify_proto_rawDesc), len(file_nydusify_v1_nydusify_proto_rawDesc)))
	})
	return file_nydusify_v1_nydusify_proto_rawDescData
}

var file_nydusify_v1_nydusify_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nydusify_v1_nydusify_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_nydusify_v1_nydusify_proto_goTypes = []any{
	(TaskStatus)(0),                  // 0: nydusify.v1.TaskStatus
	(*SubmitCommitTaskRequest)(nil),  // 1: nydusify.v1.SubmitCommitTaskRequest
	(*SubmitCommitTaskResponse)(nil), // 2: nydusify.v1.SubmitCommitTaskResponse
	(*GetTaskStatusRequest)(nil),     // 3: nydusify.v1.GetTaskStatusRequest
	(*GetTaskStatusResponse)(nil),    // 4: nydusify.v1.GetTaskStatusResponse
	(*ListTasksRequest)(nil),         // 5: nydusify.v1.ListTasksRequest
	(*ListTasksResponse)(nil),        // 6: nydusify.v1.ListTasksResponse
	(*CancelTaskRequest)(nil),        // 7: nydusify.v1.CancelTaskRequest
	(*CancelTaskResponse)(nil),       // 8: nydusify.v1.CancelTaskResponse
	(*RetryCallbackRequest)(nil),     // 9: nydusify.v1.RetryCallbackRequest
	(*RetryCallbackResponse)(nil),    // 10: nydusify.v1.RetryCallbackResponse
	(*TaskInfo)(nil),                 // 11: nydusify.v1.TaskInfo
	(*TaskResult)(nil),               // 12: nydusify.v1.TaskResult
	(*ImageSizeInfo)(nil),            // 13: nydusify.v1.ImageSizeInfo
	(*ExecutionMetrics)(nil),         // 14: nydusify.v1.ExecutionMetrics
	(*CallbackConfig)(nil),           // 15: nydusify.v1.CallbackConfig
	(*CallbackAuth)(nil),             // 16: nydusify.v1.CallbackAuth
	(*RetryConfig)(nil),              // 17: nydusify.v1.RetryConfig
	(*CallbackStatus)(nil),           // 18: nydusify.v1.CallbackStatus
	(*CallbackPayload)(nil),          // 19: nydusify.v1.CallbackPayload
	nil,                              // 20: nydusify.v1.SubmitCommitTaskRequest.MetadataEntry
	nil,                              // 21: nydusify.v1.TaskInfo.MetadataEntry
	nil,                              // 22: nydusify.v1.CallbackConfig.HeadersEntry
	nil,                              // 23: nydusify.v1.CallbackPayload.MetadataEntry
	(*timestamppb.Timestamp)(nil),    // 24: google.protobuf.Timestamp
}
var file_nydusify_v1_nydusify_proto_depIdxs = []int32{
	15, // 0: nydusify.v1.SubmitCommitTaskRequest.callback:type_name -> nydusify.v1.CallbackConfig
	20, // 1: nydusify.v1.SubmitCommitTaskRequest.metadata:type_name -> nydusify.v1.SubmitCommitTaskRequest.MetadataEntry
	0,  // 2: nydusify.v1.SubmitCommitTaskResponse.status:type_name -> nydusify.v1.TaskStatus
	24, // 3: nydusify.v1.SubmitCommitTaskResponse.created_at:type_name -> google.protobuf.Timestamp
	24, // 4: nydusify.v1.SubmitCommitTaskResponse.estimated_start_time:type_name -> google.protobuf.Timestamp
	11, // 5: nydusify.v1.GetTaskStatusResponse.task:type_name -> nydusify.v1.TaskInfo
	0,  // 6: nydusify.v1.ListTasksRequest.status_filter:type_name -> nydusify.v1.TaskStatus
	24, // 7: nydusify.v1.ListTasksRequest.created_after:type_name -> google.protobuf.Timestamp
	24, // 8: nydusify.v1.ListTasksRequest.created_before:type_name -> google.protobuf.Timestamp
	11, // 9: nydusify.v1.ListTasksResponse.tasks:type_name -> nydusify.v1.TaskInfo
	0,  // 10: nydusify.v1.CancelTaskResponse.status:type_name -> nydusify.v1.TaskStatus
	0,  // 11: nydusify.v1.TaskInfo.status:type_name -> nydusify.v1.TaskStatus
	24, // 12: nydusify.v1.TaskInfo.created_at:type_name -> google.protobuf.Timestamp
	24, // 13: nydusify.v1.TaskInfo.started_at:type_name -> google.protobuf.Timestamp
	24, // 14: nydusify.v1.TaskInfo.completed_at:type_name -> google.protobuf.Timestamp
	12, // 15: nydusify.v1.TaskInfo.result:type_name -> nydusify.v1.TaskResult
	15, // 16: nydusify.v1.TaskInfo.callback:type_name -> nydusify.v1.CallbackConfig
	18, // 17: nydusify.v1.TaskInfo.callback_status:type_name -> nydusify.v1.CallbackStatus
	21, // 18: nydusify.v1.TaskInfo.metadata:type_name -> nydusify.v1.TaskInfo.MetadataEntry
	13, // 19: nydusify.v1.TaskResult.size_info:type_name -> nydusify.v1.ImageSizeInfo
	14, // 20: nydusify.v1.TaskResult.metrics:type_name -> nydusify.v1.ExecutionMetrics
	22, // 21: nydusify.v1.CallbackConfig.headers:type_name -> nydusify.v1.CallbackConfig.HeadersEntry
	16, // 22: nydusify.v1.CallbackConfig.auth:type_name -> nydusify.v1.CallbackAuth
	17, // 23: nydusify.v1.CallbackConfig.retry:type_name -> nydusify.v1.RetryConfig
	24, // 24: nydusify.v1.CallbackStatus.last_attempt:type_name -> google.protobuf.Timestamp
	24, // 25: nydusify.v1.CallbackStatus.next_retry:type_name -> google.protobuf.Timestamp
	0,  // 26: nydusify.v1.CallbackPayload.status:type_name -> nydusify.v1.TaskStatus
	24, // 27: nydusify.v1.CallbackPayload.completed_at:type_name -> google.protobuf.Timestamp
	12, // 28: nydusify.v1.CallbackPayload.result:type_name -> nydusify.v1.TaskResult
	23, // 29: nydusify.v1.CallbackPayload.metadata:type_name -> nydusify.v1.CallbackPayload.MetadataEntry
	1,  // 30: nydusify.v1.NydusifyService.SubmitCommitTask:input_type -> nydusify.v1.SubmitCommitTaskRequest
	3,  // 31: nydusify.v1.NydusifyService.GetTaskStatus:input_type -> nydusify.v1.GetTaskStatusRequest
	5,  // 32: nydusify.v1.NydusifyService.ListTasks:input_type -> nydusify.v1.ListTasksRequest
	7,  // 33: nydusify.v1.NydusifyService.CancelTask:input_type -> nydusify.v1.CancelTaskRequest
	9,  // 34: nydusify.v1.NydusifyService.RetryCallback:input_type -> nydusify.v1.RetryCallbackRequest
	2,  // 35: nydusify.v1.NydusifyService.SubmitCommitTask:output_type -> nydusify.v1.SubmitCommitTaskResponse
	4,  // 36: nydusify.v1.NydusifyService.GetTaskStatus:output_type -> nydusify.v1.GetTaskStatusResponse
	6,  // 37: nydusify.v1.NydusifyService.ListTasks:output_type -> nydusify.v1.ListTasksResponse
	8,  // 38: nydusify.v1.NydusifyService.CancelTask:output_type -> nydusify.v1.CancelTaskResponse
	10, // 39: nydusify.v1.NydusifyService.RetryCallback:output_type -> nydusify.v1.RetryCallbackResponse
	35, // [35:40] is the sub-list for method output_type
	30, // [30:35] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_nydusify_v1_nydusify_proto_init() }
func file_nydusify_v1_nydusify_proto_init() {
	if File_nydusify_v1_nydusify_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nydusify_v1_nydusify_proto_rawDesc), len(file_nydusify_v1_nydusify_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nydusify_v1_nydusify_proto_goTypes,
		DependencyIndexes: file_nydusify_v1_nydusify_proto_depIdxs,
		EnumInfos:         file_nydusify_v1_nydusify_proto_enumTypes,
		MessageInfos:      file_nydusify_v1_nydusify_proto_msgTypes,
	}.Build()
	File_nydusify_v1_nydusify_proto = out.File
	file_nydusify_v1_nydusify_proto_goTypes = nil
	file_nydusify_v1_nydusify_proto_depIdxs = nil
}
