// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: container/v1/container.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Container configuration for create/run operations
type ContainerConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image name
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Command to run
	Command []string `protobuf:"bytes,2,rep,name=command,proto3" json:"command,omitempty"`
	// Arguments to the command
	Args []string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	// Working directory
	WorkingDir string `protobuf:"bytes,4,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	// Environment variables
	Env map[string]string `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Exposed ports
	ExposedPorts []string `protobuf:"bytes,6,rep,name=exposed_ports,json=exposedPorts,proto3" json:"exposed_ports,omitempty"`
	// Labels
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Entrypoint
	Entrypoint []string `protobuf:"bytes,8,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	// User
	User string `protobuf:"bytes,9,opt,name=user,proto3" json:"user,omitempty"`
	// Hostname
	Hostname string `protobuf:"bytes,10,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Domain name
	Domainname string `protobuf:"bytes,11,opt,name=domainname,proto3" json:"domainname,omitempty"`
	// Stop signal
	StopSignal string `protobuf:"bytes,12,opt,name=stop_signal,json=stopSignal,proto3" json:"stop_signal,omitempty"`
	// Stop timeout
	StopTimeout int32 `protobuf:"varint,13,opt,name=stop_timeout,json=stopTimeout,proto3" json:"stop_timeout,omitempty"`
	// Health check
	HealthConfig *HealthConfig `protobuf:"bytes,14,opt,name=health_config,json=healthConfig,proto3" json:"health_config,omitempty"`
	// Restart policy
	RestartPolicy *RestartPolicy `protobuf:"bytes,15,opt,name=restart_policy,json=restartPolicy,proto3" json:"restart_policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerConfig) Reset() {
	*x = ContainerConfig{}
	mi := &file_container_v1_container_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerConfig) ProtoMessage() {}

func (x *ContainerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerConfig.ProtoReflect.Descriptor instead.
func (*ContainerConfig) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerConfig) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ContainerConfig) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ContainerConfig) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *ContainerConfig) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ContainerConfig) GetExposedPorts() []string {
	if x != nil {
		return x.ExposedPorts
	}
	return nil
}

func (x *ContainerConfig) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ContainerConfig) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *ContainerConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ContainerConfig) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ContainerConfig) GetDomainname() string {
	if x != nil {
		return x.Domainname
	}
	return ""
}

func (x *ContainerConfig) GetStopSignal() string {
	if x != nil {
		return x.StopSignal
	}
	return ""
}

func (x *ContainerConfig) GetStopTimeout() int32 {
	if x != nil {
		return x.StopTimeout
	}
	return 0
}

func (x *ContainerConfig) GetHealthConfig() *HealthConfig {
	if x != nil {
		return x.HealthConfig
	}
	return nil
}

func (x *ContainerConfig) GetRestartPolicy() *RestartPolicy {
	if x != nil {
		return x.RestartPolicy
	}
	return nil
}

// Host configuration for container runtime
type HostConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Auto remove
	AutoRemove bool `protobuf:"varint,1,opt,name=auto_remove,json=autoRemove,proto3" json:"auto_remove,omitempty"`
	// Privileged mode
	Privileged bool `protobuf:"varint,2,opt,name=privileged,proto3" json:"privileged,omitempty"`
	// Read only root filesystem
	ReadOnlyRootfs bool `protobuf:"varint,3,opt,name=read_only_rootfs,json=readOnlyRootfs,proto3" json:"read_only_rootfs,omitempty"`
	// CPU shares
	CpuShares int64 `protobuf:"varint,4,opt,name=cpu_shares,json=cpuShares,proto3" json:"cpu_shares,omitempty"`
	// CPU period
	CpuPeriod int64 `protobuf:"varint,5,opt,name=cpu_period,json=cpuPeriod,proto3" json:"cpu_period,omitempty"`
	// CPU quota
	CpuQuota int64 `protobuf:"varint,6,opt,name=cpu_quota,json=cpuQuota,proto3" json:"cpu_quota,omitempty"`
	// CPUs
	Cpus string `protobuf:"bytes,7,opt,name=cpus,proto3" json:"cpus,omitempty"`
	// CPU set CPUs
	CpusetCpus string `protobuf:"bytes,8,opt,name=cpuset_cpus,json=cpusetCpus,proto3" json:"cpuset_cpus,omitempty"`
	// CPU set MEMs
	CpusetMems string `protobuf:"bytes,9,opt,name=cpuset_mems,json=cpusetMems,proto3" json:"cpuset_mems,omitempty"`
	// Memory limit
	Memory int64 `protobuf:"varint,10,opt,name=memory,proto3" json:"memory,omitempty"`
	// Memory swap
	MemorySwap int64 `protobuf:"varint,11,opt,name=memory_swap,json=memorySwap,proto3" json:"memory_swap,omitempty"`
	// Memory swappiness
	MemorySwappiness int64 `protobuf:"varint,12,opt,name=memory_swappiness,json=memorySwappiness,proto3" json:"memory_swappiness,omitempty"`
	// Memory reservation
	MemoryReservation int64 `protobuf:"varint,13,opt,name=memory_reservation,json=memoryReservation,proto3" json:"memory_reservation,omitempty"`
	// Kernel memory
	KernelMemory int64 `protobuf:"varint,14,opt,name=kernel_memory,json=kernelMemory,proto3" json:"kernel_memory,omitempty"`
	// OOM kill disable
	OomKillDisable bool `protobuf:"varint,15,opt,name=oom_kill_disable,json=oomKillDisable,proto3" json:"oom_kill_disable,omitempty"`
	// PID mode
	PidMode string `protobuf:"bytes,16,opt,name=pid_mode,json=pidMode,proto3" json:"pid_mode,omitempty"`
	// IPC mode
	IpcMode string `protobuf:"bytes,17,opt,name=ipc_mode,json=ipcMode,proto3" json:"ipc_mode,omitempty"`
	// UTS mode
	UtsMode string `protobuf:"bytes,18,opt,name=uts_mode,json=utsMode,proto3" json:"uts_mode,omitempty"`
	// Network mode
	NetworkMode string `protobuf:"bytes,19,opt,name=network_mode,json=networkMode,proto3" json:"network_mode,omitempty"`
	// Port bindings
	PortBindings []*PortBinding `protobuf:"bytes,20,rep,name=port_bindings,json=portBindings,proto3" json:"port_bindings,omitempty"`
	// Bind mounts
	Mounts []*Mount `protobuf:"bytes,21,rep,name=mounts,proto3" json:"mounts,omitempty"`
	// Volume binds
	Binds []string `protobuf:"bytes,22,rep,name=binds,proto3" json:"binds,omitempty"`
	// Volume driver
	VolumeDriver string `protobuf:"bytes,23,opt,name=volume_driver,json=volumeDriver,proto3" json:"volume_driver,omitempty"`
	// Volumes from
	VolumesFrom []string `protobuf:"bytes,24,rep,name=volumes_from,json=volumesFrom,proto3" json:"volumes_from,omitempty"`
	// Cap add
	CapAdd []string `protobuf:"bytes,25,rep,name=cap_add,json=capAdd,proto3" json:"cap_add,omitempty"`
	// Cap drop
	CapDrop []string `protobuf:"bytes,26,rep,name=cap_drop,json=capDrop,proto3" json:"cap_drop,omitempty"`
	// Security opt
	SecurityOpt []string `protobuf:"bytes,27,rep,name=security_opt,json=securityOpt,proto3" json:"security_opt,omitempty"`
	// Devices
	Devices []*DeviceMapping `protobuf:"bytes,28,rep,name=devices,proto3" json:"devices,omitempty"`
	// DNS
	Dns []string `protobuf:"bytes,29,rep,name=dns,proto3" json:"dns,omitempty"`
	// DNS search
	DnsSearch []string `protobuf:"bytes,30,rep,name=dns_search,json=dnsSearch,proto3" json:"dns_search,omitempty"`
	// DNS options
	DnsOptions []string `protobuf:"bytes,31,rep,name=dns_options,json=dnsOptions,proto3" json:"dns_options,omitempty"`
	// Extra hosts
	ExtraHosts []string `protobuf:"bytes,32,rep,name=extra_hosts,json=extraHosts,proto3" json:"extra_hosts,omitempty"`
	// Links
	Links []string `protobuf:"bytes,33,rep,name=links,proto3" json:"links,omitempty"`
	// Log config
	LogConfig *LogConfig `protobuf:"bytes,34,opt,name=log_config,json=logConfig,proto3" json:"log_config,omitempty"`
	// Restart policy
	RestartPolicy *RestartPolicy `protobuf:"bytes,35,opt,name=restart_policy,json=restartPolicy,proto3" json:"restart_policy,omitempty"`
	// Ulimits
	Ulimits []*Ulimit `protobuf:"bytes,36,rep,name=ulimits,proto3" json:"ulimits,omitempty"`
	// Tmpfs
	Tmpfs map[string]string `protobuf:"bytes,37,rep,name=tmpfs,proto3" json:"tmpfs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// SHM size
	ShmSize int64 `protobuf:"varint,38,opt,name=shm_size,json=shmSize,proto3" json:"shm_size,omitempty"`
	// Platform
	Platform string `protobuf:"bytes,39,opt,name=platform,proto3" json:"platform,omitempty"`
	// Runtime
	Runtime       string `protobuf:"bytes,40,opt,name=runtime,proto3" json:"runtime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostConfig) Reset() {
	*x = HostConfig{}
	mi := &file_container_v1_container_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostConfig) ProtoMessage() {}

func (x *HostConfig) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostConfig.ProtoReflect.Descriptor instead.
func (*HostConfig) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{1}
}

func (x *HostConfig) GetAutoRemove() bool {
	if x != nil {
		return x.AutoRemove
	}
	return false
}

func (x *HostConfig) GetPrivileged() bool {
	if x != nil {
		return x.Privileged
	}
	return false
}

func (x *HostConfig) GetReadOnlyRootfs() bool {
	if x != nil {
		return x.ReadOnlyRootfs
	}
	return false
}

func (x *HostConfig) GetCpuShares() int64 {
	if x != nil {
		return x.CpuShares
	}
	return 0
}

func (x *HostConfig) GetCpuPeriod() int64 {
	if x != nil {
		return x.CpuPeriod
	}
	return 0
}

func (x *HostConfig) GetCpuQuota() int64 {
	if x != nil {
		return x.CpuQuota
	}
	return 0
}

func (x *HostConfig) GetCpus() string {
	if x != nil {
		return x.Cpus
	}
	return ""
}

func (x *HostConfig) GetCpusetCpus() string {
	if x != nil {
		return x.CpusetCpus
	}
	return ""
}

func (x *HostConfig) GetCpusetMems() string {
	if x != nil {
		return x.CpusetMems
	}
	return ""
}

func (x *HostConfig) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *HostConfig) GetMemorySwap() int64 {
	if x != nil {
		return x.MemorySwap
	}
	return 0
}

func (x *HostConfig) GetMemorySwappiness() int64 {
	if x != nil {
		return x.MemorySwappiness
	}
	return 0
}

func (x *HostConfig) GetMemoryReservation() int64 {
	if x != nil {
		return x.MemoryReservation
	}
	return 0
}

func (x *HostConfig) GetKernelMemory() int64 {
	if x != nil {
		return x.KernelMemory
	}
	return 0
}

func (x *HostConfig) GetOomKillDisable() bool {
	if x != nil {
		return x.OomKillDisable
	}
	return false
}

func (x *HostConfig) GetPidMode() string {
	if x != nil {
		return x.PidMode
	}
	return ""
}

func (x *HostConfig) GetIpcMode() string {
	if x != nil {
		return x.IpcMode
	}
	return ""
}

func (x *HostConfig) GetUtsMode() string {
	if x != nil {
		return x.UtsMode
	}
	return ""
}

func (x *HostConfig) GetNetworkMode() string {
	if x != nil {
		return x.NetworkMode
	}
	return ""
}

func (x *HostConfig) GetPortBindings() []*PortBinding {
	if x != nil {
		return x.PortBindings
	}
	return nil
}

func (x *HostConfig) GetMounts() []*Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

func (x *HostConfig) GetBinds() []string {
	if x != nil {
		return x.Binds
	}
	return nil
}

func (x *HostConfig) GetVolumeDriver() string {
	if x != nil {
		return x.VolumeDriver
	}
	return ""
}

func (x *HostConfig) GetVolumesFrom() []string {
	if x != nil {
		return x.VolumesFrom
	}
	return nil
}

func (x *HostConfig) GetCapAdd() []string {
	if x != nil {
		return x.CapAdd
	}
	return nil
}

func (x *HostConfig) GetCapDrop() []string {
	if x != nil {
		return x.CapDrop
	}
	return nil
}

func (x *HostConfig) GetSecurityOpt() []string {
	if x != nil {
		return x.SecurityOpt
	}
	return nil
}

func (x *HostConfig) GetDevices() []*DeviceMapping {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *HostConfig) GetDns() []string {
	if x != nil {
		return x.Dns
	}
	return nil
}

func (x *HostConfig) GetDnsSearch() []string {
	if x != nil {
		return x.DnsSearch
	}
	return nil
}

func (x *HostConfig) GetDnsOptions() []string {
	if x != nil {
		return x.DnsOptions
	}
	return nil
}

func (x *HostConfig) GetExtraHosts() []string {
	if x != nil {
		return x.ExtraHosts
	}
	return nil
}

func (x *HostConfig) GetLinks() []string {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *HostConfig) GetLogConfig() *LogConfig {
	if x != nil {
		return x.LogConfig
	}
	return nil
}

func (x *HostConfig) GetRestartPolicy() *RestartPolicy {
	if x != nil {
		return x.RestartPolicy
	}
	return nil
}

func (x *HostConfig) GetUlimits() []*Ulimit {
	if x != nil {
		return x.Ulimits
	}
	return nil
}

func (x *HostConfig) GetTmpfs() map[string]string {
	if x != nil {
		return x.Tmpfs
	}
	return nil
}

func (x *HostConfig) GetShmSize() int64 {
	if x != nil {
		return x.ShmSize
	}
	return 0
}

func (x *HostConfig) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *HostConfig) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

// Network configuration
type NetworkConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// End points config
	EndpointsConfig map[string]*EndpointConfig `protobuf:"bytes,1,rep,name=endpoints_config,json=endpointsConfig,proto3" json:"endpoints_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	mi := &file_container_v1_container_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{2}
}

func (x *NetworkConfig) GetEndpointsConfig() map[string]*EndpointConfig {
	if x != nil {
		return x.EndpointsConfig
	}
	return nil
}

// Endpoint configuration
type EndpointConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// IP address
	IpAddress string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// IP prefix length
	IpPrefixLen int32 `protobuf:"varint,2,opt,name=ip_prefix_len,json=ipPrefixLen,proto3" json:"ip_prefix_len,omitempty"`
	// IPv6 gateway
	Ipv6Gateway string `protobuf:"bytes,3,opt,name=ipv6_gateway,json=ipv6Gateway,proto3" json:"ipv6_gateway,omitempty"`
	// Mac address
	MacAddress string `protobuf:"bytes,4,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// Network ID
	NetworkId string `protobuf:"bytes,5,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// Endpoint ID
	EndpointId    string `protobuf:"bytes,6,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndpointConfig) Reset() {
	*x = EndpointConfig{}
	mi := &file_container_v1_container_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndpointConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointConfig) ProtoMessage() {}

func (x *EndpointConfig) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointConfig.ProtoReflect.Descriptor instead.
func (*EndpointConfig) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{3}
}

func (x *EndpointConfig) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *EndpointConfig) GetIpPrefixLen() int32 {
	if x != nil {
		return x.IpPrefixLen
	}
	return 0
}

func (x *EndpointConfig) GetIpv6Gateway() string {
	if x != nil {
		return x.Ipv6Gateway
	}
	return ""
}

func (x *EndpointConfig) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *EndpointConfig) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *EndpointConfig) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

// Port binding configuration
type PortBinding struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container port
	ContainerPort string `protobuf:"bytes,1,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"`
	// Host IP
	HostIp string `protobuf:"bytes,2,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	// Host port
	HostPort string `protobuf:"bytes,3,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`
	// Protocol
	Protocol      string `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortBinding) Reset() {
	*x = PortBinding{}
	mi := &file_container_v1_container_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortBinding) ProtoMessage() {}

func (x *PortBinding) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortBinding.ProtoReflect.Descriptor instead.
func (*PortBinding) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{4}
}

func (x *PortBinding) GetContainerPort() string {
	if x != nil {
		return x.ContainerPort
	}
	return ""
}

func (x *PortBinding) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *PortBinding) GetHostPort() string {
	if x != nil {
		return x.HostPort
	}
	return ""
}

func (x *PortBinding) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

// Mount configuration
type Mount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Source
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Target
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	// Type
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Read only
	ReadOnly bool `protobuf:"varint,4,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	// Bind options
	BindOptions *BindOptions `protobuf:"bytes,5,opt,name=bind_options,json=bindOptions,proto3" json:"bind_options,omitempty"`
	// Volume options
	VolumeOptions *VolumeOptions `protobuf:"bytes,6,opt,name=volume_options,json=volumeOptions,proto3" json:"volume_options,omitempty"`
	// Tmpfs options
	TmpfsOptions  *TmpfsOptions `protobuf:"bytes,7,opt,name=tmpfs_options,json=tmpfsOptions,proto3" json:"tmpfs_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mount) Reset() {
	*x = Mount{}
	mi := &file_container_v1_container_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mount) ProtoMessage() {}

func (x *Mount) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mount.ProtoReflect.Descriptor instead.
func (*Mount) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{5}
}

func (x *Mount) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Mount) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Mount) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Mount) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *Mount) GetBindOptions() *BindOptions {
	if x != nil {
		return x.BindOptions
	}
	return nil
}

func (x *Mount) GetVolumeOptions() *VolumeOptions {
	if x != nil {
		return x.VolumeOptions
	}
	return nil
}

func (x *Mount) GetTmpfsOptions() *TmpfsOptions {
	if x != nil {
		return x.TmpfsOptions
	}
	return nil
}

// Bind options
type BindOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Propagation
	Propagation   string `protobuf:"bytes,1,opt,name=propagation,proto3" json:"propagation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BindOptions) Reset() {
	*x = BindOptions{}
	mi := &file_container_v1_container_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BindOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindOptions) ProtoMessage() {}

func (x *BindOptions) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindOptions.ProtoReflect.Descriptor instead.
func (*BindOptions) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{6}
}

func (x *BindOptions) GetPropagation() string {
	if x != nil {
		return x.Propagation
	}
	return ""
}

// Volume options
type VolumeOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// No copy
	NoCopy bool `protobuf:"varint,1,opt,name=no_copy,json=noCopy,proto3" json:"no_copy,omitempty"`
	// Driver config
	DriverConfig  map[string]string `protobuf:"bytes,2,rep,name=driver_config,json=driverConfig,proto3" json:"driver_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumeOptions) Reset() {
	*x = VolumeOptions{}
	mi := &file_container_v1_container_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeOptions) ProtoMessage() {}

func (x *VolumeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeOptions.ProtoReflect.Descriptor instead.
func (*VolumeOptions) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{7}
}

func (x *VolumeOptions) GetNoCopy() bool {
	if x != nil {
		return x.NoCopy
	}
	return false
}

func (x *VolumeOptions) GetDriverConfig() map[string]string {
	if x != nil {
		return x.DriverConfig
	}
	return nil
}

// Tmpfs options
type TmpfsOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Size bytes
	SizeBytes int64 `protobuf:"varint,1,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	// Mode
	Mode          int32 `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TmpfsOptions) Reset() {
	*x = TmpfsOptions{}
	mi := &file_container_v1_container_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TmpfsOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmpfsOptions) ProtoMessage() {}

func (x *TmpfsOptions) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmpfsOptions.ProtoReflect.Descriptor instead.
func (*TmpfsOptions) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{8}
}

func (x *TmpfsOptions) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *TmpfsOptions) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

// Device mapping
type DeviceMapping struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Path on host
	PathOnHost string `protobuf:"bytes,1,opt,name=path_on_host,json=pathOnHost,proto3" json:"path_on_host,omitempty"`
	// Path in container
	PathInContainer string `protobuf:"bytes,2,opt,name=path_in_container,json=pathInContainer,proto3" json:"path_in_container,omitempty"`
	// Cgroup permissions
	CgroupPermissions string `protobuf:"bytes,3,opt,name=cgroup_permissions,json=cgroupPermissions,proto3" json:"cgroup_permissions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeviceMapping) Reset() {
	*x = DeviceMapping{}
	mi := &file_container_v1_container_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceMapping) ProtoMessage() {}

func (x *DeviceMapping) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceMapping.ProtoReflect.Descriptor instead.
func (*DeviceMapping) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceMapping) GetPathOnHost() string {
	if x != nil {
		return x.PathOnHost
	}
	return ""
}

func (x *DeviceMapping) GetPathInContainer() string {
	if x != nil {
		return x.PathInContainer
	}
	return ""
}

func (x *DeviceMapping) GetCgroupPermissions() string {
	if x != nil {
		return x.CgroupPermissions
	}
	return ""
}

// Log configuration
type LogConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Config
	Config        map[string]string `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogConfig) Reset() {
	*x = LogConfig{}
	mi := &file_container_v1_container_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogConfig) ProtoMessage() {}

func (x *LogConfig) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogConfig.ProtoReflect.Descriptor instead.
func (*LogConfig) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{10}
}

func (x *LogConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LogConfig) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

// Restart policy
type RestartPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Maximum retry count
	MaximumRetryCount int32 `protobuf:"varint,2,opt,name=maximum_retry_count,json=maximumRetryCount,proto3" json:"maximum_retry_count,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RestartPolicy) Reset() {
	*x = RestartPolicy{}
	mi := &file_container_v1_container_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartPolicy) ProtoMessage() {}

func (x *RestartPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartPolicy.ProtoReflect.Descriptor instead.
func (*RestartPolicy) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{11}
}

func (x *RestartPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RestartPolicy) GetMaximumRetryCount() int32 {
	if x != nil {
		return x.MaximumRetryCount
	}
	return 0
}

// Health check configuration
type HealthConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Test command
	Test []string `protobuf:"bytes,1,rep,name=test,proto3" json:"test,omitempty"`
	// Interval
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// Timeout
	Timeout string `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Start period
	StartPeriod string `protobuf:"bytes,4,opt,name=start_period,json=startPeriod,proto3" json:"start_period,omitempty"`
	// Retries
	Retries       int32 `protobuf:"varint,5,opt,name=retries,proto3" json:"retries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthConfig) Reset() {
	*x = HealthConfig{}
	mi := &file_container_v1_container_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthConfig) ProtoMessage() {}

func (x *HealthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthConfig.ProtoReflect.Descriptor instead.
func (*HealthConfig) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{12}
}

func (x *HealthConfig) GetTest() []string {
	if x != nil {
		return x.Test
	}
	return nil
}

func (x *HealthConfig) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *HealthConfig) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

func (x *HealthConfig) GetStartPeriod() string {
	if x != nil {
		return x.StartPeriod
	}
	return ""
}

func (x *HealthConfig) GetRetries() int32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

// Ulimit configuration
type Ulimit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Soft limit
	Soft int64 `protobuf:"varint,2,opt,name=soft,proto3" json:"soft,omitempty"`
	// Hard limit
	Hard          int64 `protobuf:"varint,3,opt,name=hard,proto3" json:"hard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ulimit) Reset() {
	*x = Ulimit{}
	mi := &file_container_v1_container_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ulimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ulimit) ProtoMessage() {}

func (x *Ulimit) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ulimit.ProtoReflect.Descriptor instead.
func (*Ulimit) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{13}
}

func (x *Ulimit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ulimit) GetSoft() int64 {
	if x != nil {
		return x.Soft
	}
	return 0
}

func (x *Ulimit) GetHard() int64 {
	if x != nil {
		return x.Hard
	}
	return 0
}

// Container state information
type ContainerState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Running
	Running bool `protobuf:"varint,2,opt,name=running,proto3" json:"running,omitempty"`
	// Paused
	Paused bool `protobuf:"varint,3,opt,name=paused,proto3" json:"paused,omitempty"`
	// Restarting
	Restarting bool `protobuf:"varint,4,opt,name=restarting,proto3" json:"restarting,omitempty"`
	// OOM killed
	OomKilled bool `protobuf:"varint,5,opt,name=oom_killed,json=oomKilled,proto3" json:"oom_killed,omitempty"`
	// Dead
	Dead bool `protobuf:"varint,6,opt,name=dead,proto3" json:"dead,omitempty"`
	// PID
	Pid int32 `protobuf:"varint,7,opt,name=pid,proto3" json:"pid,omitempty"`
	// Exit code
	ExitCode int32 `protobuf:"varint,8,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Error
	Error string `protobuf:"bytes,9,opt,name=error,proto3" json:"error,omitempty"`
	// Started at
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Finished at
	FinishedAt    *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerState) Reset() {
	*x = ContainerState{}
	mi := &file_container_v1_container_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerState) ProtoMessage() {}

func (x *ContainerState) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerState.ProtoReflect.Descriptor instead.
func (*ContainerState) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{14}
}

func (x *ContainerState) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ContainerState) GetRunning() bool {
	if x != nil {
		return x.Running
	}
	return false
}

func (x *ContainerState) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

func (x *ContainerState) GetRestarting() bool {
	if x != nil {
		return x.Restarting
	}
	return false
}

func (x *ContainerState) GetOomKilled() bool {
	if x != nil {
		return x.OomKilled
	}
	return false
}

func (x *ContainerState) GetDead() bool {
	if x != nil {
		return x.Dead
	}
	return false
}

func (x *ContainerState) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ContainerState) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ContainerState) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ContainerState) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ContainerState) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

// Container information
type Container struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Names
	Names []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	// Image
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// Image ID
	ImageId string `protobuf:"bytes,4,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// Command
	Command string `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
	// Created
	Created *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	// Ports
	Ports []*ContainerPort `protobuf:"bytes,7,rep,name=ports,proto3" json:"ports,omitempty"`
	// Size RW
	SizeRw int64 `protobuf:"varint,8,opt,name=size_rw,json=sizeRw,proto3" json:"size_rw,omitempty"`
	// Size root fs
	SizeRootFs int64 `protobuf:"varint,9,opt,name=size_root_fs,json=sizeRootFs,proto3" json:"size_root_fs,omitempty"`
	// Labels
	Labels map[string]string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// State
	State string `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"`
	// Status
	Status string `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// Host config
	HostConfig *HostConfig `protobuf:"bytes,13,opt,name=host_config,json=hostConfig,proto3" json:"host_config,omitempty"`
	// Network settings
	NetworkSettings *NetworkConfig `protobuf:"bytes,14,opt,name=network_settings,json=networkSettings,proto3" json:"network_settings,omitempty"`
	// Mounts
	Mounts        []*Mount `protobuf:"bytes,15,rep,name=mounts,proto3" json:"mounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Container) Reset() {
	*x = Container{}
	mi := &file_container_v1_container_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{15}
}

func (x *Container) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Container) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *Container) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Container) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *Container) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Container) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Container) GetPorts() []*ContainerPort {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Container) GetSizeRw() int64 {
	if x != nil {
		return x.SizeRw
	}
	return 0
}

func (x *Container) GetSizeRootFs() int64 {
	if x != nil {
		return x.SizeRootFs
	}
	return 0
}

func (x *Container) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Container) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Container) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Container) GetHostConfig() *HostConfig {
	if x != nil {
		return x.HostConfig
	}
	return nil
}

func (x *Container) GetNetworkSettings() *NetworkConfig {
	if x != nil {
		return x.NetworkSettings
	}
	return nil
}

func (x *Container) GetMounts() []*Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

// Container port information
type ContainerPort struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// IP
	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	// Private port
	PrivatePort int32 `protobuf:"varint,2,opt,name=private_port,json=privatePort,proto3" json:"private_port,omitempty"`
	// Public port
	PublicPort int32 `protobuf:"varint,3,opt,name=public_port,json=publicPort,proto3" json:"public_port,omitempty"`
	// Type
	Type          string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerPort) Reset() {
	*x = ContainerPort{}
	mi := &file_container_v1_container_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerPort) ProtoMessage() {}

func (x *ContainerPort) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerPort.ProtoReflect.Descriptor instead.
func (*ContainerPort) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{16}
}

func (x *ContainerPort) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ContainerPort) GetPrivatePort() int32 {
	if x != nil {
		return x.PrivatePort
	}
	return 0
}

func (x *ContainerPort) GetPublicPort() int32 {
	if x != nil {
		return x.PublicPort
	}
	return 0
}

func (x *ContainerPort) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Container statistics
type ContainerStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// CPU stats
	CpuStats *CPUStats `protobuf:"bytes,3,opt,name=cpu_stats,json=cpuStats,proto3" json:"cpu_stats,omitempty"`
	// Memory stats
	MemoryStats *MemoryStats `protobuf:"bytes,4,opt,name=memory_stats,json=memoryStats,proto3" json:"memory_stats,omitempty"`
	// Network stats
	NetworkStats map[string]*NetworkStats `protobuf:"bytes,5,rep,name=network_stats,json=networkStats,proto3" json:"network_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Block I/O stats
	BlockIoStats *BlockIOStats `protobuf:"bytes,6,opt,name=block_io_stats,json=blockIoStats,proto3" json:"block_io_stats,omitempty"`
	// PID stats
	PidStats *PIDStats `protobuf:"bytes,7,opt,name=pid_stats,json=pidStats,proto3" json:"pid_stats,omitempty"`
	// Read timestamp
	Read          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=read,proto3" json:"read,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStats) Reset() {
	*x = ContainerStats{}
	mi := &file_container_v1_container_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStats) ProtoMessage() {}

func (x *ContainerStats) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStats.ProtoReflect.Descriptor instead.
func (*ContainerStats) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{17}
}

func (x *ContainerStats) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerStats) GetCpuStats() *CPUStats {
	if x != nil {
		return x.CpuStats
	}
	return nil
}

func (x *ContainerStats) GetMemoryStats() *MemoryStats {
	if x != nil {
		return x.MemoryStats
	}
	return nil
}

func (x *ContainerStats) GetNetworkStats() map[string]*NetworkStats {
	if x != nil {
		return x.NetworkStats
	}
	return nil
}

func (x *ContainerStats) GetBlockIoStats() *BlockIOStats {
	if x != nil {
		return x.BlockIoStats
	}
	return nil
}

func (x *ContainerStats) GetPidStats() *PIDStats {
	if x != nil {
		return x.PidStats
	}
	return nil
}

func (x *ContainerStats) GetRead() *timestamppb.Timestamp {
	if x != nil {
		return x.Read
	}
	return nil
}

// CPU statistics
type CPUStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CPU usage
	CpuUsage *CPUUsage `protobuf:"bytes,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	// System CPU usage
	SystemCpuUsage uint64 `protobuf:"varint,2,opt,name=system_cpu_usage,json=systemCpuUsage,proto3" json:"system_cpu_usage,omitempty"`
	// Online CPUs
	OnlineCpus uint32 `protobuf:"varint,3,opt,name=online_cpus,json=onlineCpus,proto3" json:"online_cpus,omitempty"`
	// Throttling data
	ThrottlingData *ThrottlingData `protobuf:"bytes,4,opt,name=throttling_data,json=throttlingData,proto3" json:"throttling_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CPUStats) Reset() {
	*x = CPUStats{}
	mi := &file_container_v1_container_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUStats) ProtoMessage() {}

func (x *CPUStats) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUStats.ProtoReflect.Descriptor instead.
func (*CPUStats) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{18}
}

func (x *CPUStats) GetCpuUsage() *CPUUsage {
	if x != nil {
		return x.CpuUsage
	}
	return nil
}

func (x *CPUStats) GetSystemCpuUsage() uint64 {
	if x != nil {
		return x.SystemCpuUsage
	}
	return 0
}

func (x *CPUStats) GetOnlineCpus() uint32 {
	if x != nil {
		return x.OnlineCpus
	}
	return 0
}

func (x *CPUStats) GetThrottlingData() *ThrottlingData {
	if x != nil {
		return x.ThrottlingData
	}
	return nil
}

// CPU usage
type CPUUsage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total usage
	TotalUsage uint64 `protobuf:"varint,1,opt,name=total_usage,json=totalUsage,proto3" json:"total_usage,omitempty"`
	// Usage in user mode
	UsageInUsermode uint64 `protobuf:"varint,2,opt,name=usage_in_usermode,json=usageInUsermode,proto3" json:"usage_in_usermode,omitempty"`
	// Usage in kernel mode
	UsageInKernelmode uint64 `protobuf:"varint,3,opt,name=usage_in_kernelmode,json=usageInKernelmode,proto3" json:"usage_in_kernelmode,omitempty"`
	// Per CPU usage
	PercpuUsage   []uint64 `protobuf:"varint,4,rep,packed,name=percpu_usage,json=percpuUsage,proto3" json:"percpu_usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPUUsage) Reset() {
	*x = CPUUsage{}
	mi := &file_container_v1_container_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUUsage) ProtoMessage() {}

func (x *CPUUsage) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUUsage.ProtoReflect.Descriptor instead.
func (*CPUUsage) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{19}
}

func (x *CPUUsage) GetTotalUsage() uint64 {
	if x != nil {
		return x.TotalUsage
	}
	return 0
}

func (x *CPUUsage) GetUsageInUsermode() uint64 {
	if x != nil {
		return x.UsageInUsermode
	}
	return 0
}

func (x *CPUUsage) GetUsageInKernelmode() uint64 {
	if x != nil {
		return x.UsageInKernelmode
	}
	return 0
}

func (x *CPUUsage) GetPercpuUsage() []uint64 {
	if x != nil {
		return x.PercpuUsage
	}
	return nil
}

// Throttling data
type ThrottlingData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Periods
	Periods uint64 `protobuf:"varint,1,opt,name=periods,proto3" json:"periods,omitempty"`
	// Throttled periods
	ThrottledPeriods uint64 `protobuf:"varint,2,opt,name=throttled_periods,json=throttledPeriods,proto3" json:"throttled_periods,omitempty"`
	// Throttled time
	ThrottledTime uint64 `protobuf:"varint,3,opt,name=throttled_time,json=throttledTime,proto3" json:"throttled_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThrottlingData) Reset() {
	*x = ThrottlingData{}
	mi := &file_container_v1_container_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThrottlingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThrottlingData) ProtoMessage() {}

func (x *ThrottlingData) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThrottlingData.ProtoReflect.Descriptor instead.
func (*ThrottlingData) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{20}
}

func (x *ThrottlingData) GetPeriods() uint64 {
	if x != nil {
		return x.Periods
	}
	return 0
}

func (x *ThrottlingData) GetThrottledPeriods() uint64 {
	if x != nil {
		return x.ThrottledPeriods
	}
	return 0
}

func (x *ThrottlingData) GetThrottledTime() uint64 {
	if x != nil {
		return x.ThrottledTime
	}
	return 0
}

// Memory statistics
type MemoryStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Usage
	Usage uint64 `protobuf:"varint,1,opt,name=usage,proto3" json:"usage,omitempty"`
	// Max usage
	MaxUsage uint64 `protobuf:"varint,2,opt,name=max_usage,json=maxUsage,proto3" json:"max_usage,omitempty"`
	// Stats
	Stats map[string]uint64 `protobuf:"bytes,3,rep,name=stats,proto3" json:"stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Failcnt
	Failcnt uint64 `protobuf:"varint,4,opt,name=failcnt,proto3" json:"failcnt,omitempty"`
	// Limit
	Limit         uint64 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryStats) Reset() {
	*x = MemoryStats{}
	mi := &file_container_v1_container_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryStats) ProtoMessage() {}

func (x *MemoryStats) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryStats.ProtoReflect.Descriptor instead.
func (*MemoryStats) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{21}
}

func (x *MemoryStats) GetUsage() uint64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *MemoryStats) GetMaxUsage() uint64 {
	if x != nil {
		return x.MaxUsage
	}
	return 0
}

func (x *MemoryStats) GetStats() map[string]uint64 {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *MemoryStats) GetFailcnt() uint64 {
	if x != nil {
		return x.Failcnt
	}
	return 0
}

func (x *MemoryStats) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Network statistics
type NetworkStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// RX bytes
	RxBytes uint64 `protobuf:"varint,1,opt,name=rx_bytes,json=rxBytes,proto3" json:"rx_bytes,omitempty"`
	// RX packets
	RxPackets uint64 `protobuf:"varint,2,opt,name=rx_packets,json=rxPackets,proto3" json:"rx_packets,omitempty"`
	// RX errors
	RxErrors uint64 `protobuf:"varint,3,opt,name=rx_errors,json=rxErrors,proto3" json:"rx_errors,omitempty"`
	// RX dropped
	RxDropped uint64 `protobuf:"varint,4,opt,name=rx_dropped,json=rxDropped,proto3" json:"rx_dropped,omitempty"`
	// TX bytes
	TxBytes uint64 `protobuf:"varint,5,opt,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes,omitempty"`
	// TX packets
	TxPackets uint64 `protobuf:"varint,6,opt,name=tx_packets,json=txPackets,proto3" json:"tx_packets,omitempty"`
	// TX errors
	TxErrors uint64 `protobuf:"varint,7,opt,name=tx_errors,json=txErrors,proto3" json:"tx_errors,omitempty"`
	// TX dropped
	TxDropped     uint64 `protobuf:"varint,8,opt,name=tx_dropped,json=txDropped,proto3" json:"tx_dropped,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkStats) Reset() {
	*x = NetworkStats{}
	mi := &file_container_v1_container_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStats) ProtoMessage() {}

func (x *NetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStats.ProtoReflect.Descriptor instead.
func (*NetworkStats) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{22}
}

func (x *NetworkStats) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *NetworkStats) GetRxPackets() uint64 {
	if x != nil {
		return x.RxPackets
	}
	return 0
}

func (x *NetworkStats) GetRxErrors() uint64 {
	if x != nil {
		return x.RxErrors
	}
	return 0
}

func (x *NetworkStats) GetRxDropped() uint64 {
	if x != nil {
		return x.RxDropped
	}
	return 0
}

func (x *NetworkStats) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *NetworkStats) GetTxPackets() uint64 {
	if x != nil {
		return x.TxPackets
	}
	return 0
}

func (x *NetworkStats) GetTxErrors() uint64 {
	if x != nil {
		return x.TxErrors
	}
	return 0
}

func (x *NetworkStats) GetTxDropped() uint64 {
	if x != nil {
		return x.TxDropped
	}
	return 0
}

// Block I/O statistics
type BlockIOStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// I/O service bytes recursive
	IoServiceBytesRecursive []*BlkioStatEntry `protobuf:"bytes,1,rep,name=io_service_bytes_recursive,json=ioServiceBytesRecursive,proto3" json:"io_service_bytes_recursive,omitempty"`
	// I/O serviced recursive
	IoServicedRecursive []*BlkioStatEntry `protobuf:"bytes,2,rep,name=io_serviced_recursive,json=ioServicedRecursive,proto3" json:"io_serviced_recursive,omitempty"`
	// I/O queue recursive
	IoQueueRecursive []*BlkioStatEntry `protobuf:"bytes,3,rep,name=io_queue_recursive,json=ioQueueRecursive,proto3" json:"io_queue_recursive,omitempty"`
	// I/O service time recursive
	IoServiceTimeRecursive []*BlkioStatEntry `protobuf:"bytes,4,rep,name=io_service_time_recursive,json=ioServiceTimeRecursive,proto3" json:"io_service_time_recursive,omitempty"`
	// I/O wait time recursive
	IoWaitTimeRecursive []*BlkioStatEntry `protobuf:"bytes,5,rep,name=io_wait_time_recursive,json=ioWaitTimeRecursive,proto3" json:"io_wait_time_recursive,omitempty"`
	// I/O merged recursive
	IoMergedRecursive []*BlkioStatEntry `protobuf:"bytes,6,rep,name=io_merged_recursive,json=ioMergedRecursive,proto3" json:"io_merged_recursive,omitempty"`
	// I/O time recursive
	IoTimeRecursive []*BlkioStatEntry `protobuf:"bytes,7,rep,name=io_time_recursive,json=ioTimeRecursive,proto3" json:"io_time_recursive,omitempty"`
	// Sectors recursive
	SectorsRecursive []*BlkioStatEntry `protobuf:"bytes,8,rep,name=sectors_recursive,json=sectorsRecursive,proto3" json:"sectors_recursive,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BlockIOStats) Reset() {
	*x = BlockIOStats{}
	mi := &file_container_v1_container_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockIOStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockIOStats) ProtoMessage() {}

func (x *BlockIOStats) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockIOStats.ProtoReflect.Descriptor instead.
func (*BlockIOStats) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{23}
}

func (x *BlockIOStats) GetIoServiceBytesRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoServiceBytesRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoServicedRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoServicedRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoQueueRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoQueueRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoServiceTimeRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoServiceTimeRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoWaitTimeRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoWaitTimeRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoMergedRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoMergedRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoTimeRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoTimeRecursive
	}
	return nil
}

func (x *BlockIOStats) GetSectorsRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.SectorsRecursive
	}
	return nil
}

// Block I/O statistics entry
type BlkioStatEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Major
	Major uint64 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	// Minor
	Minor uint64 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	// Operation
	Op string `protobuf:"bytes,3,opt,name=op,proto3" json:"op,omitempty"`
	// Value
	Value         uint64 `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlkioStatEntry) Reset() {
	*x = BlkioStatEntry{}
	mi := &file_container_v1_container_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlkioStatEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlkioStatEntry) ProtoMessage() {}

func (x *BlkioStatEntry) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlkioStatEntry.ProtoReflect.Descriptor instead.
func (*BlkioStatEntry) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{24}
}

func (x *BlkioStatEntry) GetMajor() uint64 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *BlkioStatEntry) GetMinor() uint64 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *BlkioStatEntry) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *BlkioStatEntry) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// PID statistics
type PIDStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Current
	Current uint64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	// Limit
	Limit         uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PIDStats) Reset() {
	*x = PIDStats{}
	mi := &file_container_v1_container_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PIDStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PIDStats) ProtoMessage() {}

func (x *PIDStats) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PIDStats.ProtoReflect.Descriptor instead.
func (*PIDStats) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{25}
}

func (x *PIDStats) GetCurrent() uint64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PIDStats) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Request and response messages
type CreateContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Container config
	Config *ContainerConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// Host config
	HostConfig *HostConfig `protobuf:"bytes,3,opt,name=host_config,json=hostConfig,proto3" json:"host_config,omitempty"`
	// Network config
	NetworkConfig *NetworkConfig `protobuf:"bytes,4,opt,name=network_config,json=networkConfig,proto3" json:"network_config,omitempty"`
	// Platform
	Platform      string `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContainerRequest) Reset() {
	*x = CreateContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRequest) ProtoMessage() {}

func (x *CreateContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRequest.ProtoReflect.Descriptor instead.
func (*CreateContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{26}
}

func (x *CreateContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateContainerRequest) GetConfig() *ContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateContainerRequest) GetHostConfig() *HostConfig {
	if x != nil {
		return x.HostConfig
	}
	return nil
}

func (x *CreateContainerRequest) GetNetworkConfig() *NetworkConfig {
	if x != nil {
		return x.NetworkConfig
	}
	return nil
}

func (x *CreateContainerRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type CreateContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Warnings
	Warnings      []string `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContainerResponse) Reset() {
	*x = CreateContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerResponse) ProtoMessage() {}

func (x *CreateContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerResponse.ProtoReflect.Descriptor instead.
func (*CreateContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{27}
}

func (x *CreateContainerResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateContainerResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type StartContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Detach keys
	DetachKeys    string `protobuf:"bytes,2,opt,name=detach_keys,json=detachKeys,proto3" json:"detach_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartContainerRequest) Reset() {
	*x = StartContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartContainerRequest) ProtoMessage() {}

func (x *StartContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartContainerRequest.ProtoReflect.Descriptor instead.
func (*StartContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{28}
}

func (x *StartContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *StartContainerRequest) GetDetachKeys() string {
	if x != nil {
		return x.DetachKeys
	}
	return ""
}

type StartContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartContainerResponse) Reset() {
	*x = StartContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartContainerResponse) ProtoMessage() {}

func (x *StartContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartContainerResponse.ProtoReflect.Descriptor instead.
func (*StartContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{29}
}

func (x *StartContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Timeout
	Timeout       int32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopContainerRequest) Reset() {
	*x = StopContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopContainerRequest) ProtoMessage() {}

func (x *StopContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopContainerRequest.ProtoReflect.Descriptor instead.
func (*StopContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{30}
}

func (x *StopContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *StopContainerRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type StopContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopContainerResponse) Reset() {
	*x = StopContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopContainerResponse) ProtoMessage() {}

func (x *StopContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopContainerResponse.ProtoReflect.Descriptor instead.
func (*StopContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{31}
}

func (x *StopContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RestartContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Timeout
	Timeout       int32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartContainerRequest) Reset() {
	*x = RestartContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartContainerRequest) ProtoMessage() {}

func (x *RestartContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartContainerRequest.ProtoReflect.Descriptor instead.
func (*RestartContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{32}
}

func (x *RestartContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *RestartContainerRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type RestartContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartContainerResponse) Reset() {
	*x = RestartContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartContainerResponse) ProtoMessage() {}

func (x *RestartContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartContainerResponse.ProtoReflect.Descriptor instead.
func (*RestartContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{33}
}

func (x *RestartContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RestartContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RemoveContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Force removal
	Force bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	// Remove volumes
	Volumes bool `protobuf:"varint,3,opt,name=volumes,proto3" json:"volumes,omitempty"`
	// Remove links
	Link          bool `protobuf:"varint,4,opt,name=link,proto3" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveContainerRequest) Reset() {
	*x = RemoveContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContainerRequest) ProtoMessage() {}

func (x *RemoveContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContainerRequest.ProtoReflect.Descriptor instead.
func (*RemoveContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{34}
}

func (x *RemoveContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *RemoveContainerRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *RemoveContainerRequest) GetVolumes() bool {
	if x != nil {
		return x.Volumes
	}
	return false
}

func (x *RemoveContainerRequest) GetLink() bool {
	if x != nil {
		return x.Link
	}
	return false
}

type RemoveContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveContainerResponse) Reset() {
	*x = RemoveContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContainerResponse) ProtoMessage() {}

func (x *RemoveContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContainerResponse.ProtoReflect.Descriptor instead.
func (*RemoveContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{35}
}

func (x *RemoveContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RunContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Container config
	Config *ContainerConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// Host config
	HostConfig *HostConfig `protobuf:"bytes,3,opt,name=host_config,json=hostConfig,proto3" json:"host_config,omitempty"`
	// Network config
	NetworkConfig *NetworkConfig `protobuf:"bytes,4,opt,name=network_config,json=networkConfig,proto3" json:"network_config,omitempty"`
	// Platform
	Platform string `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	// Detach
	Detach bool `protobuf:"varint,6,opt,name=detach,proto3" json:"detach,omitempty"`
	// Interactive
	Interactive bool `protobuf:"varint,7,opt,name=interactive,proto3" json:"interactive,omitempty"`
	// TTY
	Tty           bool `protobuf:"varint,8,opt,name=tty,proto3" json:"tty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunContainerRequest) Reset() {
	*x = RunContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunContainerRequest) ProtoMessage() {}

func (x *RunContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunContainerRequest.ProtoReflect.Descriptor instead.
func (*RunContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{36}
}

func (x *RunContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunContainerRequest) GetConfig() *ContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *RunContainerRequest) GetHostConfig() *HostConfig {
	if x != nil {
		return x.HostConfig
	}
	return nil
}

func (x *RunContainerRequest) GetNetworkConfig() *NetworkConfig {
	if x != nil {
		return x.NetworkConfig
	}
	return nil
}

func (x *RunContainerRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *RunContainerRequest) GetDetach() bool {
	if x != nil {
		return x.Detach
	}
	return false
}

func (x *RunContainerRequest) GetInteractive() bool {
	if x != nil {
		return x.Interactive
	}
	return false
}

func (x *RunContainerRequest) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

type RunContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Exit code (only for non-detached runs)
	ExitCode int32 `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Output (only for non-detached runs)
	Output        string `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunContainerResponse) Reset() {
	*x = RunContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunContainerResponse) ProtoMessage() {}

func (x *RunContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunContainerResponse.ProtoReflect.Descriptor instead.
func (*RunContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{37}
}

func (x *RunContainerResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RunContainerResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *RunContainerResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type ExecContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Command to execute
	Command []string `protobuf:"bytes,2,rep,name=command,proto3" json:"command,omitempty"`
	// Detach
	Detach bool `protobuf:"varint,3,opt,name=detach,proto3" json:"detach,omitempty"`
	// Interactive
	Interactive bool `protobuf:"varint,4,opt,name=interactive,proto3" json:"interactive,omitempty"`
	// TTY
	Tty bool `protobuf:"varint,5,opt,name=tty,proto3" json:"tty,omitempty"`
	// User
	User string `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	// Workdir
	Workdir string `protobuf:"bytes,7,opt,name=workdir,proto3" json:"workdir,omitempty"`
	// Environment variables
	Env           []string `protobuf:"bytes,8,rep,name=env,proto3" json:"env,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecContainerRequest) Reset() {
	*x = ExecContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecContainerRequest) ProtoMessage() {}

func (x *ExecContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecContainerRequest.ProtoReflect.Descriptor instead.
func (*ExecContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{38}
}

func (x *ExecContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ExecContainerRequest) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ExecContainerRequest) GetDetach() bool {
	if x != nil {
		return x.Detach
	}
	return false
}

func (x *ExecContainerRequest) GetInteractive() bool {
	if x != nil {
		return x.Interactive
	}
	return false
}

func (x *ExecContainerRequest) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

func (x *ExecContainerRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ExecContainerRequest) GetWorkdir() string {
	if x != nil {
		return x.Workdir
	}
	return ""
}

func (x *ExecContainerRequest) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

type ExecContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Exec ID
	ExecId string `protobuf:"bytes,1,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	// Exit code (only for non-detached execs)
	ExitCode int32 `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Output (only for non-detached execs)
	Output        string `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecContainerResponse) Reset() {
	*x = ExecContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecContainerResponse) ProtoMessage() {}

func (x *ExecContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecContainerResponse.ProtoReflect.Descriptor instead.
func (*ExecContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{39}
}

func (x *ExecContainerResponse) GetExecId() string {
	if x != nil {
		return x.ExecId
	}
	return ""
}

func (x *ExecContainerResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ExecContainerResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type PauseContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId   string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseContainerRequest) Reset() {
	*x = PauseContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseContainerRequest) ProtoMessage() {}

func (x *PauseContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseContainerRequest.ProtoReflect.Descriptor instead.
func (*PauseContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{40}
}

func (x *PauseContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type PauseContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseContainerResponse) Reset() {
	*x = PauseContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseContainerResponse) ProtoMessage() {}

func (x *PauseContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseContainerResponse.ProtoReflect.Descriptor instead.
func (*PauseContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{41}
}

func (x *PauseContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PauseContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UnpauseContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId   string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpauseContainerRequest) Reset() {
	*x = UnpauseContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseContainerRequest) ProtoMessage() {}

func (x *UnpauseContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseContainerRequest.ProtoReflect.Descriptor instead.
func (*UnpauseContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{42}
}

func (x *UnpauseContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type UnpauseContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpauseContainerResponse) Reset() {
	*x = UnpauseContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseContainerResponse) ProtoMessage() {}

func (x *UnpauseContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseContainerResponse.ProtoReflect.Descriptor instead.
func (*UnpauseContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{43}
}

func (x *UnpauseContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnpauseContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListContainersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// All containers
	All bool `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
	// Limit
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Size
	Size bool `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// Filters
	Filters       map[string]string `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersRequest) Reset() {
	*x = ListContainersRequest{}
	mi := &file_container_v1_container_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersRequest) ProtoMessage() {}

func (x *ListContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersRequest.ProtoReflect.Descriptor instead.
func (*ListContainersRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{44}
}

func (x *ListContainersRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ListContainersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListContainersRequest) GetSize() bool {
	if x != nil {
		return x.Size
	}
	return false
}

func (x *ListContainersRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListContainersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Containers
	Containers    []*Container `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersResponse) Reset() {
	*x = ListContainersResponse{}
	mi := &file_container_v1_container_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersResponse) ProtoMessage() {}

func (x *ListContainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersResponse.ProtoReflect.Descriptor instead.
func (*ListContainersResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{45}
}

func (x *ListContainersResponse) GetContainers() []*Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

type GetContainerLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Follow
	Follow bool `protobuf:"varint,2,opt,name=follow,proto3" json:"follow,omitempty"`
	// Show stdout
	Stdout bool `protobuf:"varint,3,opt,name=stdout,proto3" json:"stdout,omitempty"`
	// Show stderr
	Stderr bool `protobuf:"varint,4,opt,name=stderr,proto3" json:"stderr,omitempty"`
	// Since timestamp
	Since string `protobuf:"bytes,5,opt,name=since,proto3" json:"since,omitempty"`
	// Until timestamp
	Until string `protobuf:"bytes,6,opt,name=until,proto3" json:"until,omitempty"`
	// Timestamps
	Timestamps bool `protobuf:"varint,7,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
	// Tail
	Tail          string `protobuf:"bytes,8,opt,name=tail,proto3" json:"tail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerLogsRequest) Reset() {
	*x = GetContainerLogsRequest{}
	mi := &file_container_v1_container_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerLogsRequest) ProtoMessage() {}

func (x *GetContainerLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerLogsRequest.ProtoReflect.Descriptor instead.
func (*GetContainerLogsRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{46}
}

func (x *GetContainerLogsRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *GetContainerLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *GetContainerLogsRequest) GetStdout() bool {
	if x != nil {
		return x.Stdout
	}
	return false
}

func (x *GetContainerLogsRequest) GetStderr() bool {
	if x != nil {
		return x.Stderr
	}
	return false
}

func (x *GetContainerLogsRequest) GetSince() string {
	if x != nil {
		return x.Since
	}
	return ""
}

func (x *GetContainerLogsRequest) GetUntil() string {
	if x != nil {
		return x.Until
	}
	return ""
}

func (x *GetContainerLogsRequest) GetTimestamps() bool {
	if x != nil {
		return x.Timestamps
	}
	return false
}

func (x *GetContainerLogsRequest) GetTail() string {
	if x != nil {
		return x.Tail
	}
	return ""
}

type GetContainerLogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Log data
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Stream (stdout/stderr)
	Stream string `protobuf:"bytes,2,opt,name=stream,proto3" json:"stream,omitempty"`
	// Timestamp
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerLogsResponse) Reset() {
	*x = GetContainerLogsResponse{}
	mi := &file_container_v1_container_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerLogsResponse) ProtoMessage() {}

func (x *GetContainerLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerLogsResponse.ProtoReflect.Descriptor instead.
func (*GetContainerLogsResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{47}
}

func (x *GetContainerLogsResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetContainerLogsResponse) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *GetContainerLogsResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type GetContainerStatsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Stream stats
	Stream        bool `protobuf:"varint,2,opt,name=stream,proto3" json:"stream,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerStatsRequest) Reset() {
	*x = GetContainerStatsRequest{}
	mi := &file_container_v1_container_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerStatsRequest) ProtoMessage() {}

func (x *GetContainerStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerStatsRequest.ProtoReflect.Descriptor instead.
func (*GetContainerStatsRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{48}
}

func (x *GetContainerStatsRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *GetContainerStatsRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

type GetContainerStatsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stats
	Stats         *ContainerStats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerStatsResponse) Reset() {
	*x = GetContainerStatsResponse{}
	mi := &file_container_v1_container_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerStatsResponse) ProtoMessage() {}

func (x *GetContainerStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerStatsResponse.ProtoReflect.Descriptor instead.
func (*GetContainerStatsResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{49}
}

func (x *GetContainerStatsResponse) GetStats() *ContainerStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type HealthCheckRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId   string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_container_v1_container_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{50}
}

func (x *HealthCheckRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type HealthCheckResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status (healthy, unhealthy, starting)
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Failed streak
	FailingStreak int32 `protobuf:"varint,2,opt,name=failing_streak,json=failingStreak,proto3" json:"failing_streak,omitempty"`
	// Log
	Log           []*HealthCheckResult `protobuf:"bytes,3,rep,name=log,proto3" json:"log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_container_v1_container_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{51}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetFailingStreak() int32 {
	if x != nil {
		return x.FailingStreak
	}
	return 0
}

func (x *HealthCheckResponse) GetLog() []*HealthCheckResult {
	if x != nil {
		return x.Log
	}
	return nil
}

type HealthCheckResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Start
	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// End
	End *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	// Exit code
	ExitCode int32 `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Output
	Output        string `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResult) Reset() {
	*x = HealthCheckResult{}
	mi := &file_container_v1_container_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResult) ProtoMessage() {}

func (x *HealthCheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResult.ProtoReflect.Descriptor instead.
func (*HealthCheckResult) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{52}
}

func (x *HealthCheckResult) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *HealthCheckResult) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *HealthCheckResult) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *HealthCheckResult) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type RenameContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// New name
	NewName       string `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameContainerRequest) Reset() {
	*x = RenameContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameContainerRequest) ProtoMessage() {}

func (x *RenameContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameContainerRequest.ProtoReflect.Descriptor instead.
func (*RenameContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{53}
}

func (x *RenameContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *RenameContainerRequest) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type RenameContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameContainerResponse) Reset() {
	*x = RenameContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameContainerResponse) ProtoMessage() {}

func (x *RenameContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameContainerResponse.ProtoReflect.Descriptor instead.
func (*RenameContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{54}
}

func (x *RenameContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RenameContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type KillContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Signal
	Signal        string `protobuf:"bytes,2,opt,name=signal,proto3" json:"signal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillContainerRequest) Reset() {
	*x = KillContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillContainerRequest) ProtoMessage() {}

func (x *KillContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillContainerRequest.ProtoReflect.Descriptor instead.
func (*KillContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{55}
}

func (x *KillContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *KillContainerRequest) GetSignal() string {
	if x != nil {
		return x.Signal
	}
	return ""
}

type KillContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillContainerResponse) Reset() {
	*x = KillContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillContainerResponse) ProtoMessage() {}

func (x *KillContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillContainerResponse.ProtoReflect.Descriptor instead.
func (*KillContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{56}
}

func (x *KillContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *KillContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetContainerPortRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Private port
	PrivatePort   int32 `protobuf:"varint,2,opt,name=private_port,json=privatePort,proto3" json:"private_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerPortRequest) Reset() {
	*x = GetContainerPortRequest{}
	mi := &file_container_v1_container_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerPortRequest) ProtoMessage() {}

func (x *GetContainerPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerPortRequest.ProtoReflect.Descriptor instead.
func (*GetContainerPortRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{57}
}

func (x *GetContainerPortRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *GetContainerPortRequest) GetPrivatePort() int32 {
	if x != nil {
		return x.PrivatePort
	}
	return 0
}

type GetContainerPortResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Port bindings
	PortBindings  []*PortBinding `protobuf:"bytes,1,rep,name=port_bindings,json=portBindings,proto3" json:"port_bindings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerPortResponse) Reset() {
	*x = GetContainerPortResponse{}
	mi := &file_container_v1_container_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerPortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerPortResponse) ProtoMessage() {}

func (x *GetContainerPortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerPortResponse.ProtoReflect.Descriptor instead.
func (*GetContainerPortResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{58}
}

func (x *GetContainerPortResponse) GetPortBindings() []*PortBinding {
	if x != nil {
		return x.PortBindings
	}
	return nil
}

type WaitContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Condition (not-running, next-exit, removed)
	Condition     string `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitContainerRequest) Reset() {
	*x = WaitContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitContainerRequest) ProtoMessage() {}

func (x *WaitContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitContainerRequest.ProtoReflect.Descriptor instead.
func (*WaitContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{59}
}

func (x *WaitContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *WaitContainerRequest) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type WaitContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Exit code
	ExitCode int32 `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Error
	Error         string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitContainerResponse) Reset() {
	*x = WaitContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitContainerResponse) ProtoMessage() {}

func (x *WaitContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitContainerResponse.ProtoReflect.Descriptor instead.
func (*WaitContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{60}
}

func (x *WaitContainerResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *WaitContainerResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdateContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Resources to update
	UpdateSpec    *UpdateSpec `protobuf:"bytes,2,opt,name=update_spec,json=updateSpec,proto3" json:"update_spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContainerRequest) Reset() {
	*x = UpdateContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContainerRequest) ProtoMessage() {}

func (x *UpdateContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContainerRequest.ProtoReflect.Descriptor instead.
func (*UpdateContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{61}
}

func (x *UpdateContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *UpdateContainerRequest) GetUpdateSpec() *UpdateSpec {
	if x != nil {
		return x.UpdateSpec
	}
	return nil
}

type UpdateSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CPU shares
	CpuShares int64 `protobuf:"varint,1,opt,name=cpu_shares,json=cpuShares,proto3" json:"cpu_shares,omitempty"`
	// CPU period
	CpuPeriod int64 `protobuf:"varint,2,opt,name=cpu_period,json=cpuPeriod,proto3" json:"cpu_period,omitempty"`
	// CPU quota
	CpuQuota int64 `protobuf:"varint,3,opt,name=cpu_quota,json=cpuQuota,proto3" json:"cpu_quota,omitempty"`
	// CPUs
	Cpus string `protobuf:"bytes,4,opt,name=cpus,proto3" json:"cpus,omitempty"`
	// CPU set CPUs
	CpusetCpus string `protobuf:"bytes,5,opt,name=cpuset_cpus,json=cpusetCpus,proto3" json:"cpuset_cpus,omitempty"`
	// CPU set MEMs
	CpusetMems string `protobuf:"bytes,6,opt,name=cpuset_mems,json=cpusetMems,proto3" json:"cpuset_mems,omitempty"`
	// Memory
	Memory int64 `protobuf:"varint,7,opt,name=memory,proto3" json:"memory,omitempty"`
	// Memory swap
	MemorySwap int64 `protobuf:"varint,8,opt,name=memory_swap,json=memorySwap,proto3" json:"memory_swap,omitempty"`
	// Memory reservation
	MemoryReservation int64 `protobuf:"varint,9,opt,name=memory_reservation,json=memoryReservation,proto3" json:"memory_reservation,omitempty"`
	// Kernel memory
	KernelMemory int64 `protobuf:"varint,10,opt,name=kernel_memory,json=kernelMemory,proto3" json:"kernel_memory,omitempty"`
	// Restart policy
	RestartPolicy *RestartPolicy `protobuf:"bytes,11,opt,name=restart_policy,json=restartPolicy,proto3" json:"restart_policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSpec) Reset() {
	*x = UpdateSpec{}
	mi := &file_container_v1_container_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpec) ProtoMessage() {}

func (x *UpdateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpec.ProtoReflect.Descriptor instead.
func (*UpdateSpec) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{62}
}

func (x *UpdateSpec) GetCpuShares() int64 {
	if x != nil {
		return x.CpuShares
	}
	return 0
}

func (x *UpdateSpec) GetCpuPeriod() int64 {
	if x != nil {
		return x.CpuPeriod
	}
	return 0
}

func (x *UpdateSpec) GetCpuQuota() int64 {
	if x != nil {
		return x.CpuQuota
	}
	return 0
}

func (x *UpdateSpec) GetCpus() string {
	if x != nil {
		return x.Cpus
	}
	return ""
}

func (x *UpdateSpec) GetCpusetCpus() string {
	if x != nil {
		return x.CpusetCpus
	}
	return ""
}

func (x *UpdateSpec) GetCpusetMems() string {
	if x != nil {
		return x.CpusetMems
	}
	return ""
}

func (x *UpdateSpec) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *UpdateSpec) GetMemorySwap() int64 {
	if x != nil {
		return x.MemorySwap
	}
	return 0
}

func (x *UpdateSpec) GetMemoryReservation() int64 {
	if x != nil {
		return x.MemoryReservation
	}
	return 0
}

func (x *UpdateSpec) GetKernelMemory() int64 {
	if x != nil {
		return x.KernelMemory
	}
	return 0
}

func (x *UpdateSpec) GetRestartPolicy() *RestartPolicy {
	if x != nil {
		return x.RestartPolicy
	}
	return nil
}

type UpdateContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Warnings
	Warnings      []string `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContainerResponse) Reset() {
	*x = UpdateContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContainerResponse) ProtoMessage() {}

func (x *UpdateContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContainerResponse.ProtoReflect.Descriptor instead.
func (*UpdateContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateContainerResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type InspectContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container ID or name
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Size
	Size          bool `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectContainerRequest) Reset() {
	*x = InspectContainerRequest{}
	mi := &file_container_v1_container_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectContainerRequest) ProtoMessage() {}

func (x *InspectContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectContainerRequest.ProtoReflect.Descriptor instead.
func (*InspectContainerRequest) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{64}
}

func (x *InspectContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *InspectContainerRequest) GetSize() bool {
	if x != nil {
		return x.Size
	}
	return false
}

type InspectContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container details
	Container     *Container `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectContainerResponse) Reset() {
	*x = InspectContainerResponse{}
	mi := &file_container_v1_container_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectContainerResponse) ProtoMessage() {}

func (x *InspectContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_container_v1_container_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectContainerResponse.ProtoReflect.Descriptor instead.
func (*InspectContainerResponse) Descriptor() ([]byte, []int) {
	return file_container_v1_container_proto_rawDescGZIP(), []int{65}
}

func (x *InspectContainerResponse) GetContainer() *Container {
	if x != nil {
		return x.Container
	}
	return nil
}

var File_container_v1_container_proto protoreflect.FileDescriptor

const file_container_v1_container_proto_rawDesc = "" +
	"\n" +
	"\x1ccontainer/v1/container.proto\x12\fcontainer.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17validate/validate.proto\"\xcd\x05\n" +
	"\x0fContainerConfig\x12\x1d\n" +
	"\x05image\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05image\x12\x18\n" +
	"\acommand\x18\x02 \x03(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x03 \x03(\tR\x04args\x12\x1f\n" +
	"\vworking_dir\x18\x04 \x01(\tR\n" +
	"workingDir\x128\n" +
	"\x03env\x18\x05 \x03(\v2&.container.v1.ContainerConfig.EnvEntryR\x03env\x12#\n" +
	"\rexposed_ports\x18\x06 \x03(\tR\fexposedPorts\x12A\n" +
	"\x06labels\x18\a \x03(\v2).container.v1.ContainerConfig.LabelsEntryR\x06labels\x12\x1e\n" +
	"\n" +
	"entrypoint\x18\b \x03(\tR\n" +
	"entrypoint\x12\x12\n" +
	"\x04user\x18\t \x01(\tR\x04user\x12\x1a\n" +
	"\bhostname\x18\n" +
	" \x01(\tR\bhostname\x12\x1e\n" +
	"\n" +
	"domainname\x18\v \x01(\tR\n" +
	"domainname\x12\x1f\n" +
	"\vstop_signal\x18\f \x01(\tR\n" +
	"stopSignal\x12!\n" +
	"\fstop_timeout\x18\r \x01(\x05R\vstopTimeout\x12?\n" +
	"\rhealth_config\x18\x0e \x01(\v2\x1a.container.v1.HealthConfigR\fhealthConfig\x12B\n" +
	"\x0erestart_policy\x18\x0f \x01(\v2\x1b.container.v1.RestartPolicyR\rrestartPolicy\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd4\v\n" +
	"\n" +
	"HostConfig\x12\x1f\n" +
	"\vauto_remove\x18\x01 \x01(\bR\n" +
	"autoRemove\x12\x1e\n" +
	"\n" +
	"privileged\x18\x02 \x01(\bR\n" +
	"privileged\x12(\n" +
	"\x10read_only_rootfs\x18\x03 \x01(\bR\x0ereadOnlyRootfs\x12\x1d\n" +
	"\n" +
	"cpu_shares\x18\x04 \x01(\x03R\tcpuShares\x12\x1d\n" +
	"\n" +
	"cpu_period\x18\x05 \x01(\x03R\tcpuPeriod\x12\x1b\n" +
	"\tcpu_quota\x18\x06 \x01(\x03R\bcpuQuota\x12\x12\n" +
	"\x04cpus\x18\a \x01(\tR\x04cpus\x12\x1f\n" +
	"\vcpuset_cpus\x18\b \x01(\tR\n" +
	"cpusetCpus\x12\x1f\n" +
	"\vcpuset_mems\x18\t \x01(\tR\n" +
	"cpusetMems\x12\x16\n" +
	"\x06memory\x18\n" +
	" \x01(\x03R\x06memory\x12\x1f\n" +
	"\vmemory_swap\x18\v \x01(\x03R\n" +
	"memorySwap\x12+\n" +
	"\x11memory_swappiness\x18\f \x01(\x03R\x10memorySwappiness\x12-\n" +
	"\x12memory_reservation\x18\r \x01(\x03R\x11memoryReservation\x12#\n" +
	"\rkernel_memory\x18\x0e \x01(\x03R\fkernelMemory\x12(\n" +
	"\x10oom_kill_disable\x18\x0f \x01(\bR\x0eoomKillDisable\x12\x19\n" +
	"\bpid_mode\x18\x10 \x01(\tR\apidMode\x12\x19\n" +
	"\bipc_mode\x18\x11 \x01(\tR\aipcMode\x12\x19\n" +
	"\buts_mode\x18\x12 \x01(\tR\autsMode\x12!\n" +
	"\fnetwork_mode\x18\x13 \x01(\tR\vnetworkMode\x12>\n" +
	"\rport_bindings\x18\x14 \x03(\v2\x19.container.v1.PortBindingR\fportBindings\x12+\n" +
	"\x06mounts\x18\x15 \x03(\v2\x13.container.v1.MountR\x06mounts\x12\x14\n" +
	"\x05binds\x18\x16 \x03(\tR\x05binds\x12#\n" +
	"\rvolume_driver\x18\x17 \x01(\tR\fvolumeDriver\x12!\n" +
	"\fvolumes_from\x18\x18 \x03(\tR\vvolumesFrom\x12\x17\n" +
	"\acap_add\x18\x19 \x03(\tR\x06capAdd\x12\x19\n" +
	"\bcap_drop\x18\x1a \x03(\tR\acapDrop\x12!\n" +
	"\fsecurity_opt\x18\x1b \x03(\tR\vsecurityOpt\x125\n" +
	"\adevices\x18\x1c \x03(\v2\x1b.container.v1.DeviceMappingR\adevices\x12\x10\n" +
	"\x03dns\x18\x1d \x03(\tR\x03dns\x12\x1d\n" +
	"\n" +
	"dns_search\x18\x1e \x03(\tR\tdnsSearch\x12\x1f\n" +
	"\vdns_options\x18\x1f \x03(\tR\n" +
	"dnsOptions\x12\x1f\n" +
	"\vextra_hosts\x18  \x03(\tR\n" +
	"extraHosts\x12\x14\n" +
	"\x05links\x18! \x03(\tR\x05links\x126\n" +
	"\n" +
	"log_config\x18\" \x01(\v2\x17.container.v1.LogConfigR\tlogConfig\x12B\n" +
	"\x0erestart_policy\x18# \x01(\v2\x1b.container.v1.RestartPolicyR\rrestartPolicy\x12.\n" +
	"\aulimits\x18$ \x03(\v2\x14.container.v1.UlimitR\aulimits\x129\n" +
	"\x05tmpfs\x18% \x03(\v2#.container.v1.HostConfig.TmpfsEntryR\x05tmpfs\x12\x19\n" +
	"\bshm_size\x18& \x01(\x03R\ashmSize\x12\x1a\n" +
	"\bplatform\x18' \x01(\tR\bplatform\x12\x18\n" +
	"\aruntime\x18( \x01(\tR\aruntime\x1a8\n" +
	"\n" +
	"TmpfsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xce\x01\n" +
	"\rNetworkConfig\x12[\n" +
	"\x10endpoints_config\x18\x01 \x03(\v20.container.v1.NetworkConfig.EndpointsConfigEntryR\x0fendpointsConfig\x1a`\n" +
	"\x14EndpointsConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.container.v1.EndpointConfigR\x05value:\x028\x01\"\xd7\x01\n" +
	"\x0eEndpointConfig\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x01 \x01(\tR\tipAddress\x12\"\n" +
	"\rip_prefix_len\x18\x02 \x01(\x05R\vipPrefixLen\x12!\n" +
	"\fipv6_gateway\x18\x03 \x01(\tR\vipv6Gateway\x12\x1f\n" +
	"\vmac_address\x18\x04 \x01(\tR\n" +
	"macAddress\x12\x1d\n" +
	"\n" +
	"network_id\x18\x05 \x01(\tR\tnetworkId\x12\x1f\n" +
	"\vendpoint_id\x18\x06 \x01(\tR\n" +
	"endpointId\"\x86\x01\n" +
	"\vPortBinding\x12%\n" +
	"\x0econtainer_port\x18\x01 \x01(\tR\rcontainerPort\x12\x17\n" +
	"\ahost_ip\x18\x02 \x01(\tR\x06hostIp\x12\x1b\n" +
	"\thost_port\x18\x03 \x01(\tR\bhostPort\x12\x1a\n" +
	"\bprotocol\x18\x04 \x01(\tR\bprotocol\"\xab\x02\n" +
	"\x05Mount\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1b\n" +
	"\tread_only\x18\x04 \x01(\bR\breadOnly\x12<\n" +
	"\fbind_options\x18\x05 \x01(\v2\x19.container.v1.BindOptionsR\vbindOptions\x12B\n" +
	"\x0evolume_options\x18\x06 \x01(\v2\x1b.container.v1.VolumeOptionsR\rvolumeOptions\x12?\n" +
	"\rtmpfs_options\x18\a \x01(\v2\x1a.container.v1.TmpfsOptionsR\ftmpfsOptions\"/\n" +
	"\vBindOptions\x12 \n" +
	"\vpropagation\x18\x01 \x01(\tR\vpropagation\"\xbd\x01\n" +
	"\rVolumeOptions\x12\x17\n" +
	"\ano_copy\x18\x01 \x01(\bR\x06noCopy\x12R\n" +
	"\rdriver_config\x18\x02 \x03(\v2-.container.v1.VolumeOptions.DriverConfigEntryR\fdriverConfig\x1a?\n" +
	"\x11DriverConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"A\n" +
	"\fTmpfsOptions\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x01 \x01(\x03R\tsizeBytes\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\x05R\x04mode\"\x8c\x01\n" +
	"\rDeviceMapping\x12 \n" +
	"\fpath_on_host\x18\x01 \x01(\tR\n" +
	"pathOnHost\x12*\n" +
	"\x11path_in_container\x18\x02 \x01(\tR\x0fpathInContainer\x12-\n" +
	"\x12cgroup_permissions\x18\x03 \x01(\tR\x11cgroupPermissions\"\x97\x01\n" +
	"\tLogConfig\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12;\n" +
	"\x06config\x18\x02 \x03(\v2#.container.v1.LogConfig.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"S\n" +
	"\rRestartPolicy\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12.\n" +
	"\x13maximum_retry_count\x18\x02 \x01(\x05R\x11maximumRetryCount\"\x95\x01\n" +
	"\fHealthConfig\x12\x12\n" +
	"\x04test\x18\x01 \x03(\tR\x04test\x12\x1a\n" +
	"\binterval\x18\x02 \x01(\tR\binterval\x12\x18\n" +
	"\atimeout\x18\x03 \x01(\tR\atimeout\x12!\n" +
	"\fstart_period\x18\x04 \x01(\tR\vstartPeriod\x12\x18\n" +
	"\aretries\x18\x05 \x01(\x05R\aretries\"D\n" +
	"\x06Ulimit\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04soft\x18\x02 \x01(\x03R\x04soft\x12\x12\n" +
	"\x04hard\x18\x03 \x01(\x03R\x04hard\"\xea\x02\n" +
	"\x0eContainerState\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\arunning\x18\x02 \x01(\bR\arunning\x12\x16\n" +
	"\x06paused\x18\x03 \x01(\bR\x06paused\x12\x1e\n" +
	"\n" +
	"restarting\x18\x04 \x01(\bR\n" +
	"restarting\x12\x1d\n" +
	"\n" +
	"oom_killed\x18\x05 \x01(\bR\toomKilled\x12\x12\n" +
	"\x04dead\x18\x06 \x01(\bR\x04dead\x12\x10\n" +
	"\x03pid\x18\a \x01(\x05R\x03pid\x12\x1b\n" +
	"\texit_code\x18\b \x01(\x05R\bexitCode\x12\x14\n" +
	"\x05error\x18\t \x01(\tR\x05error\x129\n" +
	"\n" +
	"started_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12;\n" +
	"\vfinished_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"finishedAt\"\xf6\x04\n" +
	"\tContainer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05names\x18\x02 \x03(\tR\x05names\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12\x19\n" +
	"\bimage_id\x18\x04 \x01(\tR\aimageId\x12\x18\n" +
	"\acommand\x18\x05 \x01(\tR\acommand\x124\n" +
	"\acreated\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x121\n" +
	"\x05ports\x18\a \x03(\v2\x1b.container.v1.ContainerPortR\x05ports\x12\x17\n" +
	"\asize_rw\x18\b \x01(\x03R\x06sizeRw\x12 \n" +
	"\fsize_root_fs\x18\t \x01(\x03R\n" +
	"sizeRootFs\x12;\n" +
	"\x06labels\x18\n" +
	" \x03(\v2#.container.v1.Container.LabelsEntryR\x06labels\x12\x14\n" +
	"\x05state\x18\v \x01(\tR\x05state\x12\x16\n" +
	"\x06status\x18\f \x01(\tR\x06status\x129\n" +
	"\vhost_config\x18\r \x01(\v2\x18.container.v1.HostConfigR\n" +
	"hostConfig\x12F\n" +
	"\x10network_settings\x18\x0e \x01(\v2\x1b.container.v1.NetworkConfigR\x0fnetworkSettings\x12+\n" +
	"\x06mounts\x18\x0f \x03(\v2\x13.container.v1.MountR\x06mounts\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"w\n" +
	"\rContainerPort\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12!\n" +
	"\fprivate_port\x18\x02 \x01(\x05R\vprivatePort\x12\x1f\n" +
	"\vpublic_port\x18\x03 \x01(\x05R\n" +
	"publicPort\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\"\x93\x04\n" +
	"\x0eContainerStats\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x123\n" +
	"\tcpu_stats\x18\x03 \x01(\v2\x16.container.v1.CPUStatsR\bcpuStats\x12<\n" +
	"\fmemory_stats\x18\x04 \x01(\v2\x19.container.v1.MemoryStatsR\vmemoryStats\x12S\n" +
	"\rnetwork_stats\x18\x05 \x03(\v2..container.v1.ContainerStats.NetworkStatsEntryR\fnetworkStats\x12@\n" +
	"\x0eblock_io_stats\x18\x06 \x01(\v2\x1a.container.v1.BlockIOStatsR\fblockIoStats\x123\n" +
	"\tpid_stats\x18\a \x01(\v2\x16.container.v1.PIDStatsR\bpidStats\x12.\n" +
	"\x04read\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x04read\x1a[\n" +
	"\x11NetworkStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.container.v1.NetworkStatsR\x05value:\x028\x01\"\xd1\x01\n" +
	"\bCPUStats\x123\n" +
	"\tcpu_usage\x18\x01 \x01(\v2\x16.container.v1.CPUUsageR\bcpuUsage\x12(\n" +
	"\x10system_cpu_usage\x18\x02 \x01(\x04R\x0esystemCpuUsage\x12\x1f\n" +
	"\vonline_cpus\x18\x03 \x01(\rR\n" +
	"onlineCpus\x12E\n" +
	"\x0fthrottling_data\x18\x04 \x01(\v2\x1c.container.v1.ThrottlingDataR\x0ethrottlingData\"\xaa\x01\n" +
	"\bCPUUsage\x12\x1f\n" +
	"\vtotal_usage\x18\x01 \x01(\x04R\n" +
	"totalUsage\x12*\n" +
	"\x11usage_in_usermode\x18\x02 \x01(\x04R\x0fusageInUsermode\x12.\n" +
	"\x13usage_in_kernelmode\x18\x03 \x01(\x04R\x11usageInKernelmode\x12!\n" +
	"\fpercpu_usage\x18\x04 \x03(\x04R\vpercpuUsage\"~\n" +
	"\x0eThrottlingData\x12\x18\n" +
	"\aperiods\x18\x01 \x01(\x04R\aperiods\x12+\n" +
	"\x11throttled_periods\x18\x02 \x01(\x04R\x10throttledPeriods\x12%\n" +
	"\x0ethrottled_time\x18\x03 \x01(\x04R\rthrottledTime\"\xe6\x01\n" +
	"\vMemoryStats\x12\x14\n" +
	"\x05usage\x18\x01 \x01(\x04R\x05usage\x12\x1b\n" +
	"\tmax_usage\x18\x02 \x01(\x04R\bmaxUsage\x12:\n" +
	"\x05stats\x18\x03 \x03(\v2$.container.v1.MemoryStats.StatsEntryR\x05stats\x12\x18\n" +
	"\afailcnt\x18\x04 \x01(\x04R\afailcnt\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x04R\x05limit\x1a8\n" +
	"\n" +
	"StatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"\xfa\x01\n" +
	"\fNetworkStats\x12\x19\n" +
	"\brx_bytes\x18\x01 \x01(\x04R\arxBytes\x12\x1d\n" +
	"\n" +
	"rx_packets\x18\x02 \x01(\x04R\trxPackets\x12\x1b\n" +
	"\trx_errors\x18\x03 \x01(\x04R\brxErrors\x12\x1d\n" +
	"\n" +
	"rx_dropped\x18\x04 \x01(\x04R\trxDropped\x12\x19\n" +
	"\btx_bytes\x18\x05 \x01(\x04R\atxBytes\x12\x1d\n" +
	"\n" +
	"tx_packets\x18\x06 \x01(\x04R\ttxPackets\x12\x1b\n" +
	"\ttx_errors\x18\a \x01(\x04R\btxErrors\x12\x1d\n" +
	"\n" +
	"tx_dropped\x18\b \x01(\x04R\ttxDropped\"\x96\x05\n" +
	"\fBlockIOStats\x12Y\n" +
	"\x1aio_service_bytes_recursive\x18\x01 \x03(\v2\x1c.container.v1.BlkioStatEntryR\x17ioServiceBytesRecursive\x12P\n" +
	"\x15io_serviced_recursive\x18\x02 \x03(\v2\x1c.container.v1.BlkioStatEntryR\x13ioServicedRecursive\x12J\n" +
	"\x12io_queue_recursive\x18\x03 \x03(\v2\x1c.container.v1.BlkioStatEntryR\x10ioQueueRecursive\x12W\n" +
	"\x19io_service_time_recursive\x18\x04 \x03(\v2\x1c.container.v1.BlkioStatEntryR\x16ioServiceTimeRecursive\x12Q\n" +
	"\x16io_wait_time_recursive\x18\x05 \x03(\v2\x1c.container.v1.BlkioStatEntryR\x13ioWaitTimeRecursive\x12L\n" +
	"\x13io_merged_recursive\x18\x06 \x03(\v2\x1c.container.v1.BlkioStatEntryR\x11ioMergedRecursive\x12H\n" +
	"\x11io_time_recursive\x18\a \x03(\v2\x1c.container.v1.BlkioStatEntryR\x0fioTimeRecursive\x12I\n" +
	"\x11sectors_recursive\x18\b \x03(\v2\x1c.container.v1.BlkioStatEntryR\x10sectorsRecursive\"b\n" +
	"\x0eBlkioStatEntry\x12\x14\n" +
	"\x05major\x18\x01 \x01(\x04R\x05major\x12\x14\n" +
	"\x05minor\x18\x02 \x01(\x04R\x05minor\x12\x0e\n" +
	"\x02op\x18\x03 \x01(\tR\x02op\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x04R\x05value\":\n" +
	"\bPIDStats\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\x04R\acurrent\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x04R\x05limit\"\x88\x02\n" +
	"\x16CreateContainerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12?\n" +
	"\x06config\x18\x02 \x01(\v2\x1d.container.v1.ContainerConfigB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06config\x129\n" +
	"\vhost_config\x18\x03 \x01(\v2\x18.container.v1.HostConfigR\n" +
	"hostConfig\x12B\n" +
	"\x0enetwork_config\x18\x04 \x01(\v2\x1b.container.v1.NetworkConfigR\rnetworkConfig\x12\x1a\n" +
	"\bplatform\x18\x05 \x01(\tR\bplatform\"E\n" +
	"\x17CreateContainerResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bwarnings\x18\x02 \x03(\tR\bwarnings\"d\n" +
	"\x15StartContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12\x1f\n" +
	"\vdetach_keys\x18\x02 \x01(\tR\n" +
	"detachKeys\"L\n" +
	"\x16StartContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\\\n" +
	"\x14StopContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12\x18\n" +
	"\atimeout\x18\x02 \x01(\x05R\atimeout\"K\n" +
	"\x15StopContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"_\n" +
	"\x17RestartContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12\x18\n" +
	"\atimeout\x18\x02 \x01(\x05R\atimeout\"N\n" +
	"\x18RestartContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x88\x01\n" +
	"\x16RemoveContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12\x18\n" +
	"\avolumes\x18\x03 \x01(\bR\avolumes\x12\x12\n" +
	"\x04link\x18\x04 \x01(\bR\x04link\"M\n" +
	"\x17RemoveContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xd1\x02\n" +
	"\x13RunContainerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12?\n" +
	"\x06config\x18\x02 \x01(\v2\x1d.container.v1.ContainerConfigB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06config\x129\n" +
	"\vhost_config\x18\x03 \x01(\v2\x18.container.v1.HostConfigR\n" +
	"hostConfig\x12B\n" +
	"\x0enetwork_config\x18\x04 \x01(\v2\x1b.container.v1.NetworkConfigR\rnetworkConfig\x12\x1a\n" +
	"\bplatform\x18\x05 \x01(\tR\bplatform\x12\x16\n" +
	"\x06detach\x18\x06 \x01(\bR\x06detach\x12 \n" +
	"\vinteractive\x18\a \x01(\bR\vinteractive\x12\x10\n" +
	"\x03tty\x18\b \x01(\bR\x03tty\"[\n" +
	"\x14RunContainerResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\texit_code\x18\x02 \x01(\x05R\bexitCode\x12\x16\n" +
	"\x06output\x18\x03 \x01(\tR\x06output\"\xf2\x01\n" +
	"\x14ExecContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12\"\n" +
	"\acommand\x18\x02 \x03(\tB\b\xfaB\x05\x92\x01\x02\b\x01R\acommand\x12\x16\n" +
	"\x06detach\x18\x03 \x01(\bR\x06detach\x12 \n" +
	"\vinteractive\x18\x04 \x01(\bR\vinteractive\x12\x10\n" +
	"\x03tty\x18\x05 \x01(\bR\x03tty\x12\x12\n" +
	"\x04user\x18\x06 \x01(\tR\x04user\x12\x18\n" +
	"\aworkdir\x18\a \x01(\tR\aworkdir\x12\x10\n" +
	"\x03env\x18\b \x03(\tR\x03env\"e\n" +
	"\x15ExecContainerResponse\x12\x17\n" +
	"\aexec_id\x18\x01 \x01(\tR\x06execId\x12\x1b\n" +
	"\texit_code\x18\x02 \x01(\x05R\bexitCode\x12\x16\n" +
	"\x06output\x18\x03 \x01(\tR\x06output\"C\n" +
	"\x15PauseContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\"L\n" +
	"\x16PauseContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"E\n" +
	"\x17UnpauseContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\"N\n" +
	"\x18UnpauseContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xdb\x01\n" +
	"\x15ListContainersRequest\x12\x10\n" +
	"\x03all\x18\x01 \x01(\bR\x03all\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x12\n" +
	"\x04size\x18\x03 \x01(\bR\x04size\x12J\n" +
	"\afilters\x18\x04 \x03(\v20.container.v1.ListContainersRequest.FiltersEntryR\afilters\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Q\n" +
	"\x16ListContainersResponse\x127\n" +
	"\n" +
	"containers\x18\x01 \x03(\v2\x17.container.v1.ContainerR\n" +
	"containers\"\xed\x01\n" +
	"\x17GetContainerLogsRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12\x16\n" +
	"\x06follow\x18\x02 \x01(\bR\x06follow\x12\x16\n" +
	"\x06stdout\x18\x03 \x01(\bR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x04 \x01(\bR\x06stderr\x12\x14\n" +
	"\x05since\x18\x05 \x01(\tR\x05since\x12\x14\n" +
	"\x05until\x18\x06 \x01(\tR\x05until\x12\x1e\n" +
	"\n" +
	"timestamps\x18\a \x01(\bR\n" +
	"timestamps\x12\x12\n" +
	"\x04tail\x18\b \x01(\tR\x04tail\"\x80\x01\n" +
	"\x18GetContainerLogsResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x16\n" +
	"\x06stream\x18\x02 \x01(\tR\x06stream\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"^\n" +
	"\x18GetContainerStatsRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12\x16\n" +
	"\x06stream\x18\x02 \x01(\bR\x06stream\"O\n" +
	"\x19GetContainerStatsResponse\x122\n" +
	"\x05stats\x18\x01 \x01(\v2\x1c.container.v1.ContainerStatsR\x05stats\"@\n" +
	"\x12HealthCheckRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\"\x87\x01\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12%\n" +
	"\x0efailing_streak\x18\x02 \x01(\x05R\rfailingStreak\x121\n" +
	"\x03log\x18\x03 \x03(\v2\x1f.container.v1.HealthCheckResultR\x03log\"\xa8\x01\n" +
	"\x11HealthCheckResult\x120\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\x12,\n" +
	"\x03end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x03end\x12\x1b\n" +
	"\texit_code\x18\x03 \x01(\x05R\bexitCode\x12\x16\n" +
	"\x06output\x18\x04 \x01(\tR\x06output\"h\n" +
	"\x16RenameContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12\"\n" +
	"\bnew_name\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\anewName\"M\n" +
	"\x17RenameContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"Z\n" +
	"\x14KillContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12\x16\n" +
	"\x06signal\x18\x02 \x01(\tR\x06signal\"K\n" +
	"\x15KillContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"h\n" +
	"\x17GetContainerPortRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12!\n" +
	"\fprivate_port\x18\x02 \x01(\x05R\vprivatePort\"Z\n" +
	"\x18GetContainerPortResponse\x12>\n" +
	"\rport_bindings\x18\x01 \x03(\v2\x19.container.v1.PortBindingR\fportBindings\"`\n" +
	"\x14WaitContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12\x1c\n" +
	"\tcondition\x18\x02 \x01(\tR\tcondition\"J\n" +
	"\x15WaitContainerResponse\x12\x1b\n" +
	"\texit_code\x18\x01 \x01(\x05R\bexitCode\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x7f\n" +
	"\x16UpdateContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x129\n" +
	"\vupdate_spec\x18\x02 \x01(\v2\x18.container.v1.UpdateSpecR\n" +
	"updateSpec\"\x8e\x03\n" +
	"\n" +
	"UpdateSpec\x12\x1d\n" +
	"\n" +
	"cpu_shares\x18\x01 \x01(\x03R\tcpuShares\x12\x1d\n" +
	"\n" +
	"cpu_period\x18\x02 \x01(\x03R\tcpuPeriod\x12\x1b\n" +
	"\tcpu_quota\x18\x03 \x01(\x03R\bcpuQuota\x12\x12\n" +
	"\x04cpus\x18\x04 \x01(\tR\x04cpus\x12\x1f\n" +
	"\vcpuset_cpus\x18\x05 \x01(\tR\n" +
	"cpusetCpus\x12\x1f\n" +
	"\vcpuset_mems\x18\x06 \x01(\tR\n" +
	"cpusetMems\x12\x16\n" +
	"\x06memory\x18\a \x01(\x03R\x06memory\x12\x1f\n" +
	"\vmemory_swap\x18\b \x01(\x03R\n" +
	"memorySwap\x12-\n" +
	"\x12memory_reservation\x18\t \x01(\x03R\x11memoryReservation\x12#\n" +
	"\rkernel_memory\x18\n" +
	" \x01(\x03R\fkernelMemory\x12B\n" +
	"\x0erestart_policy\x18\v \x01(\v2\x1b.container.v1.RestartPolicyR\rrestartPolicy\"i\n" +
	"\x17UpdateContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1a\n" +
	"\bwarnings\x18\x03 \x03(\tR\bwarnings\"Y\n" +
	"\x17InspectContainerRequest\x12*\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vcontainerId\x12\x12\n" +
	"\x04size\x18\x02 \x01(\bR\x04size\"Q\n" +
	"\x18InspectContainerResponse\x125\n" +
	"\tcontainer\x18\x01 \x01(\v2\x17.container.v1.ContainerR\tcontainer2\xce\x14\n" +
	"\x10ContainerService\x12y\n" +
	"\x0fCreateContainer\x12$.container.v1.CreateContainerRequest\x1a%.container.v1.CreateContainerResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/containers\x12\x88\x01\n" +
	"\x0eStartContainer\x12#.container.v1.StartContainerRequest\x1a$.container.v1.StartContainerResponse\"+\x82\xd3\xe4\x93\x02%\"#/v1/containers/{container_id}/start\x12\x84\x01\n" +
	"\rStopContainer\x12\".container.v1.StopContainerRequest\x1a#.container.v1.StopContainerResponse\"*\x82\xd3\xe4\x93\x02$\"\"/v1/containers/{container_id}/stop\x12\x90\x01\n" +
	"\x10RestartContainer\x12%.container.v1.RestartContainerRequest\x1a&.container.v1.RestartContainerResponse\"-\x82\xd3\xe4\x93\x02'\"%/v1/containers/{container_id}/restart\x12\x85\x01\n" +
	"\x0fRemoveContainer\x12$.container.v1.RemoveContainerRequest\x1a%.container.v1.RemoveContainerResponse\"%\x82\xd3\xe4\x93\x02\x1f*\x1d/v1/containers/{container_id}\x12t\n" +
	"\fRunContainer\x12!.container.v1.RunContainerRequest\x1a\".container.v1.RunContainerResponse\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*\"\x12/v1/containers/run\x12\x87\x01\n" +
	"\rExecContainer\x12\".container.v1.ExecContainerRequest\x1a#.container.v1.ExecContainerResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/containers/{container_id}/exec\x12\x88\x01\n" +
	"\x0ePauseContainer\x12#.container.v1.PauseContainerRequest\x1a$.container.v1.PauseContainerResponse\"+\x82\xd3\xe4\x93\x02%\"#/v1/containers/{container_id}/pause\x12\x90\x01\n" +
	"\x10UnpauseContainer\x12%.container.v1.UnpauseContainerRequest\x1a&.container.v1.UnpauseContainerResponse\"-\x82\xd3\xe4\x93\x02'\"%/v1/containers/{container_id}/unpause\x12s\n" +
	"\x0eListContainers\x12#.container.v1.ListContainersRequest\x1a$.container.v1.ListContainersResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/containers\x12\x8f\x01\n" +
	"\x10GetContainerLogs\x12%.container.v1.GetContainerLogsRequest\x1a&.container.v1.GetContainerLogsResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v1/containers/{container_id}/logs0\x01\x12\x93\x01\n" +
	"\x11GetContainerStats\x12&.container.v1.GetContainerStatsRequest\x1a'.container.v1.GetContainerStatsResponse\"+\x82\xd3\xe4\x93\x02%\x12#/v1/containers/{container_id}/stats0\x01\x12\x85\x01\n" +
	"\vHealthCheck\x12 .container.v1.HealthCheckRequest\x1a!.container.v1.HealthCheckResponse\"1\x82\xd3\xe4\x93\x02+\")/v1/containers/{container_id}/healthcheck\x12\x8f\x01\n" +
	"\x0fRenameContainer\x12$.container.v1.RenameContainerRequest\x1a%.container.v1.RenameContainerResponse\"/\x82\xd3\xe4\x93\x02):\x01*\x1a$/v1/containers/{container_id}/rename\x12\x87\x01\n" +
	"\rKillContainer\x12\".container.v1.KillContainerRequest\x1a#.container.v1.KillContainerResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/containers/{container_id}/kill\x12\x8d\x01\n" +
	"\x10GetContainerPort\x12%.container.v1.GetContainerPortRequest\x1a&.container.v1.GetContainerPortResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v1/containers/{container_id}/port\x12\x84\x01\n" +
	"\rWaitContainer\x12\".container.v1.WaitContainerRequest\x1a#.container.v1.WaitContainerResponse\"*\x82\xd3\xe4\x93\x02$\"\"/v1/containers/{container_id}/wait\x12\x88\x01\n" +
	"\x0fUpdateContainer\x12$.container.v1.UpdateContainerRequest\x1a%.container.v1.UpdateContainerResponse\"(\x82\xd3\xe4\x93\x02\":\x01*2\x1d/v1/containers/{container_id}\x12\x90\x01\n" +
	"\x10InspectContainer\x12%.container.v1.InspectContainerRequest\x1a&.container.v1.InspectContainerResponse\"-\x82\xd3\xe4\x93\x02'\x12%/v1/containers/{container_id}/inspectBN\n" +
	"\x1bdev.kratos.api.container.v1B\x10ContainerProtoV1P\x01Z\x1bdsagent/api/container/v1;v1b\x06proto3"

var (
	file_container_v1_container_proto_rawDescOnce sync.Once
	file_container_v1_container_proto_rawDescData []byte
)

func file_container_v1_container_proto_rawDescGZIP() []byte {
	file_container_v1_container_proto_rawDescOnce.Do(func() {
		file_container_v1_container_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_container_v1_container_proto_rawDesc), len(file_container_v1_container_proto_rawDesc)))
	})
	return file_container_v1_container_proto_rawDescData
}

var file_container_v1_container_proto_msgTypes = make([]protoimpl.MessageInfo, 76)
var file_container_v1_container_proto_goTypes = []any{
	(*ContainerConfig)(nil),           // 0: container.v1.ContainerConfig
	(*HostConfig)(nil),                // 1: container.v1.HostConfig
	(*NetworkConfig)(nil),             // 2: container.v1.NetworkConfig
	(*EndpointConfig)(nil),            // 3: container.v1.EndpointConfig
	(*PortBinding)(nil),               // 4: container.v1.PortBinding
	(*Mount)(nil),                     // 5: container.v1.Mount
	(*BindOptions)(nil),               // 6: container.v1.BindOptions
	(*VolumeOptions)(nil),             // 7: container.v1.VolumeOptions
	(*TmpfsOptions)(nil),              // 8: container.v1.TmpfsOptions
	(*DeviceMapping)(nil),             // 9: container.v1.DeviceMapping
	(*LogConfig)(nil),                 // 10: container.v1.LogConfig
	(*RestartPolicy)(nil),             // 11: container.v1.RestartPolicy
	(*HealthConfig)(nil),              // 12: container.v1.HealthConfig
	(*Ulimit)(nil),                    // 13: container.v1.Ulimit
	(*ContainerState)(nil),            // 14: container.v1.ContainerState
	(*Container)(nil),                 // 15: container.v1.Container
	(*ContainerPort)(nil),             // 16: container.v1.ContainerPort
	(*ContainerStats)(nil),            // 17: container.v1.ContainerStats
	(*CPUStats)(nil),                  // 18: container.v1.CPUStats
	(*CPUUsage)(nil),                  // 19: container.v1.CPUUsage
	(*ThrottlingData)(nil),            // 20: container.v1.ThrottlingData
	(*MemoryStats)(nil),               // 21: container.v1.MemoryStats
	(*NetworkStats)(nil),              // 22: container.v1.NetworkStats
	(*BlockIOStats)(nil),              // 23: container.v1.BlockIOStats
	(*BlkioStatEntry)(nil),            // 24: container.v1.BlkioStatEntry
	(*PIDStats)(nil),                  // 25: container.v1.PIDStats
	(*CreateContainerRequest)(nil),    // 26: container.v1.CreateContainerRequest
	(*CreateContainerResponse)(nil),   // 27: container.v1.CreateContainerResponse
	(*StartContainerRequest)(nil),     // 28: container.v1.StartContainerRequest
	(*StartContainerResponse)(nil),    // 29: container.v1.StartContainerResponse
	(*StopContainerRequest)(nil),      // 30: container.v1.StopContainerRequest
	(*StopContainerResponse)(nil),     // 31: container.v1.StopContainerResponse
	(*RestartContainerRequest)(nil),   // 32: container.v1.RestartContainerRequest
	(*RestartContainerResponse)(nil),  // 33: container.v1.RestartContainerResponse
	(*RemoveContainerRequest)(nil),    // 34: container.v1.RemoveContainerRequest
	(*RemoveContainerResponse)(nil),   // 35: container.v1.RemoveContainerResponse
	(*RunContainerRequest)(nil),       // 36: container.v1.RunContainerRequest
	(*RunContainerResponse)(nil),      // 37: container.v1.RunContainerResponse
	(*ExecContainerRequest)(nil),      // 38: container.v1.ExecContainerRequest
	(*ExecContainerResponse)(nil),     // 39: container.v1.ExecContainerResponse
	(*PauseContainerRequest)(nil),     // 40: container.v1.PauseContainerRequest
	(*PauseContainerResponse)(nil),    // 41: container.v1.PauseContainerResponse
	(*UnpauseContainerRequest)(nil),   // 42: container.v1.UnpauseContainerRequest
	(*UnpauseContainerResponse)(nil),  // 43: container.v1.UnpauseContainerResponse
	(*ListContainersRequest)(nil),     // 44: container.v1.ListContainersRequest
	(*ListContainersResponse)(nil),    // 45: container.v1.ListContainersResponse
	(*GetContainerLogsRequest)(nil),   // 46: container.v1.GetContainerLogsRequest
	(*GetContainerLogsResponse)(nil),  // 47: container.v1.GetContainerLogsResponse
	(*GetContainerStatsRequest)(nil),  // 48: container.v1.GetContainerStatsRequest
	(*GetContainerStatsResponse)(nil), // 49: container.v1.GetContainerStatsResponse
	(*HealthCheckRequest)(nil),        // 50: container.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),       // 51: container.v1.HealthCheckResponse
	(*HealthCheckResult)(nil),         // 52: container.v1.HealthCheckResult
	(*RenameContainerRequest)(nil),    // 53: container.v1.RenameContainerRequest
	(*RenameContainerResponse)(nil),   // 54: container.v1.RenameContainerResponse
	(*KillContainerRequest)(nil),      // 55: container.v1.KillContainerRequest
	(*KillContainerResponse)(nil),     // 56: container.v1.KillContainerResponse
	(*GetContainerPortRequest)(nil),   // 57: container.v1.GetContainerPortRequest
	(*GetContainerPortResponse)(nil),  // 58: container.v1.GetContainerPortResponse
	(*WaitContainerRequest)(nil),      // 59: container.v1.WaitContainerRequest
	(*WaitContainerResponse)(nil),     // 60: container.v1.WaitContainerResponse
	(*UpdateContainerRequest)(nil),    // 61: container.v1.UpdateContainerRequest
	(*UpdateSpec)(nil),                // 62: container.v1.UpdateSpec
	(*UpdateContainerResponse)(nil),   // 63: container.v1.UpdateContainerResponse
	(*InspectContainerRequest)(nil),   // 64: container.v1.InspectContainerRequest
	(*InspectContainerResponse)(nil),  // 65: container.v1.InspectContainerResponse
	nil,                               // 66: container.v1.ContainerConfig.EnvEntry
	nil,                               // 67: container.v1.ContainerConfig.LabelsEntry
	nil,                               // 68: container.v1.HostConfig.TmpfsEntry
	nil,                               // 69: container.v1.NetworkConfig.EndpointsConfigEntry
	nil,                               // 70: container.v1.VolumeOptions.DriverConfigEntry
	nil,                               // 71: container.v1.LogConfig.ConfigEntry
	nil,                               // 72: container.v1.Container.LabelsEntry
	nil,                               // 73: container.v1.ContainerStats.NetworkStatsEntry
	nil,                               // 74: container.v1.MemoryStats.StatsEntry
	nil,                               // 75: container.v1.ListContainersRequest.FiltersEntry
	(*timestamppb.Timestamp)(nil),     // 76: google.protobuf.Timestamp
}
var file_container_v1_container_proto_depIdxs = []int32{
	66, // 0: container.v1.ContainerConfig.env:type_name -> container.v1.ContainerConfig.EnvEntry
	67, // 1: container.v1.ContainerConfig.labels:type_name -> container.v1.ContainerConfig.LabelsEntry
	12, // 2: container.v1.ContainerConfig.health_config:type_name -> container.v1.HealthConfig
	11, // 3: container.v1.ContainerConfig.restart_policy:type_name -> container.v1.RestartPolicy
	4,  // 4: container.v1.HostConfig.port_bindings:type_name -> container.v1.PortBinding
	5,  // 5: container.v1.HostConfig.mounts:type_name -> container.v1.Mount
	9,  // 6: container.v1.HostConfig.devices:type_name -> container.v1.DeviceMapping
	10, // 7: container.v1.HostConfig.log_config:type_name -> container.v1.LogConfig
	11, // 8: container.v1.HostConfig.restart_policy:type_name -> container.v1.RestartPolicy
	13, // 9: container.v1.HostConfig.ulimits:type_name -> container.v1.Ulimit
	68, // 10: container.v1.HostConfig.tmpfs:type_name -> container.v1.HostConfig.TmpfsEntry
	69, // 11: container.v1.NetworkConfig.endpoints_config:type_name -> container.v1.NetworkConfig.EndpointsConfigEntry
	6,  // 12: container.v1.Mount.bind_options:type_name -> container.v1.BindOptions
	7,  // 13: container.v1.Mount.volume_options:type_name -> container.v1.VolumeOptions
	8,  // 14: container.v1.Mount.tmpfs_options:type_name -> container.v1.TmpfsOptions
	70, // 15: container.v1.VolumeOptions.driver_config:type_name -> container.v1.VolumeOptions.DriverConfigEntry
	71, // 16: container.v1.LogConfig.config:type_name -> container.v1.LogConfig.ConfigEntry
	76, // 17: container.v1.ContainerState.started_at:type_name -> google.protobuf.Timestamp
	76, // 18: container.v1.ContainerState.finished_at:type_name -> google.protobuf.Timestamp
	76, // 19: container.v1.Container.created:type_name -> google.protobuf.Timestamp
	16, // 20: container.v1.Container.ports:type_name -> container.v1.ContainerPort
	72, // 21: container.v1.Container.labels:type_name -> container.v1.Container.LabelsEntry
	1,  // 22: container.v1.Container.host_config:type_name -> container.v1.HostConfig
	2,  // 23: container.v1.Container.network_settings:type_name -> container.v1.NetworkConfig
	5,  // 24: container.v1.Container.mounts:type_name -> container.v1.Mount
	18, // 25: container.v1.ContainerStats.cpu_stats:type_name -> container.v1.CPUStats
	21, // 26: container.v1.ContainerStats.memory_stats:type_name -> container.v1.MemoryStats
	73, // 27: container.v1.ContainerStats.network_stats:type_name -> container.v1.ContainerStats.NetworkStatsEntry
	23, // 28: container.v1.ContainerStats.block_io_stats:type_name -> container.v1.BlockIOStats
	25, // 29: container.v1.ContainerStats.pid_stats:type_name -> container.v1.PIDStats
	76, // 30: container.v1.ContainerStats.read:type_name -> google.protobuf.Timestamp
	19, // 31: container.v1.CPUStats.cpu_usage:type_name -> container.v1.CPUUsage
	20, // 32: container.v1.CPUStats.throttling_data:type_name -> container.v1.ThrottlingData
	74, // 33: container.v1.MemoryStats.stats:type_name -> container.v1.MemoryStats.StatsEntry
	24, // 34: container.v1.BlockIOStats.io_service_bytes_recursive:type_name -> container.v1.BlkioStatEntry
	24, // 35: container.v1.BlockIOStats.io_serviced_recursive:type_name -> container.v1.BlkioStatEntry
	24, // 36: container.v1.BlockIOStats.io_queue_recursive:type_name -> container.v1.BlkioStatEntry
	24, // 37: container.v1.BlockIOStats.io_service_time_recursive:type_name -> container.v1.BlkioStatEntry
	24, // 38: container.v1.BlockIOStats.io_wait_time_recursive:type_name -> container.v1.BlkioStatEntry
	24, // 39: container.v1.BlockIOStats.io_merged_recursive:type_name -> container.v1.BlkioStatEntry
	24, // 40: container.v1.BlockIOStats.io_time_recursive:type_name -> container.v1.BlkioStatEntry
	24, // 41: container.v1.BlockIOStats.sectors_recursive:type_name -> container.v1.BlkioStatEntry
	0,  // 42: container.v1.CreateContainerRequest.config:type_name -> container.v1.ContainerConfig
	1,  // 43: container.v1.CreateContainerRequest.host_config:type_name -> container.v1.HostConfig
	2,  // 44: container.v1.CreateContainerRequest.network_config:type_name -> container.v1.NetworkConfig
	0,  // 45: container.v1.RunContainerRequest.config:type_name -> container.v1.ContainerConfig
	1,  // 46: container.v1.RunContainerRequest.host_config:type_name -> container.v1.HostConfig
	2,  // 47: container.v1.RunContainerRequest.network_config:type_name -> container.v1.NetworkConfig
	75, // 48: container.v1.ListContainersRequest.filters:type_name -> container.v1.ListContainersRequest.FiltersEntry
	15, // 49: container.v1.ListContainersResponse.containers:type_name -> container.v1.Container
	76, // 50: container.v1.GetContainerLogsResponse.timestamp:type_name -> google.protobuf.Timestamp
	17, // 51: container.v1.GetContainerStatsResponse.stats:type_name -> container.v1.ContainerStats
	52, // 52: container.v1.HealthCheckResponse.log:type_name -> container.v1.HealthCheckResult
	76, // 53: container.v1.HealthCheckResult.start:type_name -> google.protobuf.Timestamp
	76, // 54: container.v1.HealthCheckResult.end:type_name -> google.protobuf.Timestamp
	4,  // 55: container.v1.GetContainerPortResponse.port_bindings:type_name -> container.v1.PortBinding
	62, // 56: container.v1.UpdateContainerRequest.update_spec:type_name -> container.v1.UpdateSpec
	11, // 57: container.v1.UpdateSpec.restart_policy:type_name -> container.v1.RestartPolicy
	15, // 58: container.v1.InspectContainerResponse.container:type_name -> container.v1.Container
	3,  // 59: container.v1.NetworkConfig.EndpointsConfigEntry.value:type_name -> container.v1.EndpointConfig
	22, // 60: container.v1.ContainerStats.NetworkStatsEntry.value:type_name -> container.v1.NetworkStats
	26, // 61: container.v1.ContainerService.CreateContainer:input_type -> container.v1.CreateContainerRequest
	28, // 62: container.v1.ContainerService.StartContainer:input_type -> container.v1.StartContainerRequest
	30, // 63: container.v1.ContainerService.StopContainer:input_type -> container.v1.StopContainerRequest
	32, // 64: container.v1.ContainerService.RestartContainer:input_type -> container.v1.RestartContainerRequest
	34, // 65: container.v1.ContainerService.RemoveContainer:input_type -> container.v1.RemoveContainerRequest
	36, // 66: container.v1.ContainerService.RunContainer:input_type -> container.v1.RunContainerRequest
	38, // 67: container.v1.ContainerService.ExecContainer:input_type -> container.v1.ExecContainerRequest
	40, // 68: container.v1.ContainerService.PauseContainer:input_type -> container.v1.PauseContainerRequest
	42, // 69: container.v1.ContainerService.UnpauseContainer:input_type -> container.v1.UnpauseContainerRequest
	44, // 70: container.v1.ContainerService.ListContainers:input_type -> container.v1.ListContainersRequest
	46, // 71: container.v1.ContainerService.GetContainerLogs:input_type -> container.v1.GetContainerLogsRequest
	48, // 72: container.v1.ContainerService.GetContainerStats:input_type -> container.v1.GetContainerStatsRequest
	50, // 73: container.v1.ContainerService.HealthCheck:input_type -> container.v1.HealthCheckRequest
	53, // 74: container.v1.ContainerService.RenameContainer:input_type -> container.v1.RenameContainerRequest
	55, // 75: container.v1.ContainerService.KillContainer:input_type -> container.v1.KillContainerRequest
	57, // 76: container.v1.ContainerService.GetContainerPort:input_type -> container.v1.GetContainerPortRequest
	59, // 77: container.v1.ContainerService.WaitContainer:input_type -> container.v1.WaitContainerRequest
	61, // 78: container.v1.ContainerService.UpdateContainer:input_type -> container.v1.UpdateContainerRequest
	64, // 79: container.v1.ContainerService.InspectContainer:input_type -> container.v1.InspectContainerRequest
	27, // 80: container.v1.ContainerService.CreateContainer:output_type -> container.v1.CreateContainerResponse
	29, // 81: container.v1.ContainerService.StartContainer:output_type -> container.v1.StartContainerResponse
	31, // 82: container.v1.ContainerService.StopContainer:output_type -> container.v1.StopContainerResponse
	33, // 83: container.v1.ContainerService.RestartContainer:output_type -> container.v1.RestartContainerResponse
	35, // 84: container.v1.ContainerService.RemoveContainer:output_type -> container.v1.RemoveContainerResponse
	37, // 85: container.v1.ContainerService.RunContainer:output_type -> container.v1.RunContainerResponse
	39, // 86: container.v1.ContainerService.ExecContainer:output_type -> container.v1.ExecContainerResponse
	41, // 87: container.v1.ContainerService.PauseContainer:output_type -> container.v1.PauseContainerResponse
	43, // 88: container.v1.ContainerService.UnpauseContainer:output_type -> container.v1.UnpauseContainerResponse
	45, // 89: container.v1.ContainerService.ListContainers:output_type -> container.v1.ListContainersResponse
	47, // 90: container.v1.ContainerService.GetContainerLogs:output_type -> container.v1.GetContainerLogsResponse
	49, // 91: container.v1.ContainerService.GetContainerStats:output_type -> container.v1.GetContainerStatsResponse
	51, // 92: container.v1.ContainerService.HealthCheck:output_type -> container.v1.HealthCheckResponse
	54, // 93: container.v1.ContainerService.RenameContainer:output_type -> container.v1.RenameContainerResponse
	56, // 94: container.v1.ContainerService.KillContainer:output_type -> container.v1.KillContainerResponse
	58, // 95: container.v1.ContainerService.GetContainerPort:output_type -> container.v1.GetContainerPortResponse
	60, // 96: container.v1.ContainerService.WaitContainer:output_type -> container.v1.WaitContainerResponse
	63, // 97: container.v1.ContainerService.UpdateContainer:output_type -> container.v1.UpdateContainerResponse
	65, // 98: container.v1.ContainerService.InspectContainer:output_type -> container.v1.InspectContainerResponse
	80, // [80:99] is the sub-list for method output_type
	61, // [61:80] is the sub-list for method input_type
	61, // [61:61] is the sub-list for extension type_name
	61, // [61:61] is the sub-list for extension extendee
	0,  // [0:61] is the sub-list for field type_name
}

func init() { file_container_v1_container_proto_init() }
func file_container_v1_container_proto_init() {
	if File_container_v1_container_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_container_v1_container_proto_rawDesc), len(file_container_v1_container_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   76,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_container_v1_container_proto_goTypes,
		DependencyIndexes: file_container_v1_container_proto_depIdxs,
		MessageInfos:      file_container_v1_container_proto_msgTypes,
	}.Build()
	File_container_v1_container_proto = out.File
	file_container_v1_container_proto_goTypes = nil
	file_container_v1_container_proto_depIdxs = nil
}
