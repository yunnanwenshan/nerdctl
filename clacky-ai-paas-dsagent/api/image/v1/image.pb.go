// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: image/v1/image.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// List images request
type ListImagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	All           bool                   `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`                        // Show all images (default shows only tagged images)
	Quiet         bool                   `protobuf:"varint,2,opt,name=quiet,proto3" json:"quiet,omitempty"`                    // Only show image IDs
	NoTrunc       bool                   `protobuf:"varint,3,opt,name=no_trunc,json=noTrunc,proto3" json:"no_trunc,omitempty"` // Don't truncate output
	Filter        string                 `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`                   // Filter output based on conditions provided
	Format        string                 `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`                   // Pretty-print images using a Go template
	Digests       bool                   `protobuf:"varint,6,opt,name=digests,proto3" json:"digests,omitempty"`                // Show digests
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesRequest) Reset() {
	*x = ListImagesRequest{}
	mi := &file_image_v1_image_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesRequest) ProtoMessage() {}

func (x *ListImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesRequest.ProtoReflect.Descriptor instead.
func (*ListImagesRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{0}
}

func (x *ListImagesRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ListImagesRequest) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *ListImagesRequest) GetNoTrunc() bool {
	if x != nil {
		return x.NoTrunc
	}
	return false
}

func (x *ListImagesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListImagesRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *ListImagesRequest) GetDigests() bool {
	if x != nil {
		return x.Digests
	}
	return false
}

// Pull image request
type PullImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                      // Image name to pull
	Platform      string                 `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`                              // Target platform in the format os[/arch[/variant]]
	AllPlatforms  bool                   `protobuf:"varint,3,opt,name=all_platforms,json=allPlatforms,proto3" json:"all_platforms,omitempty"` // Pull content for all platforms
	Quiet         bool                   `protobuf:"varint,4,opt,name=quiet,proto3" json:"quiet,omitempty"`                                   // Suppress verbose output
	Verify        string                 `protobuf:"bytes,5,opt,name=verify,proto3" json:"verify,omitempty"`                                  // Verify the image (none|cosign|notation)
	CosignKey     string                 `protobuf:"bytes,6,opt,name=cosign_key,json=cosignKey,proto3" json:"cosign_key,omitempty"`           // Path to the public key file for cosign verification
	Unpack        string                 `protobuf:"bytes,7,opt,name=unpack,proto3" json:"unpack,omitempty"`                                  // Unpack the image for the current single platform (auto/true/false)
	EcrAuth       *ECRAuthConfig         `protobuf:"bytes,8,opt,name=ecr_auth,json=ecrAuth,proto3" json:"ecr_auth,omitempty"`                 // ECR authentication configuration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullImageRequest) Reset() {
	*x = PullImageRequest{}
	mi := &file_image_v1_image_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullImageRequest) ProtoMessage() {}

func (x *PullImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullImageRequest.ProtoReflect.Descriptor instead.
func (*PullImageRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{1}
}

func (x *PullImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullImageRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *PullImageRequest) GetAllPlatforms() bool {
	if x != nil {
		return x.AllPlatforms
	}
	return false
}

func (x *PullImageRequest) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *PullImageRequest) GetVerify() string {
	if x != nil {
		return x.Verify
	}
	return ""
}

func (x *PullImageRequest) GetCosignKey() string {
	if x != nil {
		return x.CosignKey
	}
	return ""
}

func (x *PullImageRequest) GetUnpack() string {
	if x != nil {
		return x.Unpack
	}
	return ""
}

func (x *PullImageRequest) GetEcrAuth() *ECRAuthConfig {
	if x != nil {
		return x.EcrAuth
	}
	return nil
}

// Push image request
type PushImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                      // Image name to push
	AllPlatforms  bool                   `protobuf:"varint,2,opt,name=all_platforms,json=allPlatforms,proto3" json:"all_platforms,omitempty"` // Push content for all platforms
	Quiet         bool                   `protobuf:"varint,3,opt,name=quiet,proto3" json:"quiet,omitempty"`                                   // Suppress verbose output
	Sign          string                 `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`                                      // Sign the image (cosign|notation)
	CosignKey     string                 `protobuf:"bytes,5,opt,name=cosign_key,json=cosignKey,proto3" json:"cosign_key,omitempty"`           // Path to the private key file for cosign signing
	EcrAuth       *ECRAuthConfig         `protobuf:"bytes,6,opt,name=ecr_auth,json=ecrAuth,proto3" json:"ecr_auth,omitempty"`                 // ECR authentication configuration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushImageRequest) Reset() {
	*x = PushImageRequest{}
	mi := &file_image_v1_image_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushImageRequest) ProtoMessage() {}

func (x *PushImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushImageRequest.ProtoReflect.Descriptor instead.
func (*PushImageRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{2}
}

func (x *PushImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PushImageRequest) GetAllPlatforms() bool {
	if x != nil {
		return x.AllPlatforms
	}
	return false
}

func (x *PushImageRequest) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *PushImageRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *PushImageRequest) GetCosignKey() string {
	if x != nil {
		return x.CosignKey
	}
	return ""
}

func (x *PushImageRequest) GetEcrAuth() *ECRAuthConfig {
	if x != nil {
		return x.EcrAuth
	}
	return nil
}

// Remove image request
type RemoveImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                       // Image name to remove
	Force         bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`                    // Force removal of the image
	NoPrune       bool                   `protobuf:"varint,3,opt,name=no_prune,json=noPrune,proto3" json:"no_prune,omitempty"` // Do not delete untagged parents
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveImageRequest) Reset() {
	*x = RemoveImageRequest{}
	mi := &file_image_v1_image_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveImageRequest) ProtoMessage() {}

func (x *RemoveImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveImageRequest.ProtoReflect.Descriptor instead.
func (*RemoveImageRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RemoveImageRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *RemoveImageRequest) GetNoPrune() bool {
	if x != nil {
		return x.NoPrune
	}
	return false
}

// Tag image request
type TagImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceImage   string                 `protobuf:"bytes,1,opt,name=source_image,json=sourceImage,proto3" json:"source_image,omitempty"` // Source image name
	TargetImage   string                 `protobuf:"bytes,2,opt,name=target_image,json=targetImage,proto3" json:"target_image,omitempty"` // Target image name and tag
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagImageRequest) Reset() {
	*x = TagImageRequest{}
	mi := &file_image_v1_image_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagImageRequest) ProtoMessage() {}

func (x *TagImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagImageRequest.ProtoReflect.Descriptor instead.
func (*TagImageRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{4}
}

func (x *TagImageRequest) GetSourceImage() string {
	if x != nil {
		return x.SourceImage
	}
	return ""
}

func (x *TagImageRequest) GetTargetImage() string {
	if x != nil {
		return x.TargetImage
	}
	return ""
}

// Save image request
type SaveImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []string               `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`   // Image names to save
	Output        string                 `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"` // Write to a file, instead of STDOUT
	Format        string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"` // Format of the saved image (docker-archive|oci-archive|oci-dir)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveImageRequest) Reset() {
	*x = SaveImageRequest{}
	mi := &file_image_v1_image_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveImageRequest) ProtoMessage() {}

func (x *SaveImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveImageRequest.ProtoReflect.Descriptor instead.
func (*SaveImageRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{5}
}

func (x *SaveImageRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *SaveImageRequest) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *SaveImageRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

// Load image request
type LoadImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         string                 `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`                                    // Read from tar archive file, instead of STDIN
	Quiet         bool                   `protobuf:"varint,2,opt,name=quiet,proto3" json:"quiet,omitempty"`                                   // Suppress the load output
	Platform      string                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`                              // Import content for a specific platform
	AllPlatforms  bool                   `protobuf:"varint,4,opt,name=all_platforms,json=allPlatforms,proto3" json:"all_platforms,omitempty"` // Import content for all platforms
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadImageRequest) Reset() {
	*x = LoadImageRequest{}
	mi := &file_image_v1_image_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadImageRequest) ProtoMessage() {}

func (x *LoadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadImageRequest.ProtoReflect.Descriptor instead.
func (*LoadImageRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{6}
}

func (x *LoadImageRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *LoadImageRequest) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *LoadImageRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *LoadImageRequest) GetAllPlatforms() bool {
	if x != nil {
		return x.AllPlatforms
	}
	return false
}

// Image history request
type ImageHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                       // Image name
	NoTrunc       bool                   `protobuf:"varint,2,opt,name=no_trunc,json=noTrunc,proto3" json:"no_trunc,omitempty"` // Don't truncate output
	Quiet         bool                   `protobuf:"varint,3,opt,name=quiet,proto3" json:"quiet,omitempty"`                    // Only show image IDs
	Format        string                 `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`                   // Pretty-print history using a Go template
	Human         bool                   `protobuf:"varint,5,opt,name=human,proto3" json:"human,omitempty"`                    // Print sizes in human readable format (default true)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageHistoryRequest) Reset() {
	*x = ImageHistoryRequest{}
	mi := &file_image_v1_image_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageHistoryRequest) ProtoMessage() {}

func (x *ImageHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageHistoryRequest.ProtoReflect.Descriptor instead.
func (*ImageHistoryRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{7}
}

func (x *ImageHistoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageHistoryRequest) GetNoTrunc() bool {
	if x != nil {
		return x.NoTrunc
	}
	return false
}

func (x *ImageHistoryRequest) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *ImageHistoryRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *ImageHistoryRequest) GetHuman() bool {
	if x != nil {
		return x.Human
	}
	return false
}

// Inspect image request
type InspectImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`     // Image name
	Format        string                 `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"` // Format the output using the given Go template
	Mode          string                 `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`     // Specify inspect mode (dockercompat for Docker-compatible output)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectImageRequest) Reset() {
	*x = InspectImageRequest{}
	mi := &file_image_v1_image_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectImageRequest) ProtoMessage() {}

func (x *InspectImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectImageRequest.ProtoReflect.Descriptor instead.
func (*InspectImageRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{8}
}

func (x *InspectImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InspectImageRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *InspectImageRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

// List images response
type ListImagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*ImageInfo           `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesResponse) Reset() {
	*x = ListImagesResponse{}
	mi := &file_image_v1_image_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesResponse) ProtoMessage() {}

func (x *ListImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesResponse.ProtoReflect.Descriptor instead.
func (*ListImagesResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{9}
}

func (x *ListImagesResponse) GetImages() []*ImageInfo {
	if x != nil {
		return x.Images
	}
	return nil
}

// Pull image response
type PullImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Digest        string                 `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"` // Image digest
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // Pull status message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullImageResponse) Reset() {
	*x = PullImageResponse{}
	mi := &file_image_v1_image_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullImageResponse) ProtoMessage() {}

func (x *PullImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullImageResponse.ProtoReflect.Descriptor instead.
func (*PullImageResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{10}
}

func (x *PullImageResponse) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *PullImageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Push image response
type PushImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Digest        string                 `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"` // Image digest
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // Push status message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushImageResponse) Reset() {
	*x = PushImageResponse{}
	mi := &file_image_v1_image_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushImageResponse) ProtoMessage() {}

func (x *PushImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushImageResponse.ProtoReflect.Descriptor instead.
func (*PushImageResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{11}
}

func (x *PushImageResponse) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *PushImageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Remove image response
type RemoveImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Removed       []string               `protobuf:"bytes,1,rep,name=removed,proto3" json:"removed,omitempty"`   // List of removed image references
	Untagged      []string               `protobuf:"bytes,2,rep,name=untagged,proto3" json:"untagged,omitempty"` // List of untagged image references
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveImageResponse) Reset() {
	*x = RemoveImageResponse{}
	mi := &file_image_v1_image_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveImageResponse) ProtoMessage() {}

func (x *RemoveImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveImageResponse.ProtoReflect.Descriptor instead.
func (*RemoveImageResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveImageResponse) GetRemoved() []string {
	if x != nil {
		return x.Removed
	}
	return nil
}

func (x *RemoveImageResponse) GetUntagged() []string {
	if x != nil {
		return x.Untagged
	}
	return nil
}

// Tag image response
type TagImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // Tag operation status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagImageResponse) Reset() {
	*x = TagImageResponse{}
	mi := &file_image_v1_image_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagImageResponse) ProtoMessage() {}

func (x *TagImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagImageResponse.ProtoReflect.Descriptor instead.
func (*TagImageResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{13}
}

func (x *TagImageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Save image response
type SaveImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OutputPath    string                 `protobuf:"bytes,1,opt,name=output_path,json=outputPath,proto3" json:"output_path,omitempty"` // Path where the image was saved
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`                              // Size of the saved archive
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveImageResponse) Reset() {
	*x = SaveImageResponse{}
	mi := &file_image_v1_image_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveImageResponse) ProtoMessage() {}

func (x *SaveImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveImageResponse.ProtoReflect.Descriptor instead.
func (*SaveImageResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{14}
}

func (x *SaveImageResponse) GetOutputPath() string {
	if x != nil {
		return x.OutputPath
	}
	return ""
}

func (x *SaveImageResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// Load image response
type LoadImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Loaded        []string               `protobuf:"bytes,1,rep,name=loaded,proto3" json:"loaded,omitempty"` // List of loaded image references
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadImageResponse) Reset() {
	*x = LoadImageResponse{}
	mi := &file_image_v1_image_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadImageResponse) ProtoMessage() {}

func (x *LoadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadImageResponse.ProtoReflect.Descriptor instead.
func (*LoadImageResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{15}
}

func (x *LoadImageResponse) GetLoaded() []string {
	if x != nil {
		return x.Loaded
	}
	return nil
}

// Image history response
type ImageHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Layers        []*HistoryLayer        `protobuf:"bytes,1,rep,name=layers,proto3" json:"layers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageHistoryResponse) Reset() {
	*x = ImageHistoryResponse{}
	mi := &file_image_v1_image_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageHistoryResponse) ProtoMessage() {}

func (x *ImageHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageHistoryResponse.ProtoReflect.Descriptor instead.
func (*ImageHistoryResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{16}
}

func (x *ImageHistoryResponse) GetLayers() []*HistoryLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

// Inspect image response
type InspectImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"` // JSON representation of image details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectImageResponse) Reset() {
	*x = InspectImageResponse{}
	mi := &file_image_v1_image_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectImageResponse) ProtoMessage() {}

func (x *InspectImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectImageResponse.ProtoReflect.Descriptor instead.
func (*InspectImageResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{17}
}

func (x *InspectImageResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Image information
type ImageInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repository    string                 `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"` // Repository name
	Tag           string                 `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`               // Tag name
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`                 // Image ID
	Digest        string                 `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`         // Image digest
	Created       string                 `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`       // Creation time
	Size          string                 `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`             // Image size
	Platform      string                 `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`     // Platform information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	mi := &file_image_v1_image_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{18}
}

func (x *ImageInfo) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *ImageInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ImageInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ImageInfo) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *ImageInfo) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *ImageInfo) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ImageInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

// History layer information
type HistoryLayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // Layer ID
	Created       string                 `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`                      // Creation time
	CreatedBy     string                 `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"` // Command that created the layer
	Size          string                 `protobuf:"bytes,4,opt,name=size,proto3" json:"size,omitempty"`                            // Layer size
	Comment       string                 `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`                      // Comment
	Missing       bool                   `protobuf:"varint,6,opt,name=missing,proto3" json:"missing,omitempty"`                     // Whether the layer is missing
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryLayer) Reset() {
	*x = HistoryLayer{}
	mi := &file_image_v1_image_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryLayer) ProtoMessage() {}

func (x *HistoryLayer) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryLayer.ProtoReflect.Descriptor instead.
func (*HistoryLayer) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{19}
}

func (x *HistoryLayer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HistoryLayer) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *HistoryLayer) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *HistoryLayer) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *HistoryLayer) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *HistoryLayer) GetMissing() bool {
	if x != nil {
		return x.Missing
	}
	return false
}

// ECR authentication configuration
type ECRAuthConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Region         string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`                                       // AWS region for ECR
	RegistryId     string                 `protobuf:"bytes,2,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`             // AWS account ID (optional, defaults to caller's account)
	AwsCredentials *AWSCredentials        `protobuf:"bytes,3,opt,name=aws_credentials,json=awsCredentials,proto3" json:"aws_credentials,omitempty"` // AWS credentials
	AutoRefresh    bool                   `protobuf:"varint,4,opt,name=auto_refresh,json=autoRefresh,proto3" json:"auto_refresh,omitempty"`         // Automatically refresh token when expired
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ECRAuthConfig) Reset() {
	*x = ECRAuthConfig{}
	mi := &file_image_v1_image_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECRAuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECRAuthConfig) ProtoMessage() {}

func (x *ECRAuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECRAuthConfig.ProtoReflect.Descriptor instead.
func (*ECRAuthConfig) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{20}
}

func (x *ECRAuthConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ECRAuthConfig) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *ECRAuthConfig) GetAwsCredentials() *AWSCredentials {
	if x != nil {
		return x.AwsCredentials
	}
	return nil
}

func (x *ECRAuthConfig) GetAutoRefresh() bool {
	if x != nil {
		return x.AutoRefresh
	}
	return false
}

// AWS credentials configuration
type AWSCredentials struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to CredentialType:
	//
	//	*AWSCredentials_AccessKey
	//	*AWSCredentials_AssumeRole
	//	*AWSCredentials_InstanceProfile
	//	*AWSCredentials_EcsTaskRole
	CredentialType isAWSCredentials_CredentialType `protobuf_oneof:"credential_type"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AWSCredentials) Reset() {
	*x = AWSCredentials{}
	mi := &file_image_v1_image_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWSCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSCredentials) ProtoMessage() {}

func (x *AWSCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSCredentials.ProtoReflect.Descriptor instead.
func (*AWSCredentials) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{21}
}

func (x *AWSCredentials) GetCredentialType() isAWSCredentials_CredentialType {
	if x != nil {
		return x.CredentialType
	}
	return nil
}

func (x *AWSCredentials) GetAccessKey() *AWSAccessKeyCredentials {
	if x != nil {
		if x, ok := x.CredentialType.(*AWSCredentials_AccessKey); ok {
			return x.AccessKey
		}
	}
	return nil
}

func (x *AWSCredentials) GetAssumeRole() *AWSAssumeRoleCredentials {
	if x != nil {
		if x, ok := x.CredentialType.(*AWSCredentials_AssumeRole); ok {
			return x.AssumeRole
		}
	}
	return nil
}

func (x *AWSCredentials) GetInstanceProfile() *AWSInstanceProfileCredentials {
	if x != nil {
		if x, ok := x.CredentialType.(*AWSCredentials_InstanceProfile); ok {
			return x.InstanceProfile
		}
	}
	return nil
}

func (x *AWSCredentials) GetEcsTaskRole() *AWSECSTaskRoleCredentials {
	if x != nil {
		if x, ok := x.CredentialType.(*AWSCredentials_EcsTaskRole); ok {
			return x.EcsTaskRole
		}
	}
	return nil
}

type isAWSCredentials_CredentialType interface {
	isAWSCredentials_CredentialType()
}

type AWSCredentials_AccessKey struct {
	AccessKey *AWSAccessKeyCredentials `protobuf:"bytes,1,opt,name=access_key,json=accessKey,proto3,oneof"` // Access Key and Secret Key
}

type AWSCredentials_AssumeRole struct {
	AssumeRole *AWSAssumeRoleCredentials `protobuf:"bytes,2,opt,name=assume_role,json=assumeRole,proto3,oneof"` // STS Assume Role
}

type AWSCredentials_InstanceProfile struct {
	InstanceProfile *AWSInstanceProfileCredentials `protobuf:"bytes,3,opt,name=instance_profile,json=instanceProfile,proto3,oneof"` // EC2 Instance Profile
}

type AWSCredentials_EcsTaskRole struct {
	EcsTaskRole *AWSECSTaskRoleCredentials `protobuf:"bytes,4,opt,name=ecs_task_role,json=ecsTaskRole,proto3,oneof"` // ECS Task Role
}

func (*AWSCredentials_AccessKey) isAWSCredentials_CredentialType() {}

func (*AWSCredentials_AssumeRole) isAWSCredentials_CredentialType() {}

func (*AWSCredentials_InstanceProfile) isAWSCredentials_CredentialType() {}

func (*AWSCredentials_EcsTaskRole) isAWSCredentials_CredentialType() {}

// AWS Access Key credentials
type AWSAccessKeyCredentials struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccessKeyId     string                 `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`             // AWS Access Key ID
	SecretAccessKey string                 `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"` // AWS Secret Access Key
	SessionToken    string                 `protobuf:"bytes,3,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`            // AWS Session Token (optional)
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AWSAccessKeyCredentials) Reset() {
	*x = AWSAccessKeyCredentials{}
	mi := &file_image_v1_image_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWSAccessKeyCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSAccessKeyCredentials) ProtoMessage() {}

func (x *AWSAccessKeyCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSAccessKeyCredentials.ProtoReflect.Descriptor instead.
func (*AWSAccessKeyCredentials) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{22}
}

func (x *AWSAccessKeyCredentials) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *AWSAccessKeyCredentials) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *AWSAccessKeyCredentials) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

// AWS STS Assume Role credentials
type AWSAssumeRoleCredentials struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RoleArn           string                 `protobuf:"bytes,1,opt,name=role_arn,json=roleArn,proto3" json:"role_arn,omitempty"`                               // ARN of the role to assume
	SessionName       string                 `protobuf:"bytes,2,opt,name=session_name,json=sessionName,proto3" json:"session_name,omitempty"`                   // Session name for the assumed role
	ExternalId        string                 `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`                      // External ID (optional)
	DurationSeconds   int32                  `protobuf:"varint,4,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`      // Duration of the assumed role session
	SourceCredentials *AWSCredentials        `protobuf:"bytes,5,opt,name=source_credentials,json=sourceCredentials,proto3" json:"source_credentials,omitempty"` // Source credentials to assume the role
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AWSAssumeRoleCredentials) Reset() {
	*x = AWSAssumeRoleCredentials{}
	mi := &file_image_v1_image_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWSAssumeRoleCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSAssumeRoleCredentials) ProtoMessage() {}

func (x *AWSAssumeRoleCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSAssumeRoleCredentials.ProtoReflect.Descriptor instead.
func (*AWSAssumeRoleCredentials) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{23}
}

func (x *AWSAssumeRoleCredentials) GetRoleArn() string {
	if x != nil {
		return x.RoleArn
	}
	return ""
}

func (x *AWSAssumeRoleCredentials) GetSessionName() string {
	if x != nil {
		return x.SessionName
	}
	return ""
}

func (x *AWSAssumeRoleCredentials) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *AWSAssumeRoleCredentials) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *AWSAssumeRoleCredentials) GetSourceCredentials() *AWSCredentials {
	if x != nil {
		return x.SourceCredentials
	}
	return nil
}

// AWS Instance Profile credentials
type AWSInstanceProfileCredentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AWSInstanceProfileCredentials) Reset() {
	*x = AWSInstanceProfileCredentials{}
	mi := &file_image_v1_image_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWSInstanceProfileCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSInstanceProfileCredentials) ProtoMessage() {}

func (x *AWSInstanceProfileCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSInstanceProfileCredentials.ProtoReflect.Descriptor instead.
func (*AWSInstanceProfileCredentials) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{24}
}

// AWS ECS Task Role credentials
type AWSECSTaskRoleCredentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AWSECSTaskRoleCredentials) Reset() {
	*x = AWSECSTaskRoleCredentials{}
	mi := &file_image_v1_image_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWSECSTaskRoleCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSECSTaskRoleCredentials) ProtoMessage() {}

func (x *AWSECSTaskRoleCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSECSTaskRoleCredentials.ProtoReflect.Descriptor instead.
func (*AWSECSTaskRoleCredentials) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{25}
}

// ECR login request
type ECRLoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EcrAuth       *ECRAuthConfig         `protobuf:"bytes,1,opt,name=ecr_auth,json=ecrAuth,proto3" json:"ecr_auth,omitempty"` // ECR authentication configuration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ECRLoginRequest) Reset() {
	*x = ECRLoginRequest{}
	mi := &file_image_v1_image_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECRLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECRLoginRequest) ProtoMessage() {}

func (x *ECRLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECRLoginRequest.ProtoReflect.Descriptor instead.
func (*ECRLoginRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{26}
}

func (x *ECRLoginRequest) GetEcrAuth() *ECRAuthConfig {
	if x != nil {
		return x.EcrAuth
	}
	return nil
}

// ECR login response
type ECRLoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                              // Login status message
	RegistryUrl   string                 `protobuf:"bytes,2,opt,name=registry_url,json=registryUrl,proto3" json:"registry_url,omitempty"` // ECR registry URL
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                          // Username for registry auth
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                                // Authentication token
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`      // Token expiration timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ECRLoginResponse) Reset() {
	*x = ECRLoginResponse{}
	mi := &file_image_v1_image_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECRLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECRLoginResponse) ProtoMessage() {}

func (x *ECRLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECRLoginResponse.ProtoReflect.Descriptor instead.
func (*ECRLoginResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{27}
}

func (x *ECRLoginResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ECRLoginResponse) GetRegistryUrl() string {
	if x != nil {
		return x.RegistryUrl
	}
	return ""
}

func (x *ECRLoginResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ECRLoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ECRLoginResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

// ECR logout request
type ECRLogoutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RegistryUrl   string                 `protobuf:"bytes,1,opt,name=registry_url,json=registryUrl,proto3" json:"registry_url,omitempty"` // ECR registry URL to logout from
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ECRLogoutRequest) Reset() {
	*x = ECRLogoutRequest{}
	mi := &file_image_v1_image_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECRLogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECRLogoutRequest) ProtoMessage() {}

func (x *ECRLogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECRLogoutRequest.ProtoReflect.Descriptor instead.
func (*ECRLogoutRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{28}
}

func (x *ECRLogoutRequest) GetRegistryUrl() string {
	if x != nil {
		return x.RegistryUrl
	}
	return ""
}

// ECR logout response
type ECRLogoutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // Logout status message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ECRLogoutResponse) Reset() {
	*x = ECRLogoutResponse{}
	mi := &file_image_v1_image_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECRLogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECRLogoutResponse) ProtoMessage() {}

func (x *ECRLogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECRLogoutResponse.ProtoReflect.Descriptor instead.
func (*ECRLogoutResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{29}
}

func (x *ECRLogoutResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_image_v1_image_proto protoreflect.FileDescriptor

const file_image_v1_image_proto_rawDesc = "" +
	"\n" +
	"\x14image/v1/image.proto\x12\bimage.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xa0\x01\n" +
	"\x11ListImagesRequest\x12\x10\n" +
	"\x03all\x18\x01 \x01(\bR\x03all\x12\x14\n" +
	"\x05quiet\x18\x02 \x01(\bR\x05quiet\x12\x19\n" +
	"\bno_trunc\x18\x03 \x01(\bR\anoTrunc\x12\x16\n" +
	"\x06filter\x18\x04 \x01(\tR\x06filter\x12\x16\n" +
	"\x06format\x18\x05 \x01(\tR\x06format\x12\x18\n" +
	"\adigests\x18\x06 \x01(\bR\adigests\"\x80\x02\n" +
	"\x10PullImageRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bplatform\x18\x02 \x01(\tR\bplatform\x12#\n" +
	"\rall_platforms\x18\x03 \x01(\bR\fallPlatforms\x12\x14\n" +
	"\x05quiet\x18\x04 \x01(\bR\x05quiet\x12\x16\n" +
	"\x06verify\x18\x05 \x01(\tR\x06verify\x12\x1d\n" +
	"\n" +
	"cosign_key\x18\x06 \x01(\tR\tcosignKey\x12\x16\n" +
	"\x06unpack\x18\a \x01(\tR\x06unpack\x122\n" +
	"\becr_auth\x18\b \x01(\v2\x17.image.v1.ECRAuthConfigR\aecrAuth\"\xc8\x01\n" +
	"\x10PushImageRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rall_platforms\x18\x02 \x01(\bR\fallPlatforms\x12\x14\n" +
	"\x05quiet\x18\x03 \x01(\bR\x05quiet\x12\x12\n" +
	"\x04sign\x18\x04 \x01(\tR\x04sign\x12\x1d\n" +
	"\n" +
	"cosign_key\x18\x05 \x01(\tR\tcosignKey\x122\n" +
	"\becr_auth\x18\x06 \x01(\v2\x17.image.v1.ECRAuthConfigR\aecrAuth\"Y\n" +
	"\x12RemoveImageRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12\x19\n" +
	"\bno_prune\x18\x03 \x01(\bR\anoPrune\"W\n" +
	"\x0fTagImageRequest\x12!\n" +
	"\fsource_image\x18\x01 \x01(\tR\vsourceImage\x12!\n" +
	"\ftarget_image\x18\x02 \x01(\tR\vtargetImage\"X\n" +
	"\x10SaveImageRequest\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\x12\x16\n" +
	"\x06output\x18\x02 \x01(\tR\x06output\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\"\x7f\n" +
	"\x10LoadImageRequest\x12\x14\n" +
	"\x05input\x18\x01 \x01(\tR\x05input\x12\x14\n" +
	"\x05quiet\x18\x02 \x01(\bR\x05quiet\x12\x1a\n" +
	"\bplatform\x18\x03 \x01(\tR\bplatform\x12#\n" +
	"\rall_platforms\x18\x04 \x01(\bR\fallPlatforms\"\x88\x01\n" +
	"\x13ImageHistoryRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\bno_trunc\x18\x02 \x01(\bR\anoTrunc\x12\x14\n" +
	"\x05quiet\x18\x03 \x01(\bR\x05quiet\x12\x16\n" +
	"\x06format\x18\x04 \x01(\tR\x06format\x12\x14\n" +
	"\x05human\x18\x05 \x01(\bR\x05human\"U\n" +
	"\x13InspectImageRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06format\x18\x02 \x01(\tR\x06format\x12\x12\n" +
	"\x04mode\x18\x03 \x01(\tR\x04mode\"A\n" +
	"\x12ListImagesResponse\x12+\n" +
	"\x06images\x18\x01 \x03(\v2\x13.image.v1.ImageInfoR\x06images\"C\n" +
	"\x11PullImageResponse\x12\x16\n" +
	"\x06digest\x18\x01 \x01(\tR\x06digest\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"C\n" +
	"\x11PushImageResponse\x12\x16\n" +
	"\x06digest\x18\x01 \x01(\tR\x06digest\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"K\n" +
	"\x13RemoveImageResponse\x12\x18\n" +
	"\aremoved\x18\x01 \x03(\tR\aremoved\x12\x1a\n" +
	"\buntagged\x18\x02 \x03(\tR\buntagged\"*\n" +
	"\x10TagImageResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"H\n" +
	"\x11SaveImageResponse\x12\x1f\n" +
	"\voutput_path\x18\x01 \x01(\tR\n" +
	"outputPath\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\"+\n" +
	"\x11LoadImageResponse\x12\x16\n" +
	"\x06loaded\x18\x01 \x03(\tR\x06loaded\"F\n" +
	"\x14ImageHistoryResponse\x12.\n" +
	"\x06layers\x18\x01 \x03(\v2\x16.image.v1.HistoryLayerR\x06layers\"0\n" +
	"\x14InspectImageResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\"\xaf\x01\n" +
	"\tImageInfo\x12\x1e\n" +
	"\n" +
	"repository\x18\x01 \x01(\tR\n" +
	"repository\x12\x10\n" +
	"\x03tag\x18\x02 \x01(\tR\x03tag\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x12\x16\n" +
	"\x06digest\x18\x04 \x01(\tR\x06digest\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\x12\x12\n" +
	"\x04size\x18\x06 \x01(\tR\x04size\x12\x1a\n" +
	"\bplatform\x18\a \x01(\tR\bplatform\"\x9f\x01\n" +
	"\fHistoryLayer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acreated\x18\x02 \x01(\tR\acreated\x12\x1d\n" +
	"\n" +
	"created_by\x18\x03 \x01(\tR\tcreatedBy\x12\x12\n" +
	"\x04size\x18\x04 \x01(\tR\x04size\x12\x18\n" +
	"\acomment\x18\x05 \x01(\tR\acomment\x12\x18\n" +
	"\amissing\x18\x06 \x01(\bR\amissing\"\xae\x01\n" +
	"\rECRAuthConfig\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12\x1f\n" +
	"\vregistry_id\x18\x02 \x01(\tR\n" +
	"registryId\x12A\n" +
	"\x0faws_credentials\x18\x03 \x01(\v2\x18.image.v1.AWSCredentialsR\x0eawsCredentials\x12!\n" +
	"\fauto_refresh\x18\x04 \x01(\bR\vautoRefresh\"\xcf\x02\n" +
	"\x0eAWSCredentials\x12B\n" +
	"\n" +
	"access_key\x18\x01 \x01(\v2!.image.v1.AWSAccessKeyCredentialsH\x00R\taccessKey\x12E\n" +
	"\vassume_role\x18\x02 \x01(\v2\".image.v1.AWSAssumeRoleCredentialsH\x00R\n" +
	"assumeRole\x12T\n" +
	"\x10instance_profile\x18\x03 \x01(\v2'.image.v1.AWSInstanceProfileCredentialsH\x00R\x0finstanceProfile\x12I\n" +
	"\recs_task_role\x18\x04 \x01(\v2#.image.v1.AWSECSTaskRoleCredentialsH\x00R\vecsTaskRoleB\x11\n" +
	"\x0fcredential_type\"\x8e\x01\n" +
	"\x17AWSAccessKeyCredentials\x12\"\n" +
	"\raccess_key_id\x18\x01 \x01(\tR\vaccessKeyId\x12*\n" +
	"\x11secret_access_key\x18\x02 \x01(\tR\x0fsecretAccessKey\x12#\n" +
	"\rsession_token\x18\x03 \x01(\tR\fsessionToken\"\xed\x01\n" +
	"\x18AWSAssumeRoleCredentials\x12\x19\n" +
	"\brole_arn\x18\x01 \x01(\tR\aroleArn\x12!\n" +
	"\fsession_name\x18\x02 \x01(\tR\vsessionName\x12\x1f\n" +
	"\vexternal_id\x18\x03 \x01(\tR\n" +
	"externalId\x12)\n" +
	"\x10duration_seconds\x18\x04 \x01(\x05R\x0fdurationSeconds\x12G\n" +
	"\x12source_credentials\x18\x05 \x01(\v2\x18.image.v1.AWSCredentialsR\x11sourceCredentials\"\x1f\n" +
	"\x1dAWSInstanceProfileCredentials\"\x1b\n" +
	"\x19AWSECSTaskRoleCredentials\"E\n" +
	"\x0fECRLoginRequest\x122\n" +
	"\becr_auth\x18\x01 \x01(\v2\x17.image.v1.ECRAuthConfigR\aecrAuth\"\x9e\x01\n" +
	"\x10ECRLoginResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12!\n" +
	"\fregistry_url\x18\x02 \x01(\tR\vregistryUrl\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\"5\n" +
	"\x10ECRLogoutRequest\x12!\n" +
	"\fregistry_url\x18\x01 \x01(\tR\vregistryUrl\"+\n" +
	"\x11ECRLogoutResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2\xe9\b\n" +
	"\fImageService\x12[\n" +
	"\n" +
	"ListImages\x12\x1b.image.v1.ListImagesRequest\x1a\x1c.image.v1.ListImagesResponse\"\x12\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v1/images\x12`\n" +
	"\tPullImage\x12\x1a.image.v1.PullImageRequest\x1a\x1b.image.v1.PullImageResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/images/pull\x12`\n" +
	"\tPushImage\x12\x1a.image.v1.PushImageRequest\x1a\x1b.image.v1.PushImageResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/images/push\x12e\n" +
	"\vRemoveImage\x12\x1c.image.v1.RemoveImageRequest\x1a\x1d.image.v1.RemoveImageResponse\"\x19\x82\xd3\xe4\x93\x02\x13*\x11/v1/images/{name}\x12k\n" +
	"\bTagImage\x12\x19.image.v1.TagImageRequest\x1a\x1a.image.v1.TagImageResponse\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/v1/images/{source_image}/tag\x12`\n" +
	"\tSaveImage\x12\x1a.image.v1.SaveImageRequest\x1a\x1b.image.v1.SaveImageResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/images/save\x12`\n" +
	"\tLoadImage\x12\x1a.image.v1.LoadImageRequest\x1a\x1b.image.v1.LoadImageResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/images/load\x12p\n" +
	"\fImageHistory\x12\x1d.image.v1.ImageHistoryRequest\x1a\x1e.image.v1.ImageHistoryResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/images/{name}/history\x12p\n" +
	"\fInspectImage\x12\x1d.image.v1.InspectImageRequest\x1a\x1e.image.v1.InspectImageResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/images/{name}/inspect\x12[\n" +
	"\bECRLogin\x12\x19.image.v1.ECRLoginRequest\x1a\x1a.image.v1.ECRLoginResponse\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/v1/ecr/login\x12_\n" +
	"\tECRLogout\x12\x1a.image.v1.ECRLogoutRequest\x1a\x1b.image.v1.ECRLogoutResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/ecr/logoutBB\n" +
	"\x17dev.kratos.api.image.v1B\fImageProtoV1P\x01Z\x17dsagent/api/image/v1;v1b\x06proto3"

var (
	file_image_v1_image_proto_rawDescOnce sync.Once
	file_image_v1_image_proto_rawDescData []byte
)

func file_image_v1_image_proto_rawDescGZIP() []byte {
	file_image_v1_image_proto_rawDescOnce.Do(func() {
		file_image_v1_image_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_image_v1_image_proto_rawDesc), len(file_image_v1_image_proto_rawDesc)))
	})
	return file_image_v1_image_proto_rawDescData
}

var file_image_v1_image_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_image_v1_image_proto_goTypes = []any{
	(*ListImagesRequest)(nil),             // 0: image.v1.ListImagesRequest
	(*PullImageRequest)(nil),              // 1: image.v1.PullImageRequest
	(*PushImageRequest)(nil),              // 2: image.v1.PushImageRequest
	(*RemoveImageRequest)(nil),            // 3: image.v1.RemoveImageRequest
	(*TagImageRequest)(nil),               // 4: image.v1.TagImageRequest
	(*SaveImageRequest)(nil),              // 5: image.v1.SaveImageRequest
	(*LoadImageRequest)(nil),              // 6: image.v1.LoadImageRequest
	(*ImageHistoryRequest)(nil),           // 7: image.v1.ImageHistoryRequest
	(*InspectImageRequest)(nil),           // 8: image.v1.InspectImageRequest
	(*ListImagesResponse)(nil),            // 9: image.v1.ListImagesResponse
	(*PullImageResponse)(nil),             // 10: image.v1.PullImageResponse
	(*PushImageResponse)(nil),             // 11: image.v1.PushImageResponse
	(*RemoveImageResponse)(nil),           // 12: image.v1.RemoveImageResponse
	(*TagImageResponse)(nil),              // 13: image.v1.TagImageResponse
	(*SaveImageResponse)(nil),             // 14: image.v1.SaveImageResponse
	(*LoadImageResponse)(nil),             // 15: image.v1.LoadImageResponse
	(*ImageHistoryResponse)(nil),          // 16: image.v1.ImageHistoryResponse
	(*InspectImageResponse)(nil),          // 17: image.v1.InspectImageResponse
	(*ImageInfo)(nil),                     // 18: image.v1.ImageInfo
	(*HistoryLayer)(nil),                  // 19: image.v1.HistoryLayer
	(*ECRAuthConfig)(nil),                 // 20: image.v1.ECRAuthConfig
	(*AWSCredentials)(nil),                // 21: image.v1.AWSCredentials
	(*AWSAccessKeyCredentials)(nil),       // 22: image.v1.AWSAccessKeyCredentials
	(*AWSAssumeRoleCredentials)(nil),      // 23: image.v1.AWSAssumeRoleCredentials
	(*AWSInstanceProfileCredentials)(nil), // 24: image.v1.AWSInstanceProfileCredentials
	(*AWSECSTaskRoleCredentials)(nil),     // 25: image.v1.AWSECSTaskRoleCredentials
	(*ECRLoginRequest)(nil),               // 26: image.v1.ECRLoginRequest
	(*ECRLoginResponse)(nil),              // 27: image.v1.ECRLoginResponse
	(*ECRLogoutRequest)(nil),              // 28: image.v1.ECRLogoutRequest
	(*ECRLogoutResponse)(nil),             // 29: image.v1.ECRLogoutResponse
}
var file_image_v1_image_proto_depIdxs = []int32{
	20, // 0: image.v1.PullImageRequest.ecr_auth:type_name -> image.v1.ECRAuthConfig
	20, // 1: image.v1.PushImageRequest.ecr_auth:type_name -> image.v1.ECRAuthConfig
	18, // 2: image.v1.ListImagesResponse.images:type_name -> image.v1.ImageInfo
	19, // 3: image.v1.ImageHistoryResponse.layers:type_name -> image.v1.HistoryLayer
	21, // 4: image.v1.ECRAuthConfig.aws_credentials:type_name -> image.v1.AWSCredentials
	22, // 5: image.v1.AWSCredentials.access_key:type_name -> image.v1.AWSAccessKeyCredentials
	23, // 6: image.v1.AWSCredentials.assume_role:type_name -> image.v1.AWSAssumeRoleCredentials
	24, // 7: image.v1.AWSCredentials.instance_profile:type_name -> image.v1.AWSInstanceProfileCredentials
	25, // 8: image.v1.AWSCredentials.ecs_task_role:type_name -> image.v1.AWSECSTaskRoleCredentials
	21, // 9: image.v1.AWSAssumeRoleCredentials.source_credentials:type_name -> image.v1.AWSCredentials
	20, // 10: image.v1.ECRLoginRequest.ecr_auth:type_name -> image.v1.ECRAuthConfig
	0,  // 11: image.v1.ImageService.ListImages:input_type -> image.v1.ListImagesRequest
	1,  // 12: image.v1.ImageService.PullImage:input_type -> image.v1.PullImageRequest
	2,  // 13: image.v1.ImageService.PushImage:input_type -> image.v1.PushImageRequest
	3,  // 14: image.v1.ImageService.RemoveImage:input_type -> image.v1.RemoveImageRequest
	4,  // 15: image.v1.ImageService.TagImage:input_type -> image.v1.TagImageRequest
	5,  // 16: image.v1.ImageService.SaveImage:input_type -> image.v1.SaveImageRequest
	6,  // 17: image.v1.ImageService.LoadImage:input_type -> image.v1.LoadImageRequest
	7,  // 18: image.v1.ImageService.ImageHistory:input_type -> image.v1.ImageHistoryRequest
	8,  // 19: image.v1.ImageService.InspectImage:input_type -> image.v1.InspectImageRequest
	26, // 20: image.v1.ImageService.ECRLogin:input_type -> image.v1.ECRLoginRequest
	28, // 21: image.v1.ImageService.ECRLogout:input_type -> image.v1.ECRLogoutRequest
	9,  // 22: image.v1.ImageService.ListImages:output_type -> image.v1.ListImagesResponse
	10, // 23: image.v1.ImageService.PullImage:output_type -> image.v1.PullImageResponse
	11, // 24: image.v1.ImageService.PushImage:output_type -> image.v1.PushImageResponse
	12, // 25: image.v1.ImageService.RemoveImage:output_type -> image.v1.RemoveImageResponse
	13, // 26: image.v1.ImageService.TagImage:output_type -> image.v1.TagImageResponse
	14, // 27: image.v1.ImageService.SaveImage:output_type -> image.v1.SaveImageResponse
	15, // 28: image.v1.ImageService.LoadImage:output_type -> image.v1.LoadImageResponse
	16, // 29: image.v1.ImageService.ImageHistory:output_type -> image.v1.ImageHistoryResponse
	17, // 30: image.v1.ImageService.InspectImage:output_type -> image.v1.InspectImageResponse
	27, // 31: image.v1.ImageService.ECRLogin:output_type -> image.v1.ECRLoginResponse
	29, // 32: image.v1.ImageService.ECRLogout:output_type -> image.v1.ECRLogoutResponse
	22, // [22:33] is the sub-list for method output_type
	11, // [11:22] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_image_v1_image_proto_init() }
func file_image_v1_image_proto_init() {
	if File_image_v1_image_proto != nil {
		return
	}
	file_image_v1_image_proto_msgTypes[21].OneofWrappers = []any{
		(*AWSCredentials_AccessKey)(nil),
		(*AWSCredentials_AssumeRole)(nil),
		(*AWSCredentials_InstanceProfile)(nil),
		(*AWSCredentials_EcsTaskRole)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_image_v1_image_proto_rawDesc), len(file_image_v1_image_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_image_v1_image_proto_goTypes,
		DependencyIndexes: file_image_v1_image_proto_depIdxs,
		MessageInfos:      file_image_v1_image_proto_msgTypes,
	}.Build()
	File_image_v1_image_proto = out.File
	file_image_v1_image_proto_goTypes = nil
	file_image_v1_image_proto_depIdxs = nil
}
