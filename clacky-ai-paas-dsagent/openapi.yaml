# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /health:
        get:
            tags:
                - Health
            description: Check health/heartbeat status
            operationId: Health_Check
            parameters:
                - name: service
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/health.v1.HealthResponse'
    /heartbeat:
        get:
            tags:
                - Health
            description: Heartbeat endpoint
            operationId: Health_Heartbeat
            parameters:
                - name: clientId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/health.v1.HeartbeatResponse'
    /v1/containers:
        get:
            tags:
                - ContainerService
            description: List containers
            operationId: ContainerService_ListContainers
            parameters:
                - name: all
                  in: query
                  description: All containers
                  schema:
                    type: boolean
                - name: limit
                  in: query
                  description: Limit
                  schema:
                    type: integer
                    format: int32
                - name: size
                  in: query
                  description: Size
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.ListContainersResponse'
        post:
            tags:
                - ContainerService
            description: Create a container
            operationId: ContainerService_CreateContainer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/container.v1.CreateContainerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.CreateContainerResponse'
    /v1/containers/run:
        post:
            tags:
                - ContainerService
            description: Run a command in a new container
            operationId: ContainerService_RunContainer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/container.v1.RunContainerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.RunContainerResponse'
    /v1/containers/{containerId}:
        delete:
            tags:
                - ContainerService
            description: Remove one or more containers
            operationId: ContainerService_RemoveContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
                - name: force
                  in: query
                  description: Force removal
                  schema:
                    type: boolean
                - name: volumes
                  in: query
                  description: Remove volumes
                  schema:
                    type: boolean
                - name: link
                  in: query
                  description: Remove links
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.RemoveContainerResponse'
        patch:
            tags:
                - ContainerService
            description: Update container configuration
            operationId: ContainerService_UpdateContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/container.v1.UpdateContainerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.UpdateContainerResponse'
    /v1/containers/{containerId}/commit:
        post:
            tags:
                - ImageService
            description: Commit container changes to create a new image (equivalent to nerdctl commit)
            operationId: ImageService_CommitContainer
            parameters:
                - name: containerId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/image.v1.CommitContainerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/image.v1.CommitContainerResponse'
    /v1/containers/{containerId}/exec:
        post:
            tags:
                - ContainerService
            description: Execute a command in a running container
            operationId: ContainerService_ExecContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/container.v1.ExecContainerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.ExecContainerResponse'
    /v1/containers/{containerId}/healthcheck:
        post:
            tags:
                - ContainerService
            description: Run health check on container
            operationId: ContainerService_HealthCheck
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.HealthCheckResponse'
    /v1/containers/{containerId}/inspect:
        get:
            tags:
                - ContainerService
            description: Inspect one or more containers
            operationId: ContainerService_InspectContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
                - name: size
                  in: query
                  description: Size
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.InspectContainerResponse'
    /v1/containers/{containerId}/kill:
        post:
            tags:
                - ContainerService
            description: Kill one or more containers
            operationId: ContainerService_KillContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/container.v1.KillContainerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.KillContainerResponse'
    /v1/containers/{containerId}/logs:
        get:
            tags:
                - ContainerService
            description: Get container logs
            operationId: ContainerService_GetContainerLogs
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
                - name: follow
                  in: query
                  description: Follow
                  schema:
                    type: boolean
                - name: stdout
                  in: query
                  description: Show stdout
                  schema:
                    type: boolean
                - name: stderr
                  in: query
                  description: Show stderr
                  schema:
                    type: boolean
                - name: since
                  in: query
                  description: Since timestamp
                  schema:
                    type: string
                - name: until
                  in: query
                  description: Until timestamp
                  schema:
                    type: string
                - name: timestamps
                  in: query
                  description: Timestamps
                  schema:
                    type: boolean
                - name: tail
                  in: query
                  description: Tail
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.GetContainerLogsResponse'
    /v1/containers/{containerId}/pause:
        post:
            tags:
                - ContainerService
            description: Pause one or more containers
            operationId: ContainerService_PauseContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.PauseContainerResponse'
    /v1/containers/{containerId}/port:
        get:
            tags:
                - ContainerService
            description: Get container port mappings
            operationId: ContainerService_GetContainerPort
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
                - name: privatePort
                  in: query
                  description: Private port
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.GetContainerPortResponse'
    /v1/containers/{containerId}/rename:
        put:
            tags:
                - ContainerService
            description: Rename a container
            operationId: ContainerService_RenameContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/container.v1.RenameContainerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.RenameContainerResponse'
    /v1/containers/{containerId}/restart:
        post:
            tags:
                - ContainerService
            description: Restart one or more containers
            operationId: ContainerService_RestartContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
                - name: timeout
                  in: query
                  description: Timeout
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.RestartContainerResponse'
    /v1/containers/{containerId}/start:
        post:
            tags:
                - ContainerService
            description: Start one or more containers
            operationId: ContainerService_StartContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
                - name: detachKeys
                  in: query
                  description: Detach keys
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.StartContainerResponse'
    /v1/containers/{containerId}/stats:
        get:
            tags:
                - ContainerService
            description: Get container statistics
            operationId: ContainerService_GetContainerStats
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
                - name: stream
                  in: query
                  description: Stream stats
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.GetContainerStatsResponse'
    /v1/containers/{containerId}/stop:
        post:
            tags:
                - ContainerService
            description: Stop one or more containers
            operationId: ContainerService_StopContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
                - name: timeout
                  in: query
                  description: Timeout
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.StopContainerResponse'
    /v1/containers/{containerId}/unpause:
        post:
            tags:
                - ContainerService
            description: Unpause one or more containers
            operationId: ContainerService_UnpauseContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.UnpauseContainerResponse'
    /v1/containers/{containerId}/wait:
        post:
            tags:
                - ContainerService
            description: Wait for container to stop
            operationId: ContainerService_WaitContainer
            parameters:
                - name: containerId
                  in: path
                  description: Container ID or name
                  required: true
                  schema:
                    type: string
                - name: condition
                  in: query
                  description: Condition (not-running, next-exit, removed)
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/container.v1.WaitContainerResponse'
    /v1/ecr/login:
        post:
            tags:
                - ECRService
            description: Login to ECR registry
            operationId: ECRService_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ecr.v1.ECRLoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ecr.v1.ECRLoginResponse'
    /v1/ecr/logout:
        post:
            tags:
                - ECRService
            description: Logout from ECR registry
            operationId: ECRService_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ecr.v1.ECRLogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ecr.v1.ECRLogoutResponse'
    /v1/ecr/profiles:
        get:
            tags:
                - ECRService
            description: List configured ECR profiles
            operationId: ECRService_ListProfiles
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ecr.v1.ECRProfilesResponse'
    /v1/ecr/profiles/{name}:
        post:
            tags:
                - ECRService
            description: Create or update ECR profile
            operationId: ECRService_SetProfile
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ecr.v1.ECRSetProfileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ecr.v1.ECRSetProfileResponse'
        delete:
            tags:
                - ECRService
            description: Delete ECR profile
            operationId: ECRService_DeleteProfile
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ecr.v1.ECRDeleteProfileResponse'
    /v1/ecr/status:
        get:
            tags:
                - ECRService
            description: Get ECR login status for a registry
            operationId: ECRService_GetStatus
            parameters:
                - name: registryUrl
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ecr.v1.ECRStatusResponse'
    /v1/images:
        get:
            tags:
                - ImageService
            description: List images (equivalent to nerdctl images)
            operationId: ImageService_ListImages
            parameters:
                - name: all
                  in: query
                  schema:
                    type: boolean
                - name: quiet
                  in: query
                  schema:
                    type: boolean
                - name: noTrunc
                  in: query
                  schema:
                    type: boolean
                - name: filter
                  in: query
                  schema:
                    type: string
                - name: format
                  in: query
                  schema:
                    type: string
                - name: digests
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/image.v1.ListImagesResponse'
    /v1/images/load:
        post:
            tags:
                - ImageService
            description: Load images from tar archive (equivalent to nerdctl load)
            operationId: ImageService_LoadImage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/image.v1.LoadImageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/image.v1.LoadImageResponse'
    /v1/images/pull:
        post:
            tags:
                - ImageService
            description: Pull an image (equivalent to nerdctl pull)
            operationId: ImageService_PullImage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/image.v1.PullImageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/image.v1.PullImageResponse'
    /v1/images/push:
        post:
            tags:
                - ImageService
            description: Push an image (equivalent to nerdctl push)
            operationId: ImageService_PushImage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/image.v1.PushImageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/image.v1.PushImageResponse'
    /v1/images/save:
        post:
            tags:
                - ImageService
            description: Save images to tar archive (equivalent to nerdctl save)
            operationId: ImageService_SaveImage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/image.v1.SaveImageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/image.v1.SaveImageResponse'
    /v1/images/{name}:
        delete:
            tags:
                - ImageService
            description: Remove images (equivalent to nerdctl rmi)
            operationId: ImageService_RemoveImage
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
                - name: force
                  in: query
                  schema:
                    type: boolean
                - name: noPrune
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/image.v1.RemoveImageResponse'
    /v1/images/{name}/history:
        get:
            tags:
                - ImageService
            description: Show image history (equivalent to nerdctl history)
            operationId: ImageService_ImageHistory
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
                - name: noTrunc
                  in: query
                  schema:
                    type: boolean
                - name: quiet
                  in: query
                  schema:
                    type: boolean
                - name: format
                  in: query
                  schema:
                    type: string
                - name: human
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/image.v1.ImageHistoryResponse'
    /v1/images/{name}/inspect:
        get:
            tags:
                - ImageService
            description: Get image details (equivalent to nerdctl inspect on images)
            operationId: ImageService_InspectImage
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
                - name: format
                  in: query
                  schema:
                    type: string
                - name: mode
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/image.v1.InspectImageResponse'
    /v1/images/{sourceImage}/tag:
        post:
            tags:
                - ImageService
            description: Tag an image (equivalent to nerdctl tag)
            operationId: ImageService_TagImage
            parameters:
                - name: sourceImage
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/image.v1.TagImageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/image.v1.TagImageResponse'
components:
    schemas:
        container.v1.BindOptions:
            type: object
            properties:
                propagation:
                    type: string
                    description: Propagation
            description: Bind options
        container.v1.BlkioStatEntry:
            type: object
            properties:
                major:
                    type: string
                    description: Major
                minor:
                    type: string
                    description: Minor
                op:
                    type: string
                    description: Operation
                value:
                    type: string
                    description: Value
            description: Block I/O statistics entry
        container.v1.BlockIOStats:
            type: object
            properties:
                ioServiceBytesRecursive:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.BlkioStatEntry'
                    description: I/O service bytes recursive
                ioServicedRecursive:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.BlkioStatEntry'
                    description: I/O serviced recursive
                ioQueueRecursive:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.BlkioStatEntry'
                    description: I/O queue recursive
                ioServiceTimeRecursive:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.BlkioStatEntry'
                    description: I/O service time recursive
                ioWaitTimeRecursive:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.BlkioStatEntry'
                    description: I/O wait time recursive
                ioMergedRecursive:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.BlkioStatEntry'
                    description: I/O merged recursive
                ioTimeRecursive:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.BlkioStatEntry'
                    description: I/O time recursive
                sectorsRecursive:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.BlkioStatEntry'
                    description: Sectors recursive
            description: Block I/O statistics
        container.v1.CPUStats:
            type: object
            properties:
                cpuUsage:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.CPUUsage'
                    description: CPU usage
                systemCpuUsage:
                    type: string
                    description: System CPU usage
                onlineCpus:
                    type: integer
                    description: Online CPUs
                    format: uint32
                throttlingData:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.ThrottlingData'
                    description: Throttling data
            description: CPU statistics
        container.v1.CPUUsage:
            type: object
            properties:
                totalUsage:
                    type: string
                    description: Total usage
                usageInUsermode:
                    type: string
                    description: Usage in user mode
                usageInKernelmode:
                    type: string
                    description: Usage in kernel mode
                percpuUsage:
                    type: array
                    items:
                        type: string
                    description: Per CPU usage
            description: CPU usage
        container.v1.Container:
            type: object
            properties:
                id:
                    type: string
                    description: ID
                names:
                    type: array
                    items:
                        type: string
                    description: Names
                image:
                    type: string
                    description: Image
                imageId:
                    type: string
                    description: Image ID
                command:
                    type: string
                    description: Command
                created:
                    type: string
                    description: Created
                    format: date-time
                ports:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.ContainerPort'
                    description: Ports
                sizeRw:
                    type: string
                    description: Size RW
                sizeRootFs:
                    type: string
                    description: Size root fs
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: Labels
                state:
                    type: string
                    description: State
                status:
                    type: string
                    description: Status
                hostConfig:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.HostConfig'
                    description: Host config
                networkSettings:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.NetworkConfig'
                    description: Network settings
                mounts:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.Mount'
                    description: Mounts
            description: Container information
        container.v1.ContainerConfig:
            type: object
            properties:
                image:
                    type: string
                    description: Image name
                command:
                    type: array
                    items:
                        type: string
                    description: Command to run
                args:
                    type: array
                    items:
                        type: string
                    description: Arguments to the command
                workingDir:
                    type: string
                    description: Working directory
                env:
                    type: object
                    additionalProperties:
                        type: string
                    description: Environment variables
                exposedPorts:
                    type: array
                    items:
                        type: string
                    description: Exposed ports
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: Labels
                entrypoint:
                    type: array
                    items:
                        type: string
                    description: Entrypoint
                user:
                    type: string
                    description: User
                hostname:
                    type: string
                    description: Hostname
                domainname:
                    type: string
                    description: Domain name
                stopSignal:
                    type: string
                    description: Stop signal
                stopTimeout:
                    type: integer
                    description: Stop timeout
                    format: int32
                healthConfig:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.HealthConfig'
                    description: Health check
                restartPolicy:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.RestartPolicy'
                    description: Restart policy
            description: Container configuration for create/run operations
        container.v1.ContainerPort:
            type: object
            properties:
                ip:
                    type: string
                    description: IP
                privatePort:
                    type: integer
                    description: Private port
                    format: int32
                publicPort:
                    type: integer
                    description: Public port
                    format: int32
                type:
                    type: string
                    description: Type
            description: Container port information
        container.v1.ContainerStats:
            type: object
            properties:
                containerId:
                    type: string
                    description: Container ID
                name:
                    type: string
                    description: Name
                cpuStats:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.CPUStats'
                    description: CPU stats
                memoryStats:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.MemoryStats'
                    description: Memory stats
                networkStats:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/container.v1.NetworkStats'
                    description: Network stats
                blockIoStats:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.BlockIOStats'
                    description: Block I/O stats
                pidStats:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.PIDStats'
                    description: PID stats
                read:
                    type: string
                    description: Read timestamp
                    format: date-time
            description: Container statistics
        container.v1.CreateContainerRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Container name
                config:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.ContainerConfig'
                    description: Container config
                hostConfig:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.HostConfig'
                    description: Host config
                networkConfig:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.NetworkConfig'
                    description: Network config
                platform:
                    type: string
                    description: Platform
            description: Request and response messages
        container.v1.CreateContainerResponse:
            type: object
            properties:
                id:
                    type: string
                    description: Container ID
                warnings:
                    type: array
                    items:
                        type: string
                    description: Warnings
        container.v1.DeviceMapping:
            type: object
            properties:
                pathOnHost:
                    type: string
                    description: Path on host
                pathInContainer:
                    type: string
                    description: Path in container
                cgroupPermissions:
                    type: string
                    description: Cgroup permissions
            description: Device mapping
        container.v1.EndpointConfig:
            type: object
            properties:
                ipAddress:
                    type: string
                    description: IP address
                ipPrefixLen:
                    type: integer
                    description: IP prefix length
                    format: int32
                ipv6Gateway:
                    type: string
                    description: IPv6 gateway
                macAddress:
                    type: string
                    description: Mac address
                networkId:
                    type: string
                    description: Network ID
                endpointId:
                    type: string
                    description: Endpoint ID
            description: Endpoint configuration
        container.v1.ExecContainerRequest:
            type: object
            properties:
                containerId:
                    type: string
                    description: Container ID or name
                command:
                    type: array
                    items:
                        type: string
                    description: Command to execute
                detach:
                    type: boolean
                    description: Detach
                interactive:
                    type: boolean
                    description: Interactive
                tty:
                    type: boolean
                    description: TTY
                user:
                    type: string
                    description: User
                workdir:
                    type: string
                    description: Workdir
                env:
                    type: array
                    items:
                        type: string
                    description: Environment variables
        container.v1.ExecContainerResponse:
            type: object
            properties:
                execId:
                    type: string
                    description: Exec ID
                exitCode:
                    type: integer
                    description: Exit code (only for non-detached execs)
                    format: int32
                output:
                    type: string
                    description: Output (only for non-detached execs)
        container.v1.GetContainerLogsResponse:
            type: object
            properties:
                data:
                    type: string
                    description: Log data
                    format: bytes
                stream:
                    type: string
                    description: Stream (stdout/stderr)
                timestamp:
                    type: string
                    description: Timestamp
                    format: date-time
        container.v1.GetContainerPortResponse:
            type: object
            properties:
                portBindings:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.PortBinding'
                    description: Port bindings
        container.v1.GetContainerStatsResponse:
            type: object
            properties:
                stats:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.ContainerStats'
                    description: Stats
        container.v1.HealthCheckResponse:
            type: object
            properties:
                status:
                    type: string
                    description: Status (healthy, unhealthy, starting)
                failingStreak:
                    type: integer
                    description: Failed streak
                    format: int32
                log:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.HealthCheckResult'
                    description: Log
        container.v1.HealthCheckResult:
            type: object
            properties:
                start:
                    type: string
                    description: Start
                    format: date-time
                end:
                    type: string
                    description: End
                    format: date-time
                exitCode:
                    type: integer
                    description: Exit code
                    format: int32
                output:
                    type: string
                    description: Output
        container.v1.HealthConfig:
            type: object
            properties:
                test:
                    type: array
                    items:
                        type: string
                    description: Test command
                interval:
                    type: string
                    description: Interval
                timeout:
                    type: string
                    description: Timeout
                startPeriod:
                    type: string
                    description: Start period
                retries:
                    type: integer
                    description: Retries
                    format: int32
            description: Health check configuration
        container.v1.HostConfig:
            type: object
            properties:
                autoRemove:
                    type: boolean
                    description: Auto remove
                privileged:
                    type: boolean
                    description: Privileged mode
                readOnlyRootfs:
                    type: boolean
                    description: Read only root filesystem
                cpuShares:
                    type: string
                    description: CPU shares
                cpuPeriod:
                    type: string
                    description: CPU period
                cpuQuota:
                    type: string
                    description: CPU quota
                cpus:
                    type: string
                    description: CPUs
                cpusetCpus:
                    type: string
                    description: CPU set CPUs
                cpusetMems:
                    type: string
                    description: CPU set MEMs
                memory:
                    type: string
                    description: Memory limit
                memorySwap:
                    type: string
                    description: Memory swap
                memorySwappiness:
                    type: string
                    description: Memory swappiness
                memoryReservation:
                    type: string
                    description: Memory reservation
                kernelMemory:
                    type: string
                    description: Kernel memory
                oomKillDisable:
                    type: boolean
                    description: OOM kill disable
                pidMode:
                    type: string
                    description: PID mode
                ipcMode:
                    type: string
                    description: IPC mode
                utsMode:
                    type: string
                    description: UTS mode
                networkMode:
                    type: string
                    description: Network mode
                portBindings:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.PortBinding'
                    description: Port bindings
                mounts:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.Mount'
                    description: Bind mounts
                binds:
                    type: array
                    items:
                        type: string
                    description: Volume binds
                volumeDriver:
                    type: string
                    description: Volume driver
                volumesFrom:
                    type: array
                    items:
                        type: string
                    description: Volumes from
                capAdd:
                    type: array
                    items:
                        type: string
                    description: Cap add
                capDrop:
                    type: array
                    items:
                        type: string
                    description: Cap drop
                securityOpt:
                    type: array
                    items:
                        type: string
                    description: Security opt
                devices:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.DeviceMapping'
                    description: Devices
                dns:
                    type: array
                    items:
                        type: string
                    description: DNS
                dnsSearch:
                    type: array
                    items:
                        type: string
                    description: DNS search
                dnsOptions:
                    type: array
                    items:
                        type: string
                    description: DNS options
                extraHosts:
                    type: array
                    items:
                        type: string
                    description: Extra hosts
                links:
                    type: array
                    items:
                        type: string
                    description: Links
                logConfig:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.LogConfig'
                    description: Log config
                restartPolicy:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.RestartPolicy'
                    description: Restart policy
                ulimits:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.Ulimit'
                    description: Ulimits
                tmpfs:
                    type: object
                    additionalProperties:
                        type: string
                    description: Tmpfs
                shmSize:
                    type: string
                    description: SHM size
                platform:
                    type: string
                    description: Platform
                runtime:
                    type: string
                    description: Runtime
            description: Host configuration for container runtime
        container.v1.InspectContainerResponse:
            type: object
            properties:
                container:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.Container'
                    description: Container details
        container.v1.KillContainerRequest:
            type: object
            properties:
                containerId:
                    type: string
                    description: Container ID or name
                signal:
                    type: string
                    description: Signal
        container.v1.KillContainerResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Success
                message:
                    type: string
                    description: Message
        container.v1.ListContainersResponse:
            type: object
            properties:
                containers:
                    type: array
                    items:
                        $ref: '#/components/schemas/container.v1.Container'
                    description: Containers
        container.v1.LogConfig:
            type: object
            properties:
                type:
                    type: string
                    description: Type
                config:
                    type: object
                    additionalProperties:
                        type: string
                    description: Config
            description: Log configuration
        container.v1.MemoryStats:
            type: object
            properties:
                usage:
                    type: string
                    description: Usage
                maxUsage:
                    type: string
                    description: Max usage
                stats:
                    type: object
                    additionalProperties:
                        type: string
                    description: Stats
                failcnt:
                    type: string
                    description: Failcnt
                limit:
                    type: string
                    description: Limit
            description: Memory statistics
        container.v1.Mount:
            type: object
            properties:
                source:
                    type: string
                    description: Source
                target:
                    type: string
                    description: Target
                type:
                    type: string
                    description: Type
                readOnly:
                    type: boolean
                    description: Read only
                bindOptions:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.BindOptions'
                    description: Bind options
                volumeOptions:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.VolumeOptions'
                    description: Volume options
                tmpfsOptions:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.TmpfsOptions'
                    description: Tmpfs options
            description: Mount configuration
        container.v1.NetworkConfig:
            type: object
            properties:
                endpointsConfig:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/container.v1.EndpointConfig'
                    description: End points config
            description: Network configuration
        container.v1.NetworkStats:
            type: object
            properties:
                rxBytes:
                    type: string
                    description: RX bytes
                rxPackets:
                    type: string
                    description: RX packets
                rxErrors:
                    type: string
                    description: RX errors
                rxDropped:
                    type: string
                    description: RX dropped
                txBytes:
                    type: string
                    description: TX bytes
                txPackets:
                    type: string
                    description: TX packets
                txErrors:
                    type: string
                    description: TX errors
                txDropped:
                    type: string
                    description: TX dropped
            description: Network statistics
        container.v1.PIDStats:
            type: object
            properties:
                current:
                    type: string
                    description: Current
                limit:
                    type: string
                    description: Limit
            description: PID statistics
        container.v1.PauseContainerResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Success
                message:
                    type: string
                    description: Message
        container.v1.PortBinding:
            type: object
            properties:
                containerPort:
                    type: string
                    description: Container port
                hostIp:
                    type: string
                    description: Host IP
                hostPort:
                    type: string
                    description: Host port
                protocol:
                    type: string
                    description: Protocol
            description: Port binding configuration
        container.v1.RemoveContainerResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Success
                message:
                    type: string
                    description: Message
        container.v1.RenameContainerRequest:
            type: object
            properties:
                containerId:
                    type: string
                    description: Container ID or name
                newName:
                    type: string
                    description: New name
        container.v1.RenameContainerResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Success
                message:
                    type: string
                    description: Message
        container.v1.RestartContainerResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Success
                message:
                    type: string
                    description: Message
        container.v1.RestartPolicy:
            type: object
            properties:
                name:
                    type: string
                    description: Name
                maximumRetryCount:
                    type: integer
                    description: Maximum retry count
                    format: int32
            description: Restart policy
        container.v1.RunContainerRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Container name
                config:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.ContainerConfig'
                    description: Container config
                hostConfig:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.HostConfig'
                    description: Host config
                networkConfig:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.NetworkConfig'
                    description: Network config
                platform:
                    type: string
                    description: Platform
                detach:
                    type: boolean
                    description: Detach
                interactive:
                    type: boolean
                    description: Interactive
                tty:
                    type: boolean
                    description: TTY
        container.v1.RunContainerResponse:
            type: object
            properties:
                id:
                    type: string
                    description: Container ID
                exitCode:
                    type: integer
                    description: Exit code (only for non-detached runs)
                    format: int32
                output:
                    type: string
                    description: Output (only for non-detached runs)
        container.v1.StartContainerResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Success
                message:
                    type: string
                    description: Message
        container.v1.StopContainerResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Success
                message:
                    type: string
                    description: Message
        container.v1.ThrottlingData:
            type: object
            properties:
                periods:
                    type: string
                    description: Periods
                throttledPeriods:
                    type: string
                    description: Throttled periods
                throttledTime:
                    type: string
                    description: Throttled time
            description: Throttling data
        container.v1.TmpfsOptions:
            type: object
            properties:
                sizeBytes:
                    type: string
                    description: Size bytes
                mode:
                    type: integer
                    description: Mode
                    format: int32
            description: Tmpfs options
        container.v1.Ulimit:
            type: object
            properties:
                name:
                    type: string
                    description: Name
                soft:
                    type: string
                    description: Soft limit
                hard:
                    type: string
                    description: Hard limit
            description: Ulimit configuration
        container.v1.UnpauseContainerResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Success
                message:
                    type: string
                    description: Message
        container.v1.UpdateContainerRequest:
            type: object
            properties:
                containerId:
                    type: string
                    description: Container ID or name
                updateSpec:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.UpdateSpec'
                    description: Resources to update
        container.v1.UpdateContainerResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Success
                message:
                    type: string
                    description: Message
                warnings:
                    type: array
                    items:
                        type: string
                    description: Warnings
        container.v1.UpdateSpec:
            type: object
            properties:
                cpuShares:
                    type: string
                    description: CPU shares
                cpuPeriod:
                    type: string
                    description: CPU period
                cpuQuota:
                    type: string
                    description: CPU quota
                cpus:
                    type: string
                    description: CPUs
                cpusetCpus:
                    type: string
                    description: CPU set CPUs
                cpusetMems:
                    type: string
                    description: CPU set MEMs
                memory:
                    type: string
                    description: Memory
                memorySwap:
                    type: string
                    description: Memory swap
                memoryReservation:
                    type: string
                    description: Memory reservation
                kernelMemory:
                    type: string
                    description: Kernel memory
                restartPolicy:
                    allOf:
                        - $ref: '#/components/schemas/container.v1.RestartPolicy'
                    description: Restart policy
        container.v1.VolumeOptions:
            type: object
            properties:
                noCopy:
                    type: boolean
                    description: No copy
                driverConfig:
                    type: object
                    additionalProperties:
                        type: string
                    description: Driver config
            description: Volume options
        container.v1.WaitContainerResponse:
            type: object
            properties:
                exitCode:
                    type: integer
                    description: Exit code
                    format: int32
                error:
                    type: string
                    description: Error
        ecr.v1.AWSAccessKeyCredentials:
            type: object
            properties:
                accessKeyId:
                    type: string
                secretAccessKey:
                    type: string
                sessionToken:
                    type: string
            description: AWS Access Key credentials
        ecr.v1.AWSAssumeRoleCredentials:
            type: object
            properties:
                roleArn:
                    type: string
                sessionName:
                    type: string
                externalId:
                    type: string
                durationSeconds:
                    type: integer
                    format: int32
                sourceCredentials:
                    $ref: '#/components/schemas/ecr.v1.AWSCredentials'
            description: AWS STS Assume Role credentials
        ecr.v1.AWSCredentials:
            type: object
            properties:
                accessKey:
                    $ref: '#/components/schemas/ecr.v1.AWSAccessKeyCredentials'
                assumeRole:
                    $ref: '#/components/schemas/ecr.v1.AWSAssumeRoleCredentials'
                instanceProfile:
                    $ref: '#/components/schemas/ecr.v1.AWSInstanceProfileCredentials'
                ecsTaskRole:
                    $ref: '#/components/schemas/ecr.v1.AWSECSTaskRoleCredentials'
            description: AWS credentials configuration
        ecr.v1.AWSECSTaskRoleCredentials:
            type: object
            properties: {}
            description: AWS ECS Task Role credentials
        ecr.v1.AWSInstanceProfileCredentials:
            type: object
            properties: {}
            description: AWS Instance Profile credentials
        ecr.v1.ECRAuthConfig:
            type: object
            properties:
                region:
                    type: string
                registryId:
                    type: string
                awsCredentials:
                    $ref: '#/components/schemas/ecr.v1.AWSCredentials'
                autoRefresh:
                    type: boolean
            description: ECR authentication configuration
        ecr.v1.ECRDeleteProfileResponse:
            type: object
            properties:
                status:
                    type: string
            description: ECR delete profile response
        ecr.v1.ECRLoginRequest:
            type: object
            properties:
                ecrAuth:
                    $ref: '#/components/schemas/ecr.v1.ECRAuthConfig'
            description: ECR login request
        ecr.v1.ECRLoginResponse:
            type: object
            properties:
                status:
                    type: string
                registryUrl:
                    type: string
                username:
                    type: string
                token:
                    type: string
                expiresAt:
                    type: string
            description: ECR login response
        ecr.v1.ECRLogoutRequest:
            type: object
            properties:
                registryUrl:
                    type: string
            description: ECR logout request
        ecr.v1.ECRLogoutResponse:
            type: object
            properties:
                status:
                    type: string
            description: ECR logout response
        ecr.v1.ECRProfile:
            type: object
            properties:
                name:
                    type: string
                registryUrl:
                    type: string
                authConfig:
                    $ref: '#/components/schemas/ecr.v1.ECRAuthConfig'
                enabled:
                    type: boolean
                description:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
            description: ECR profile configuration
        ecr.v1.ECRProfilesResponse:
            type: object
            properties:
                profiles:
                    type: array
                    items:
                        $ref: '#/components/schemas/ecr.v1.ECRProfile'
            description: ECR profiles list response
        ecr.v1.ECRSetProfileRequest:
            type: object
            properties:
                name:
                    type: string
                profile:
                    $ref: '#/components/schemas/ecr.v1.ECRProfile'
            description: ECR set profile request
        ecr.v1.ECRSetProfileResponse:
            type: object
            properties:
                status:
                    type: string
                profile:
                    $ref: '#/components/schemas/ecr.v1.ECRProfile'
            description: ECR set profile response
        ecr.v1.ECRStatusResponse:
            type: object
            properties:
                authenticated:
                    type: boolean
                registryUrl:
                    type: string
                username:
                    type: string
                expiresAt:
                    type: string
                expiresInSeconds:
                    type: string
            description: ECR status response
        health.v1.HealthResponse:
            type: object
            properties:
                status:
                    type: integer
                    format: enum
                message:
                    type: string
                timestamp:
                    type: string
            description: The health check response message.
        health.v1.HeartbeatResponse:
            type: object
            properties:
                status:
                    type: string
                timestamp:
                    type: string
                serverId:
                    type: string
            description: The heartbeat response message.
        image.v1.AWSAccessKeyCredentials:
            type: object
            properties:
                accessKeyId:
                    type: string
                secretAccessKey:
                    type: string
                sessionToken:
                    type: string
            description: AWS Access Key credentials
        image.v1.AWSAssumeRoleCredentials:
            type: object
            properties:
                roleArn:
                    type: string
                sessionName:
                    type: string
                externalId:
                    type: string
                durationSeconds:
                    type: integer
                    format: int32
                sourceCredentials:
                    $ref: '#/components/schemas/image.v1.AWSCredentials'
            description: AWS STS Assume Role credentials
        image.v1.AWSCredentials:
            type: object
            properties:
                accessKey:
                    $ref: '#/components/schemas/image.v1.AWSAccessKeyCredentials'
                assumeRole:
                    $ref: '#/components/schemas/image.v1.AWSAssumeRoleCredentials'
                instanceProfile:
                    $ref: '#/components/schemas/image.v1.AWSInstanceProfileCredentials'
                ecsTaskRole:
                    $ref: '#/components/schemas/image.v1.AWSECSTaskRoleCredentials'
            description: AWS credentials configuration
        image.v1.AWSECSTaskRoleCredentials:
            type: object
            properties: {}
            description: AWS ECS Task Role credentials
        image.v1.AWSInstanceProfileCredentials:
            type: object
            properties: {}
            description: AWS Instance Profile credentials
        image.v1.CommitContainerRequest:
            type: object
            properties:
                containerId:
                    type: string
                repository:
                    type: string
                tag:
                    type: string
                author:
                    type: string
                message:
                    type: string
                change:
                    type: array
                    items:
                        type: string
                pause:
                    type: boolean
                compression:
                    type: string
                format:
                    type: string
                estargz:
                    type: boolean
                estargzCompressionLevel:
                    type: integer
                    format: int32
                estargzChunkSize:
                    type: integer
                    format: int32
                estargzMinChunkSize:
                    type: integer
                    format: int32
                zstdchunked:
                    type: boolean
                zstdchunkedCompressionLevel:
                    type: integer
                    format: int32
                zstdchunkedChunkSize:
                    type: integer
                    format: int32
            description: Commit container request
        image.v1.CommitContainerResponse:
            type: object
            properties:
                imageId:
                    type: string
                status:
                    type: string
            description: Commit container response
        image.v1.ECRAuthConfig:
            type: object
            properties:
                region:
                    type: string
                registryId:
                    type: string
                awsCredentials:
                    $ref: '#/components/schemas/image.v1.AWSCredentials'
                autoRefresh:
                    type: boolean
            description: ECR authentication configuration
        image.v1.HistoryLayer:
            type: object
            properties:
                id:
                    type: string
                created:
                    type: string
                createdBy:
                    type: string
                size:
                    type: string
                comment:
                    type: string
                missing:
                    type: boolean
            description: History layer information
        image.v1.ImageHistoryResponse:
            type: object
            properties:
                layers:
                    type: array
                    items:
                        $ref: '#/components/schemas/image.v1.HistoryLayer'
            description: Image history response
        image.v1.ImageInfo:
            type: object
            properties:
                repository:
                    type: string
                tag:
                    type: string
                id:
                    type: string
                digest:
                    type: string
                created:
                    type: string
                size:
                    type: string
                platform:
                    type: string
            description: Image information
        image.v1.InspectImageResponse:
            type: object
            properties:
                content:
                    type: string
            description: Inspect image response
        image.v1.ListImagesResponse:
            type: object
            properties:
                images:
                    type: array
                    items:
                        $ref: '#/components/schemas/image.v1.ImageInfo'
            description: List images response
        image.v1.LoadImageRequest:
            type: object
            properties:
                input:
                    type: string
                quiet:
                    type: boolean
                platform:
                    type: string
                allPlatforms:
                    type: boolean
            description: Load image request
        image.v1.LoadImageResponse:
            type: object
            properties:
                loaded:
                    type: array
                    items:
                        type: string
            description: Load image response
        image.v1.PullImageRequest:
            type: object
            properties:
                name:
                    type: string
                platform:
                    type: string
                allPlatforms:
                    type: boolean
                quiet:
                    type: boolean
                verify:
                    type: string
                cosignKey:
                    type: string
                unpack:
                    type: string
                ecrAuth:
                    $ref: '#/components/schemas/image.v1.ECRAuthConfig'
            description: Pull image request
        image.v1.PullImageResponse:
            type: object
            properties:
                digest:
                    type: string
                status:
                    type: string
            description: Pull image response
        image.v1.PushImageRequest:
            type: object
            properties:
                name:
                    type: string
                allPlatforms:
                    type: boolean
                quiet:
                    type: boolean
                sign:
                    type: string
                cosignKey:
                    type: string
                ecrAuth:
                    $ref: '#/components/schemas/image.v1.ECRAuthConfig'
            description: Push image request
        image.v1.PushImageResponse:
            type: object
            properties:
                digest:
                    type: string
                status:
                    type: string
            description: Push image response
        image.v1.RemoveImageResponse:
            type: object
            properties:
                removed:
                    type: array
                    items:
                        type: string
                untagged:
                    type: array
                    items:
                        type: string
            description: Remove image response
        image.v1.SaveImageRequest:
            type: object
            properties:
                names:
                    type: array
                    items:
                        type: string
                output:
                    type: string
                format:
                    type: string
            description: Save image request
        image.v1.SaveImageResponse:
            type: object
            properties:
                outputPath:
                    type: string
                size:
                    type: string
            description: Save image response
        image.v1.TagImageRequest:
            type: object
            properties:
                sourceImage:
                    type: string
                targetImage:
                    type: string
            description: Tag image request
        image.v1.TagImageResponse:
            type: object
            properties:
                status:
                    type: string
            description: Tag image response
tags:
    - name: ContainerService
      description: Container service provides container management operations
    - name: ECRService
      description: ECR authentication service for managing AWS Elastic Container Registry authentication
    - name: Health
      description: The health service definition.
    - name: ImageService
      description: The image management service definition
