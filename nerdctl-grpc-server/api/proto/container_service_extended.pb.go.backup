// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: api/proto/container_service_extended.proto

package proto

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enhanced container configuration
type ContainerConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic configuration
	Image      string            `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Name       string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Command    []string          `protobuf:"bytes,3,rep,name=command,proto3" json:"command,omitempty"`
	Args       []string          `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	Env        []string          `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty"`
	WorkingDir string            `protobuf:"bytes,6,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	Labels     map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	User       string            `protobuf:"bytes,8,opt,name=user,proto3" json:"user,omitempty"`
	// Network configuration
	NetworkConfig *NetworkConfig `protobuf:"bytes,9,opt,name=network_config,json=networkConfig,proto3" json:"network_config,omitempty"`
	Dns           []string       `protobuf:"bytes,10,rep,name=dns,proto3" json:"dns,omitempty"`
	DnsSearch     []string       `protobuf:"bytes,11,rep,name=dns_search,json=dnsSearch,proto3" json:"dns_search,omitempty"`
	DnsOpts       []string       `protobuf:"bytes,12,rep,name=dns_opts,json=dnsOpts,proto3" json:"dns_opts,omitempty"`
	Hostname      string         `protobuf:"bytes,13,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Domainname    string         `protobuf:"bytes,14,opt,name=domainname,proto3" json:"domainname,omitempty"`
	ExtraHosts    []string       `protobuf:"bytes,15,rep,name=extra_hosts,json=extraHosts,proto3" json:"extra_hosts,omitempty"`
	// Storage configuration
	Mounts      []*VolumeMount `protobuf:"bytes,16,rep,name=mounts,proto3" json:"mounts,omitempty"`
	VolumesFrom []string       `protobuf:"bytes,17,rep,name=volumes_from,json=volumesFrom,proto3" json:"volumes_from,omitempty"`
	Tmpfs       []string       `protobuf:"bytes,18,rep,name=tmpfs,proto3" json:"tmpfs,omitempty"`
	ShmSize     string         `protobuf:"bytes,19,opt,name=shm_size,json=shmSize,proto3" json:"shm_size,omitempty"`
	// Resource configuration
	Resources    *ResourceLimits `protobuf:"bytes,20,opt,name=resources,proto3" json:"resources,omitempty"`
	CgroupParent string          `protobuf:"bytes,21,opt,name=cgroup_parent,json=cgroupParent,proto3" json:"cgroup_parent,omitempty"`
	Ulimit       []string        `protobuf:"bytes,22,rep,name=ulimit,proto3" json:"ulimit,omitempty"`
	Sysctl       []string        `protobuf:"bytes,23,rep,name=sysctl,proto3" json:"sysctl,omitempty"`
	// Security configuration
	Security   *SecurityOptions `protobuf:"bytes,24,opt,name=security,proto3" json:"security,omitempty"`
	CapAdd     []string         `protobuf:"bytes,25,rep,name=cap_add,json=capAdd,proto3" json:"cap_add,omitempty"`
	CapDrop    []string         `protobuf:"bytes,26,rep,name=cap_drop,json=capDrop,proto3" json:"cap_drop,omitempty"`
	Privileged bool             `protobuf:"varint,27,opt,name=privileged,proto3" json:"privileged,omitempty"`
	UserNsMode string           `protobuf:"bytes,28,opt,name=user_ns_mode,json=userNsMode,proto3" json:"user_ns_mode,omitempty"`
	// Process configuration
	Tty        bool   `protobuf:"varint,29,opt,name=tty,proto3" json:"tty,omitempty"`
	Stdin      bool   `protobuf:"varint,30,opt,name=stdin,proto3" json:"stdin,omitempty"`
	Init       bool   `protobuf:"varint,31,opt,name=init,proto3" json:"init,omitempty"`
	InitBinary string `protobuf:"bytes,32,opt,name=init_binary,json=initBinary,proto3" json:"init_binary,omitempty"`
	PidMode    string `protobuf:"bytes,33,opt,name=pid_mode,json=pidMode,proto3" json:"pid_mode,omitempty"`
	IpcMode    string `protobuf:"bytes,34,opt,name=ipc_mode,json=ipcMode,proto3" json:"ipc_mode,omitempty"`
	UtsMode    string `protobuf:"bytes,35,opt,name=uts_mode,json=utsMode,proto3" json:"uts_mode,omitempty"`
	// Device configuration
	Device           []string `protobuf:"bytes,36,rep,name=device,proto3" json:"device,omitempty"`
	DeviceCgroupRule []string `protobuf:"bytes,37,rep,name=device_cgroup_rule,json=deviceCgroupRule,proto3" json:"device_cgroup_rule,omitempty"`
	// Health and logging
	HealthCheck *HealthCheck `protobuf:"bytes,38,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"`
	LogConfig   *LogConfig   `protobuf:"bytes,39,opt,name=log_config,json=logConfig,proto3" json:"log_config,omitempty"`
	// Runtime configuration
	RestartPolicy  *RestartPolicy    `protobuf:"bytes,40,opt,name=restart_policy,json=restartPolicy,proto3" json:"restart_policy,omitempty"`
	Platform       *Platform         `protobuf:"bytes,41,opt,name=platform,proto3" json:"platform,omitempty"`
	Runtime        string            `protobuf:"bytes,42,opt,name=runtime,proto3" json:"runtime,omitempty"`
	RuntimeOptions map[string]string `protobuf:"bytes,43,rep,name=runtime_options,json=runtimeOptions,proto3" json:"runtime_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Stop configuration
	StopSignal  string `protobuf:"bytes,44,opt,name=stop_signal,json=stopSignal,proto3" json:"stop_signal,omitempty"`
	StopTimeout int32  `protobuf:"varint,45,opt,name=stop_timeout,json=stopTimeout,proto3" json:"stop_timeout,omitempty"`
	// Advanced options
	AutoRemove      bool     `protobuf:"varint,46,opt,name=auto_remove,json=autoRemove,proto3" json:"auto_remove,omitempty"`
	ReadOnly        bool     `protobuf:"varint,47,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	Isolation       string   `protobuf:"bytes,48,opt,name=isolation,proto3" json:"isolation,omitempty"`
	GroupAdd        []string `protobuf:"bytes,49,rep,name=group_add,json=groupAdd,proto3" json:"group_add,omitempty"`
	NoNewPrivileges bool     `protobuf:"varint,50,opt,name=no_new_privileges,json=noNewPrivileges,proto3" json:"no_new_privileges,omitempty"`
	ApparmorProfile string   `protobuf:"bytes,51,opt,name=apparmor_profile,json=apparmorProfile,proto3" json:"apparmor_profile,omitempty"`
	SeccompProfile  string   `protobuf:"bytes,52,opt,name=seccomp_profile,json=seccompProfile,proto3" json:"seccomp_profile,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ContainerConfig) Reset() {
	*x = ContainerConfig{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerConfig) ProtoMessage() {}

func (x *ContainerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerConfig.ProtoReflect.Descriptor instead.
func (*ContainerConfig) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerConfig) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ContainerConfig) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ContainerConfig) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ContainerConfig) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *ContainerConfig) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ContainerConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ContainerConfig) GetNetworkConfig() *NetworkConfig {
	if x != nil {
		return x.NetworkConfig
	}
	return nil
}

func (x *ContainerConfig) GetDns() []string {
	if x != nil {
		return x.Dns
	}
	return nil
}

func (x *ContainerConfig) GetDnsSearch() []string {
	if x != nil {
		return x.DnsSearch
	}
	return nil
}

func (x *ContainerConfig) GetDnsOpts() []string {
	if x != nil {
		return x.DnsOpts
	}
	return nil
}

func (x *ContainerConfig) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ContainerConfig) GetDomainname() string {
	if x != nil {
		return x.Domainname
	}
	return ""
}

func (x *ContainerConfig) GetExtraHosts() []string {
	if x != nil {
		return x.ExtraHosts
	}
	return nil
}

func (x *ContainerConfig) GetMounts() []*VolumeMount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

func (x *ContainerConfig) GetVolumesFrom() []string {
	if x != nil {
		return x.VolumesFrom
	}
	return nil
}

func (x *ContainerConfig) GetTmpfs() []string {
	if x != nil {
		return x.Tmpfs
	}
	return nil
}

func (x *ContainerConfig) GetShmSize() string {
	if x != nil {
		return x.ShmSize
	}
	return ""
}

func (x *ContainerConfig) GetResources() *ResourceLimits {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ContainerConfig) GetCgroupParent() string {
	if x != nil {
		return x.CgroupParent
	}
	return ""
}

func (x *ContainerConfig) GetUlimit() []string {
	if x != nil {
		return x.Ulimit
	}
	return nil
}

func (x *ContainerConfig) GetSysctl() []string {
	if x != nil {
		return x.Sysctl
	}
	return nil
}

func (x *ContainerConfig) GetSecurity() *SecurityOptions {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *ContainerConfig) GetCapAdd() []string {
	if x != nil {
		return x.CapAdd
	}
	return nil
}

func (x *ContainerConfig) GetCapDrop() []string {
	if x != nil {
		return x.CapDrop
	}
	return nil
}

func (x *ContainerConfig) GetPrivileged() bool {
	if x != nil {
		return x.Privileged
	}
	return false
}

func (x *ContainerConfig) GetUserNsMode() string {
	if x != nil {
		return x.UserNsMode
	}
	return ""
}

func (x *ContainerConfig) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

func (x *ContainerConfig) GetStdin() bool {
	if x != nil {
		return x.Stdin
	}
	return false
}

func (x *ContainerConfig) GetInit() bool {
	if x != nil {
		return x.Init
	}
	return false
}

func (x *ContainerConfig) GetInitBinary() string {
	if x != nil {
		return x.InitBinary
	}
	return ""
}

func (x *ContainerConfig) GetPidMode() string {
	if x != nil {
		return x.PidMode
	}
	return ""
}

func (x *ContainerConfig) GetIpcMode() string {
	if x != nil {
		return x.IpcMode
	}
	return ""
}

func (x *ContainerConfig) GetUtsMode() string {
	if x != nil {
		return x.UtsMode
	}
	return ""
}

func (x *ContainerConfig) GetDevice() []string {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ContainerConfig) GetDeviceCgroupRule() []string {
	if x != nil {
		return x.DeviceCgroupRule
	}
	return nil
}

func (x *ContainerConfig) GetHealthCheck() *HealthCheck {
	if x != nil {
		return x.HealthCheck
	}
	return nil
}

func (x *ContainerConfig) GetLogConfig() *LogConfig {
	if x != nil {
		return x.LogConfig
	}
	return nil
}

func (x *ContainerConfig) GetRestartPolicy() *RestartPolicy {
	if x != nil {
		return x.RestartPolicy
	}
	return nil
}

func (x *ContainerConfig) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *ContainerConfig) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *ContainerConfig) GetRuntimeOptions() map[string]string {
	if x != nil {
		return x.RuntimeOptions
	}
	return nil
}

func (x *ContainerConfig) GetStopSignal() string {
	if x != nil {
		return x.StopSignal
	}
	return ""
}

func (x *ContainerConfig) GetStopTimeout() int32 {
	if x != nil {
		return x.StopTimeout
	}
	return 0
}

func (x *ContainerConfig) GetAutoRemove() bool {
	if x != nil {
		return x.AutoRemove
	}
	return false
}

func (x *ContainerConfig) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *ContainerConfig) GetIsolation() string {
	if x != nil {
		return x.Isolation
	}
	return ""
}

func (x *ContainerConfig) GetGroupAdd() []string {
	if x != nil {
		return x.GroupAdd
	}
	return nil
}

func (x *ContainerConfig) GetNoNewPrivileges() bool {
	if x != nil {
		return x.NoNewPrivileges
	}
	return false
}

func (x *ContainerConfig) GetApparmorProfile() string {
	if x != nil {
		return x.ApparmorProfile
	}
	return ""
}

func (x *ContainerConfig) GetSeccompProfile() string {
	if x != nil {
		return x.SeccompProfile
	}
	return ""
}

// Extended container port information
type Port struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	PrivatePort   int32                  `protobuf:"varint,2,opt,name=private_port,json=privatePort,proto3" json:"private_port,omitempty"`
	PublicPort    int32                  `protobuf:"varint,3,opt,name=public_port,json=publicPort,proto3" json:"public_port,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Port) Reset() {
	*x = Port{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{1}
}

func (x *Port) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Port) GetPrivatePort() int32 {
	if x != nil {
		return x.PrivatePort
	}
	return 0
}

func (x *Port) GetPublicPort() int32 {
	if x != nil {
		return x.PublicPort
	}
	return 0
}

func (x *Port) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Network settings for containers
type NetworkSettings struct {
	state                  protoimpl.MessageState       `protogen:"open.v1"`
	Bridge                 string                       `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	SandboxId              string                       `protobuf:"bytes,2,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	HairpinMode            bool                         `protobuf:"varint,3,opt,name=hairpin_mode,json=hairpinMode,proto3" json:"hairpin_mode,omitempty"`
	LinkLocalIpv6Address   string                       `protobuf:"bytes,4,opt,name=link_local_ipv6_address,json=linkLocalIpv6Address,proto3" json:"link_local_ipv6_address,omitempty"`
	LinkLocalIpv6PrefixLen int32                        `protobuf:"varint,5,opt,name=link_local_ipv6_prefix_len,json=linkLocalIpv6PrefixLen,proto3" json:"link_local_ipv6_prefix_len,omitempty"`
	Networks               map[string]*EndpointSettings `protobuf:"bytes,6,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SandboxKey             string                       `protobuf:"bytes,7,opt,name=sandbox_key,json=sandboxKey,proto3" json:"sandbox_key,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkSettings) Reset() {
	*x = NetworkSettings{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkSettings) ProtoMessage() {}

func (x *NetworkSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkSettings.ProtoReflect.Descriptor instead.
func (*NetworkSettings) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{2}
}

func (x *NetworkSettings) GetBridge() string {
	if x != nil {
		return x.Bridge
	}
	return ""
}

func (x *NetworkSettings) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

func (x *NetworkSettings) GetHairpinMode() bool {
	if x != nil {
		return x.HairpinMode
	}
	return false
}

func (x *NetworkSettings) GetLinkLocalIpv6Address() string {
	if x != nil {
		return x.LinkLocalIpv6Address
	}
	return ""
}

func (x *NetworkSettings) GetLinkLocalIpv6PrefixLen() int32 {
	if x != nil {
		return x.LinkLocalIpv6PrefixLen
	}
	return 0
}

func (x *NetworkSettings) GetNetworks() map[string]*EndpointSettings {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *NetworkSettings) GetSandboxKey() string {
	if x != nil {
		return x.SandboxKey
	}
	return ""
}

type EndpointSettings struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	IpamConfig          string                 `protobuf:"bytes,1,opt,name=ipam_config,json=ipamConfig,proto3" json:"ipam_config,omitempty"`
	Links               []string               `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
	Aliases             []string               `protobuf:"bytes,3,rep,name=aliases,proto3" json:"aliases,omitempty"`
	NetworkId           string                 `protobuf:"bytes,4,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	EndpointId          string                 `protobuf:"bytes,5,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	Gateway             string                 `protobuf:"bytes,6,opt,name=gateway,proto3" json:"gateway,omitempty"`
	IpAddress           string                 `protobuf:"bytes,7,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	IpPrefixLen         int32                  `protobuf:"varint,8,opt,name=ip_prefix_len,json=ipPrefixLen,proto3" json:"ip_prefix_len,omitempty"`
	Ipv6Gateway         string                 `protobuf:"bytes,9,opt,name=ipv6_gateway,json=ipv6Gateway,proto3" json:"ipv6_gateway,omitempty"`
	GlobalIpv6Address   string                 `protobuf:"bytes,10,opt,name=global_ipv6_address,json=globalIpv6Address,proto3" json:"global_ipv6_address,omitempty"`
	GlobalIpv6PrefixLen int32                  `protobuf:"varint,11,opt,name=global_ipv6_prefix_len,json=globalIpv6PrefixLen,proto3" json:"global_ipv6_prefix_len,omitempty"`
	MacAddress          string                 `protobuf:"bytes,12,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	DriverOpts          map[string]string      `protobuf:"bytes,13,rep,name=driver_opts,json=driverOpts,proto3" json:"driver_opts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *EndpointSettings) Reset() {
	*x = EndpointSettings{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndpointSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointSettings) ProtoMessage() {}

func (x *EndpointSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointSettings.ProtoReflect.Descriptor instead.
func (*EndpointSettings) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{3}
}

func (x *EndpointSettings) GetIpamConfig() string {
	if x != nil {
		return x.IpamConfig
	}
	return ""
}

func (x *EndpointSettings) GetLinks() []string {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *EndpointSettings) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *EndpointSettings) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *EndpointSettings) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

func (x *EndpointSettings) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *EndpointSettings) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *EndpointSettings) GetIpPrefixLen() int32 {
	if x != nil {
		return x.IpPrefixLen
	}
	return 0
}

func (x *EndpointSettings) GetIpv6Gateway() string {
	if x != nil {
		return x.Ipv6Gateway
	}
	return ""
}

func (x *EndpointSettings) GetGlobalIpv6Address() string {
	if x != nil {
		return x.GlobalIpv6Address
	}
	return ""
}

func (x *EndpointSettings) GetGlobalIpv6PrefixLen() int32 {
	if x != nil {
		return x.GlobalIpv6PrefixLen
	}
	return 0
}

func (x *EndpointSettings) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *EndpointSettings) GetDriverOpts() map[string]string {
	if x != nil {
		return x.DriverOpts
	}
	return nil
}

// Mount point information
type MountPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Source        string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Destination   string                 `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	Driver        string                 `protobuf:"bytes,5,opt,name=driver,proto3" json:"driver,omitempty"`
	Mode          string                 `protobuf:"bytes,6,opt,name=mode,proto3" json:"mode,omitempty"`
	Rw            bool                   `protobuf:"varint,7,opt,name=rw,proto3" json:"rw,omitempty"`
	Propagation   string                 `protobuf:"bytes,8,opt,name=propagation,proto3" json:"propagation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountPoint) Reset() {
	*x = MountPoint{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountPoint) ProtoMessage() {}

func (x *MountPoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountPoint.ProtoReflect.Descriptor instead.
func (*MountPoint) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{4}
}

func (x *MountPoint) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MountPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MountPoint) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *MountPoint) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *MountPoint) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *MountPoint) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *MountPoint) GetRw() bool {
	if x != nil {
		return x.Rw
	}
	return false
}

func (x *MountPoint) GetPropagation() string {
	if x != nil {
		return x.Propagation
	}
	return ""
}

// Container statistics
type ContainerStatsDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CpuStats      *CPUStats              `protobuf:"bytes,3,opt,name=cpu_stats,json=cpuStats,proto3" json:"cpu_stats,omitempty"`
	MemoryStats   *MemoryStats           `protobuf:"bytes,4,opt,name=memory_stats,json=memoryStats,proto3" json:"memory_stats,omitempty"`
	NetworkStats  *NetworkStats          `protobuf:"bytes,5,opt,name=network_stats,json=networkStats,proto3" json:"network_stats,omitempty"`
	BlkioStats    *BlockIOStats          `protobuf:"bytes,6,opt,name=blkio_stats,json=blkioStats,proto3" json:"blkio_stats,omitempty"`
	PidsStats     *PidsStats             `protobuf:"bytes,7,opt,name=pids_stats,json=pidsStats,proto3" json:"pids_stats,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Preread       string                 `protobuf:"bytes,9,opt,name=preread,proto3" json:"preread,omitempty"`
	Read          string                 `protobuf:"bytes,10,opt,name=read,proto3" json:"read,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStatsDetail) Reset() {
	*x = ContainerStatsDetail{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStatsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStatsDetail) ProtoMessage() {}

func (x *ContainerStatsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStatsDetail.ProtoReflect.Descriptor instead.
func (*ContainerStatsDetail) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{5}
}

func (x *ContainerStatsDetail) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerStatsDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerStatsDetail) GetCpuStats() *CPUStats {
	if x != nil {
		return x.CpuStats
	}
	return nil
}

func (x *ContainerStatsDetail) GetMemoryStats() *MemoryStats {
	if x != nil {
		return x.MemoryStats
	}
	return nil
}

func (x *ContainerStatsDetail) GetNetworkStats() *NetworkStats {
	if x != nil {
		return x.NetworkStats
	}
	return nil
}

func (x *ContainerStatsDetail) GetBlkioStats() *BlockIOStats {
	if x != nil {
		return x.BlkioStats
	}
	return nil
}

func (x *ContainerStatsDetail) GetPidsStats() *PidsStats {
	if x != nil {
		return x.PidsStats
	}
	return nil
}

func (x *ContainerStatsDetail) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ContainerStatsDetail) GetPreread() string {
	if x != nil {
		return x.Preread
	}
	return ""
}

func (x *ContainerStatsDetail) GetRead() string {
	if x != nil {
		return x.Read
	}
	return ""
}

type CPUStats struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CpuUsage       *CPUUsage              `protobuf:"bytes,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	SystemCpuUsage uint64                 `protobuf:"varint,2,opt,name=system_cpu_usage,json=systemCpuUsage,proto3" json:"system_cpu_usage,omitempty"`
	OnlineCpus     uint64                 `protobuf:"varint,3,opt,name=online_cpus,json=onlineCpus,proto3" json:"online_cpus,omitempty"`
	ThrottlingData *ThrottlingData        `protobuf:"bytes,4,opt,name=throttling_data,json=throttlingData,proto3" json:"throttling_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CPUStats) Reset() {
	*x = CPUStats{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUStats) ProtoMessage() {}

func (x *CPUStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUStats.ProtoReflect.Descriptor instead.
func (*CPUStats) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{6}
}

func (x *CPUStats) GetCpuUsage() *CPUUsage {
	if x != nil {
		return x.CpuUsage
	}
	return nil
}

func (x *CPUStats) GetSystemCpuUsage() uint64 {
	if x != nil {
		return x.SystemCpuUsage
	}
	return 0
}

func (x *CPUStats) GetOnlineCpus() uint64 {
	if x != nil {
		return x.OnlineCpus
	}
	return 0
}

func (x *CPUStats) GetThrottlingData() *ThrottlingData {
	if x != nil {
		return x.ThrottlingData
	}
	return nil
}

type CPUUsage struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TotalUsage        uint64                 `protobuf:"varint,1,opt,name=total_usage,json=totalUsage,proto3" json:"total_usage,omitempty"`
	PercpuUsage       []uint64               `protobuf:"varint,2,rep,packed,name=percpu_usage,json=percpuUsage,proto3" json:"percpu_usage,omitempty"`
	UsageInKernelmode uint64                 `protobuf:"varint,3,opt,name=usage_in_kernelmode,json=usageInKernelmode,proto3" json:"usage_in_kernelmode,omitempty"`
	UsageInUsermode   uint64                 `protobuf:"varint,4,opt,name=usage_in_usermode,json=usageInUsermode,proto3" json:"usage_in_usermode,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CPUUsage) Reset() {
	*x = CPUUsage{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUUsage) ProtoMessage() {}

func (x *CPUUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUUsage.ProtoReflect.Descriptor instead.
func (*CPUUsage) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{7}
}

func (x *CPUUsage) GetTotalUsage() uint64 {
	if x != nil {
		return x.TotalUsage
	}
	return 0
}

func (x *CPUUsage) GetPercpuUsage() []uint64 {
	if x != nil {
		return x.PercpuUsage
	}
	return nil
}

func (x *CPUUsage) GetUsageInKernelmode() uint64 {
	if x != nil {
		return x.UsageInKernelmode
	}
	return 0
}

func (x *CPUUsage) GetUsageInUsermode() uint64 {
	if x != nil {
		return x.UsageInUsermode
	}
	return 0
}

type ThrottlingData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Periods          uint64                 `protobuf:"varint,1,opt,name=periods,proto3" json:"periods,omitempty"`
	ThrottledPeriods uint64                 `protobuf:"varint,2,opt,name=throttled_periods,json=throttledPeriods,proto3" json:"throttled_periods,omitempty"`
	ThrottledTime    uint64                 `protobuf:"varint,3,opt,name=throttled_time,json=throttledTime,proto3" json:"throttled_time,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ThrottlingData) Reset() {
	*x = ThrottlingData{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThrottlingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThrottlingData) ProtoMessage() {}

func (x *ThrottlingData) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThrottlingData.ProtoReflect.Descriptor instead.
func (*ThrottlingData) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{8}
}

func (x *ThrottlingData) GetPeriods() uint64 {
	if x != nil {
		return x.Periods
	}
	return 0
}

func (x *ThrottlingData) GetThrottledPeriods() uint64 {
	if x != nil {
		return x.ThrottledPeriods
	}
	return 0
}

func (x *ThrottlingData) GetThrottledTime() uint64 {
	if x != nil {
		return x.ThrottledTime
	}
	return 0
}

type MemoryStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Usage         uint64                 `protobuf:"varint,1,opt,name=usage,proto3" json:"usage,omitempty"`
	MaxUsage      uint64                 `protobuf:"varint,2,opt,name=max_usage,json=maxUsage,proto3" json:"max_usage,omitempty"`
	Limit         uint64                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Stats         *MemoryDetails         `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	FailCnt       uint64                 `protobuf:"varint,5,opt,name=fail_cnt,json=failCnt,proto3" json:"fail_cnt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryStats) Reset() {
	*x = MemoryStats{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryStats) ProtoMessage() {}

func (x *MemoryStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryStats.ProtoReflect.Descriptor instead.
func (*MemoryStats) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{9}
}

func (x *MemoryStats) GetUsage() uint64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *MemoryStats) GetMaxUsage() uint64 {
	if x != nil {
		return x.MaxUsage
	}
	return 0
}

func (x *MemoryStats) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MemoryStats) GetStats() *MemoryDetails {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *MemoryStats) GetFailCnt() uint64 {
	if x != nil {
		return x.FailCnt
	}
	return 0
}

type MemoryDetails struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	ActiveAnon              uint64                 `protobuf:"varint,1,opt,name=active_anon,json=activeAnon,proto3" json:"active_anon,omitempty"`
	ActiveFile              uint64                 `protobuf:"varint,2,opt,name=active_file,json=activeFile,proto3" json:"active_file,omitempty"`
	Cache                   uint64                 `protobuf:"varint,3,opt,name=cache,proto3" json:"cache,omitempty"`
	Dirty                   uint64                 `protobuf:"varint,4,opt,name=dirty,proto3" json:"dirty,omitempty"`
	HierarchicalMemoryLimit uint64                 `protobuf:"varint,5,opt,name=hierarchical_memory_limit,json=hierarchicalMemoryLimit,proto3" json:"hierarchical_memory_limit,omitempty"`
	HierarchicalMemswLimit  uint64                 `protobuf:"varint,6,opt,name=hierarchical_memsw_limit,json=hierarchicalMemswLimit,proto3" json:"hierarchical_memsw_limit,omitempty"`
	InactiveAnon            uint64                 `protobuf:"varint,7,opt,name=inactive_anon,json=inactiveAnon,proto3" json:"inactive_anon,omitempty"`
	InactiveFile            uint64                 `protobuf:"varint,8,opt,name=inactive_file,json=inactiveFile,proto3" json:"inactive_file,omitempty"`
	MappedFile              uint64                 `protobuf:"varint,9,opt,name=mapped_file,json=mappedFile,proto3" json:"mapped_file,omitempty"`
	Pgfault                 uint64                 `protobuf:"varint,10,opt,name=pgfault,proto3" json:"pgfault,omitempty"`
	Pgmajfault              uint64                 `protobuf:"varint,11,opt,name=pgmajfault,proto3" json:"pgmajfault,omitempty"`
	Pgpgin                  uint64                 `protobuf:"varint,12,opt,name=pgpgin,proto3" json:"pgpgin,omitempty"`
	Pgpgout                 uint64                 `protobuf:"varint,13,opt,name=pgpgout,proto3" json:"pgpgout,omitempty"`
	Rss                     uint64                 `protobuf:"varint,14,opt,name=rss,proto3" json:"rss,omitempty"`
	RssHuge                 uint64                 `protobuf:"varint,15,opt,name=rss_huge,json=rssHuge,proto3" json:"rss_huge,omitempty"`
	TotalActiveAnon         uint64                 `protobuf:"varint,16,opt,name=total_active_anon,json=totalActiveAnon,proto3" json:"total_active_anon,omitempty"`
	TotalActiveFile         uint64                 `protobuf:"varint,17,opt,name=total_active_file,json=totalActiveFile,proto3" json:"total_active_file,omitempty"`
	TotalCache              uint64                 `protobuf:"varint,18,opt,name=total_cache,json=totalCache,proto3" json:"total_cache,omitempty"`
	TotalDirty              uint64                 `protobuf:"varint,19,opt,name=total_dirty,json=totalDirty,proto3" json:"total_dirty,omitempty"`
	TotalInactiveAnon       uint64                 `protobuf:"varint,20,opt,name=total_inactive_anon,json=totalInactiveAnon,proto3" json:"total_inactive_anon,omitempty"`
	TotalInactiveFile       uint64                 `protobuf:"varint,21,opt,name=total_inactive_file,json=totalInactiveFile,proto3" json:"total_inactive_file,omitempty"`
	TotalMappedFile         uint64                 `protobuf:"varint,22,opt,name=total_mapped_file,json=totalMappedFile,proto3" json:"total_mapped_file,omitempty"`
	TotalPgfault            uint64                 `protobuf:"varint,23,opt,name=total_pgfault,json=totalPgfault,proto3" json:"total_pgfault,omitempty"`
	TotalPgmajfault         uint64                 `protobuf:"varint,24,opt,name=total_pgmajfault,json=totalPgmajfault,proto3" json:"total_pgmajfault,omitempty"`
	TotalPgpgin             uint64                 `protobuf:"varint,25,opt,name=total_pgpgin,json=totalPgpgin,proto3" json:"total_pgpgin,omitempty"`
	TotalPgpgout            uint64                 `protobuf:"varint,26,opt,name=total_pgpgout,json=totalPgpgout,proto3" json:"total_pgpgout,omitempty"`
	TotalRss                uint64                 `protobuf:"varint,27,opt,name=total_rss,json=totalRss,proto3" json:"total_rss,omitempty"`
	TotalRssHuge            uint64                 `protobuf:"varint,28,opt,name=total_rss_huge,json=totalRssHuge,proto3" json:"total_rss_huge,omitempty"`
	TotalUnevictable        uint64                 `protobuf:"varint,29,opt,name=total_unevictable,json=totalUnevictable,proto3" json:"total_unevictable,omitempty"`
	TotalWriteback          uint64                 `protobuf:"varint,30,opt,name=total_writeback,json=totalWriteback,proto3" json:"total_writeback,omitempty"`
	Unevictable             uint64                 `protobuf:"varint,31,opt,name=unevictable,proto3" json:"unevictable,omitempty"`
	Writeback               uint64                 `protobuf:"varint,32,opt,name=writeback,proto3" json:"writeback,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *MemoryDetails) Reset() {
	*x = MemoryDetails{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryDetails) ProtoMessage() {}

func (x *MemoryDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryDetails.ProtoReflect.Descriptor instead.
func (*MemoryDetails) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{10}
}

func (x *MemoryDetails) GetActiveAnon() uint64 {
	if x != nil {
		return x.ActiveAnon
	}
	return 0
}

func (x *MemoryDetails) GetActiveFile() uint64 {
	if x != nil {
		return x.ActiveFile
	}
	return 0
}

func (x *MemoryDetails) GetCache() uint64 {
	if x != nil {
		return x.Cache
	}
	return 0
}

func (x *MemoryDetails) GetDirty() uint64 {
	if x != nil {
		return x.Dirty
	}
	return 0
}

func (x *MemoryDetails) GetHierarchicalMemoryLimit() uint64 {
	if x != nil {
		return x.HierarchicalMemoryLimit
	}
	return 0
}

func (x *MemoryDetails) GetHierarchicalMemswLimit() uint64 {
	if x != nil {
		return x.HierarchicalMemswLimit
	}
	return 0
}

func (x *MemoryDetails) GetInactiveAnon() uint64 {
	if x != nil {
		return x.InactiveAnon
	}
	return 0
}

func (x *MemoryDetails) GetInactiveFile() uint64 {
	if x != nil {
		return x.InactiveFile
	}
	return 0
}

func (x *MemoryDetails) GetMappedFile() uint64 {
	if x != nil {
		return x.MappedFile
	}
	return 0
}

func (x *MemoryDetails) GetPgfault() uint64 {
	if x != nil {
		return x.Pgfault
	}
	return 0
}

func (x *MemoryDetails) GetPgmajfault() uint64 {
	if x != nil {
		return x.Pgmajfault
	}
	return 0
}

func (x *MemoryDetails) GetPgpgin() uint64 {
	if x != nil {
		return x.Pgpgin
	}
	return 0
}

func (x *MemoryDetails) GetPgpgout() uint64 {
	if x != nil {
		return x.Pgpgout
	}
	return 0
}

func (x *MemoryDetails) GetRss() uint64 {
	if x != nil {
		return x.Rss
	}
	return 0
}

func (x *MemoryDetails) GetRssHuge() uint64 {
	if x != nil {
		return x.RssHuge
	}
	return 0
}

func (x *MemoryDetails) GetTotalActiveAnon() uint64 {
	if x != nil {
		return x.TotalActiveAnon
	}
	return 0
}

func (x *MemoryDetails) GetTotalActiveFile() uint64 {
	if x != nil {
		return x.TotalActiveFile
	}
	return 0
}

func (x *MemoryDetails) GetTotalCache() uint64 {
	if x != nil {
		return x.TotalCache
	}
	return 0
}

func (x *MemoryDetails) GetTotalDirty() uint64 {
	if x != nil {
		return x.TotalDirty
	}
	return 0
}

func (x *MemoryDetails) GetTotalInactiveAnon() uint64 {
	if x != nil {
		return x.TotalInactiveAnon
	}
	return 0
}

func (x *MemoryDetails) GetTotalInactiveFile() uint64 {
	if x != nil {
		return x.TotalInactiveFile
	}
	return 0
}

func (x *MemoryDetails) GetTotalMappedFile() uint64 {
	if x != nil {
		return x.TotalMappedFile
	}
	return 0
}

func (x *MemoryDetails) GetTotalPgfault() uint64 {
	if x != nil {
		return x.TotalPgfault
	}
	return 0
}

func (x *MemoryDetails) GetTotalPgmajfault() uint64 {
	if x != nil {
		return x.TotalPgmajfault
	}
	return 0
}

func (x *MemoryDetails) GetTotalPgpgin() uint64 {
	if x != nil {
		return x.TotalPgpgin
	}
	return 0
}

func (x *MemoryDetails) GetTotalPgpgout() uint64 {
	if x != nil {
		return x.TotalPgpgout
	}
	return 0
}

func (x *MemoryDetails) GetTotalRss() uint64 {
	if x != nil {
		return x.TotalRss
	}
	return 0
}

func (x *MemoryDetails) GetTotalRssHuge() uint64 {
	if x != nil {
		return x.TotalRssHuge
	}
	return 0
}

func (x *MemoryDetails) GetTotalUnevictable() uint64 {
	if x != nil {
		return x.TotalUnevictable
	}
	return 0
}

func (x *MemoryDetails) GetTotalWriteback() uint64 {
	if x != nil {
		return x.TotalWriteback
	}
	return 0
}

func (x *MemoryDetails) GetUnevictable() uint64 {
	if x != nil {
		return x.Unevictable
	}
	return 0
}

func (x *MemoryDetails) GetWriteback() uint64 {
	if x != nil {
		return x.Writeback
	}
	return 0
}

type NetworkStats struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Interfaces    map[string]*InterfaceStats `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkStats) Reset() {
	*x = NetworkStats{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStats) ProtoMessage() {}

func (x *NetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStats.ProtoReflect.Descriptor instead.
func (*NetworkStats) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{11}
}

func (x *NetworkStats) GetInterfaces() map[string]*InterfaceStats {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type InterfaceStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RxBytes       uint64                 `protobuf:"varint,1,opt,name=rx_bytes,json=rxBytes,proto3" json:"rx_bytes,omitempty"`
	RxPackets     uint64                 `protobuf:"varint,2,opt,name=rx_packets,json=rxPackets,proto3" json:"rx_packets,omitempty"`
	RxErrors      uint64                 `protobuf:"varint,3,opt,name=rx_errors,json=rxErrors,proto3" json:"rx_errors,omitempty"`
	RxDropped     uint64                 `protobuf:"varint,4,opt,name=rx_dropped,json=rxDropped,proto3" json:"rx_dropped,omitempty"`
	TxBytes       uint64                 `protobuf:"varint,5,opt,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes,omitempty"`
	TxPackets     uint64                 `protobuf:"varint,6,opt,name=tx_packets,json=txPackets,proto3" json:"tx_packets,omitempty"`
	TxErrors      uint64                 `protobuf:"varint,7,opt,name=tx_errors,json=txErrors,proto3" json:"tx_errors,omitempty"`
	TxDropped     uint64                 `protobuf:"varint,8,opt,name=tx_dropped,json=txDropped,proto3" json:"tx_dropped,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfaceStats) Reset() {
	*x = InterfaceStats{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceStats) ProtoMessage() {}

func (x *InterfaceStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceStats.ProtoReflect.Descriptor instead.
func (*InterfaceStats) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{12}
}

func (x *InterfaceStats) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *InterfaceStats) GetRxPackets() uint64 {
	if x != nil {
		return x.RxPackets
	}
	return 0
}

func (x *InterfaceStats) GetRxErrors() uint64 {
	if x != nil {
		return x.RxErrors
	}
	return 0
}

func (x *InterfaceStats) GetRxDropped() uint64 {
	if x != nil {
		return x.RxDropped
	}
	return 0
}

func (x *InterfaceStats) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *InterfaceStats) GetTxPackets() uint64 {
	if x != nil {
		return x.TxPackets
	}
	return 0
}

func (x *InterfaceStats) GetTxErrors() uint64 {
	if x != nil {
		return x.TxErrors
	}
	return 0
}

func (x *InterfaceStats) GetTxDropped() uint64 {
	if x != nil {
		return x.TxDropped
	}
	return 0
}

type BlockIOStats struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	IoServiceBytesRecursive []*BlkioStatEntry      `protobuf:"bytes,1,rep,name=io_service_bytes_recursive,json=ioServiceBytesRecursive,proto3" json:"io_service_bytes_recursive,omitempty"`
	IoServicedRecursive     []*BlkioStatEntry      `protobuf:"bytes,2,rep,name=io_serviced_recursive,json=ioServicedRecursive,proto3" json:"io_serviced_recursive,omitempty"`
	IoQueuedRecursive       []*BlkioStatEntry      `protobuf:"bytes,3,rep,name=io_queued_recursive,json=ioQueuedRecursive,proto3" json:"io_queued_recursive,omitempty"`
	IoServiceTimeRecursive  []*BlkioStatEntry      `protobuf:"bytes,4,rep,name=io_service_time_recursive,json=ioServiceTimeRecursive,proto3" json:"io_service_time_recursive,omitempty"`
	IoWaitTimeRecursive     []*BlkioStatEntry      `protobuf:"bytes,5,rep,name=io_wait_time_recursive,json=ioWaitTimeRecursive,proto3" json:"io_wait_time_recursive,omitempty"`
	IoMergedRecursive       []*BlkioStatEntry      `protobuf:"bytes,6,rep,name=io_merged_recursive,json=ioMergedRecursive,proto3" json:"io_merged_recursive,omitempty"`
	IoTimeRecursive         []*BlkioStatEntry      `protobuf:"bytes,7,rep,name=io_time_recursive,json=ioTimeRecursive,proto3" json:"io_time_recursive,omitempty"`
	SectorsRecursive        []*BlkioStatEntry      `protobuf:"bytes,8,rep,name=sectors_recursive,json=sectorsRecursive,proto3" json:"sectors_recursive,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *BlockIOStats) Reset() {
	*x = BlockIOStats{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockIOStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockIOStats) ProtoMessage() {}

func (x *BlockIOStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockIOStats.ProtoReflect.Descriptor instead.
func (*BlockIOStats) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{13}
}

func (x *BlockIOStats) GetIoServiceBytesRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoServiceBytesRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoServicedRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoServicedRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoQueuedRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoQueuedRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoServiceTimeRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoServiceTimeRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoWaitTimeRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoWaitTimeRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoMergedRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoMergedRecursive
	}
	return nil
}

func (x *BlockIOStats) GetIoTimeRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoTimeRecursive
	}
	return nil
}

func (x *BlockIOStats) GetSectorsRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.SectorsRecursive
	}
	return nil
}

type BlkioStatEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Major         uint64                 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor         uint64                 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Op            string                 `protobuf:"bytes,3,opt,name=op,proto3" json:"op,omitempty"`
	Value         uint64                 `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlkioStatEntry) Reset() {
	*x = BlkioStatEntry{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlkioStatEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlkioStatEntry) ProtoMessage() {}

func (x *BlkioStatEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlkioStatEntry.ProtoReflect.Descriptor instead.
func (*BlkioStatEntry) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{14}
}

func (x *BlkioStatEntry) GetMajor() uint64 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *BlkioStatEntry) GetMinor() uint64 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *BlkioStatEntry) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *BlkioStatEntry) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PidsStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Current       uint64                 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Limit         uint64                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PidsStats) Reset() {
	*x = PidsStats{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PidsStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PidsStats) ProtoMessage() {}

func (x *PidsStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PidsStats.ProtoReflect.Descriptor instead.
func (*PidsStats) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{15}
}

func (x *PidsStats) GetCurrent() uint64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PidsStats) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Container process information
type ContainerTopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PsArgs        string                 `protobuf:"bytes,3,opt,name=ps_args,json=psArgs,proto3" json:"ps_args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerTopRequest) Reset() {
	*x = ContainerTopRequest{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerTopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerTopRequest) ProtoMessage() {}

func (x *ContainerTopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerTopRequest.ProtoReflect.Descriptor instead.
func (*ContainerTopRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{16}
}

func (x *ContainerTopRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerTopRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ContainerTopRequest) GetPsArgs() string {
	if x != nil {
		return x.PsArgs
	}
	return ""
}

type ContainerTopInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Titles        []string               `protobuf:"bytes,1,rep,name=titles,proto3" json:"titles,omitempty"`
	Processes     []*ProcessInfo         `protobuf:"bytes,2,rep,name=processes,proto3" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerTopInfo) Reset() {
	*x = ContainerTopInfo{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerTopInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerTopInfo) ProtoMessage() {}

func (x *ContainerTopInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerTopInfo.ProtoReflect.Descriptor instead.
func (*ContainerTopInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{17}
}

func (x *ContainerTopInfo) GetTitles() []string {
	if x != nil {
		return x.Titles
	}
	return nil
}

func (x *ContainerTopInfo) GetProcesses() []*ProcessInfo {
	if x != nil {
		return x.Processes
	}
	return nil
}

type ProcessInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessInfo) Reset() {
	*x = ProcessInfo{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfo) ProtoMessage() {}

func (x *ProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfo.ProtoReflect.Descriptor instead.
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{18}
}

func (x *ProcessInfo) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Container port information
type ContainerPortInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrivatePort   string                 `protobuf:"bytes,1,opt,name=private_port,json=privatePort,proto3" json:"private_port,omitempty"`
	PublicPort    string                 `protobuf:"bytes,2,opt,name=public_port,json=publicPort,proto3" json:"public_port,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Ip            string                 `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerPortInfo) Reset() {
	*x = ContainerPortInfo{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerPortInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerPortInfo) ProtoMessage() {}

func (x *ContainerPortInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerPortInfo.ProtoReflect.Descriptor instead.
func (*ContainerPortInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{19}
}

func (x *ContainerPortInfo) GetPrivatePort() string {
	if x != nil {
		return x.PrivatePort
	}
	return ""
}

func (x *ContainerPortInfo) GetPublicPort() string {
	if x != nil {
		return x.PublicPort
	}
	return ""
}

func (x *ContainerPortInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ContainerPortInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

// Container health check
type ContainerHealthInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	FailingStreak int32                  `protobuf:"varint,2,opt,name=failing_streak,json=failingStreak,proto3" json:"failing_streak,omitempty"`
	Log           []*HealthCheckResult   `protobuf:"bytes,3,rep,name=log,proto3" json:"log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerHealthInfo) Reset() {
	*x = ContainerHealthInfo{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerHealthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerHealthInfo) ProtoMessage() {}

func (x *ContainerHealthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerHealthInfo.ProtoReflect.Descriptor instead.
func (*ContainerHealthInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{20}
}

func (x *ContainerHealthInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ContainerHealthInfo) GetFailingStreak() int32 {
	if x != nil {
		return x.FailingStreak
	}
	return 0
}

func (x *ContainerHealthInfo) GetLog() []*HealthCheckResult {
	if x != nil {
		return x.Log
	}
	return nil
}

type HealthCheckResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *timestamp.Timestamp   `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End           *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	ExitCode      int32                  `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Output        string                 `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResult) Reset() {
	*x = HealthCheckResult{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResult) ProtoMessage() {}

func (x *HealthCheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResult.ProtoReflect.Descriptor instead.
func (*HealthCheckResult) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{21}
}

func (x *HealthCheckResult) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *HealthCheckResult) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *HealthCheckResult) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *HealthCheckResult) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

// Batch operations
type BatchContainerRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Operation       string                 `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"` // start, stop, remove, etc.
	ContainerIds    []string               `protobuf:"bytes,2,rep,name=container_ids,json=containerIds,proto3" json:"container_ids,omitempty"`
	Namespace       string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Options         map[string]string      `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ContinueOnError bool                   `protobuf:"varint,5,opt,name=continue_on_error,json=continueOnError,proto3" json:"continue_on_error,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BatchContainerRequest) Reset() {
	*x = BatchContainerRequest{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchContainerRequest) ProtoMessage() {}

func (x *BatchContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchContainerRequest.ProtoReflect.Descriptor instead.
func (*BatchContainerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{22}
}

func (x *BatchContainerRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *BatchContainerRequest) GetContainerIds() []string {
	if x != nil {
		return x.ContainerIds
	}
	return nil
}

func (x *BatchContainerRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *BatchContainerRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *BatchContainerRequest) GetContinueOnError() bool {
	if x != nil {
		return x.ContinueOnError
	}
	return false
}

type BatchContainerResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Results       []*BatchOperationResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	SuccessCount  int32                   `protobuf:"varint,2,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	ErrorCount    int32                   `protobuf:"varint,3,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchContainerResponse) Reset() {
	*x = BatchContainerResponse{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchContainerResponse) ProtoMessage() {}

func (x *BatchContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchContainerResponse.ProtoReflect.Descriptor instead.
func (*BatchContainerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{23}
}

func (x *BatchContainerResponse) GetResults() []*BatchOperationResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BatchContainerResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BatchContainerResponse) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

type BatchOperationResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Warning       string                 `protobuf:"bytes,4,opt,name=warning,proto3" json:"warning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchOperationResult) Reset() {
	*x = BatchOperationResult{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchOperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOperationResult) ProtoMessage() {}

func (x *BatchOperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOperationResult.ProtoReflect.Descriptor instead.
func (*BatchOperationResult) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{24}
}

func (x *BatchOperationResult) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *BatchOperationResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchOperationResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *BatchOperationResult) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

// Container events
type ContainerEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // create, start, stop, die, destroy, etc.
	ContainerId   string                 `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ContainerName string                 `protobuf:"bytes,3,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	Image         string                 `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerEvent) Reset() {
	*x = ContainerEvent{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerEvent) ProtoMessage() {}

func (x *ContainerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerEvent.ProtoReflect.Descriptor instead.
func (*ContainerEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{25}
}

func (x *ContainerEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ContainerEvent) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerEvent) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *ContainerEvent) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerEvent) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ContainerEvent) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type MonitorContainersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerIds  []string               `protobuf:"bytes,1,rep,name=container_ids,json=containerIds,proto3" json:"container_ids,omitempty"` // Empty = all containers
	EventTypes    []string               `protobuf:"bytes,2,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"`       // Empty = all events
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Since         *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=since,proto3" json:"since,omitempty"`
	Until         *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=until,proto3" json:"until,omitempty"`
	Filters       map[string]string      `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorContainersRequest) Reset() {
	*x = MonitorContainersRequest{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorContainersRequest) ProtoMessage() {}

func (x *MonitorContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorContainersRequest.ProtoReflect.Descriptor instead.
func (*MonitorContainersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{26}
}

func (x *MonitorContainersRequest) GetContainerIds() []string {
	if x != nil {
		return x.ContainerIds
	}
	return nil
}

func (x *MonitorContainersRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *MonitorContainersRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *MonitorContainersRequest) GetSince() *timestamp.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

func (x *MonitorContainersRequest) GetUntil() *timestamp.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

func (x *MonitorContainersRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Request/Response definitions for new operations
type GetContainerTopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PsArgs        string                 `protobuf:"bytes,3,opt,name=ps_args,json=psArgs,proto3" json:"ps_args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerTopRequest) Reset() {
	*x = GetContainerTopRequest{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerTopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerTopRequest) ProtoMessage() {}

func (x *GetContainerTopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerTopRequest.ProtoReflect.Descriptor instead.
func (*GetContainerTopRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{27}
}

func (x *GetContainerTopRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *GetContainerTopRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetContainerTopRequest) GetPsArgs() string {
	if x != nil {
		return x.PsArgs
	}
	return ""
}

type GetContainerTopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopInfo       *ContainerTopInfo      `protobuf:"bytes,1,opt,name=top_info,json=topInfo,proto3" json:"top_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerTopResponse) Reset() {
	*x = GetContainerTopResponse{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerTopResponse) ProtoMessage() {}

func (x *GetContainerTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerTopResponse.ProtoReflect.Descriptor instead.
func (*GetContainerTopResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{28}
}

func (x *GetContainerTopResponse) GetTopInfo() *ContainerTopInfo {
	if x != nil {
		return x.TopInfo
	}
	return nil
}

type GetContainerPortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PrivatePort   string                 `protobuf:"bytes,3,opt,name=private_port,json=privatePort,proto3" json:"private_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerPortRequest) Reset() {
	*x = GetContainerPortRequest{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerPortRequest) ProtoMessage() {}

func (x *GetContainerPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerPortRequest.ProtoReflect.Descriptor instead.
func (*GetContainerPortRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{29}
}

func (x *GetContainerPortRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *GetContainerPortRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetContainerPortRequest) GetPrivatePort() string {
	if x != nil {
		return x.PrivatePort
	}
	return ""
}

type GetContainerPortResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ports         []*ContainerPortInfo   `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerPortResponse) Reset() {
	*x = GetContainerPortResponse{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerPortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerPortResponse) ProtoMessage() {}

func (x *GetContainerPortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerPortResponse.ProtoReflect.Descriptor instead.
func (*GetContainerPortResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{30}
}

func (x *GetContainerPortResponse) GetPorts() []*ContainerPortInfo {
	if x != nil {
		return x.Ports
	}
	return nil
}

type HealthCheckContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckContainerRequest) Reset() {
	*x = HealthCheckContainerRequest{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckContainerRequest) ProtoMessage() {}

func (x *HealthCheckContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckContainerRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckContainerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{31}
}

func (x *HealthCheckContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *HealthCheckContainerRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type HealthCheckContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HealthInfo    *ContainerHealthInfo   `protobuf:"bytes,1,opt,name=health_info,json=healthInfo,proto3" json:"health_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckContainerResponse) Reset() {
	*x = HealthCheckContainerResponse{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckContainerResponse) ProtoMessage() {}

func (x *HealthCheckContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckContainerResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckContainerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{32}
}

func (x *HealthCheckContainerResponse) GetHealthInfo() *ContainerHealthInfo {
	if x != nil {
		return x.HealthInfo
	}
	return nil
}

// Enhanced create request with full configuration
type CreateContainerRequestExtended struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *ContainerConfig       `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	DryRun        bool                   `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContainerRequestExtended) Reset() {
	*x = CreateContainerRequestExtended{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContainerRequestExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRequestExtended) ProtoMessage() {}

func (x *CreateContainerRequestExtended) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRequestExtended.ProtoReflect.Descriptor instead.
func (*CreateContainerRequestExtended) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{33}
}

func (x *CreateContainerRequestExtended) GetConfig() *ContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateContainerRequestExtended) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateContainerRequestExtended) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

type CreateContainerResponseExtended struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Warnings      []string               `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	ContainerInfo *ContainerInfo         `protobuf:"bytes,3,opt,name=container_info,json=containerInfo,proto3" json:"container_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContainerResponseExtended) Reset() {
	*x = CreateContainerResponseExtended{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContainerResponseExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerResponseExtended) ProtoMessage() {}

func (x *CreateContainerResponseExtended) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerResponseExtended.ProtoReflect.Descriptor instead.
func (*CreateContainerResponseExtended) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{34}
}

func (x *CreateContainerResponseExtended) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *CreateContainerResponseExtended) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *CreateContainerResponseExtended) GetContainerInfo() *ContainerInfo {
	if x != nil {
		return x.ContainerInfo
	}
	return nil
}

// Enhanced run request
type RunContainerRequestExtended struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *ContainerConfig       `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Detach        bool                   `protobuf:"varint,3,opt,name=detach,proto3" json:"detach,omitempty"`
	DetachKeys    string                 `protobuf:"bytes,4,opt,name=detach_keys,json=detachKeys,proto3" json:"detach_keys,omitempty"`
	Rm            bool                   `protobuf:"varint,5,opt,name=rm,proto3" json:"rm,omitempty"`
	Attach        []string               `protobuf:"bytes,6,rep,name=attach,proto3" json:"attach,omitempty"`
	EnvFile       map[string]string      `protobuf:"bytes,7,rep,name=env_file,json=envFile,proto3" json:"env_file,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunContainerRequestExtended) Reset() {
	*x = RunContainerRequestExtended{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunContainerRequestExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunContainerRequestExtended) ProtoMessage() {}

func (x *RunContainerRequestExtended) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunContainerRequestExtended.ProtoReflect.Descriptor instead.
func (*RunContainerRequestExtended) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{35}
}

func (x *RunContainerRequestExtended) GetConfig() *ContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *RunContainerRequestExtended) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RunContainerRequestExtended) GetDetach() bool {
	if x != nil {
		return x.Detach
	}
	return false
}

func (x *RunContainerRequestExtended) GetDetachKeys() string {
	if x != nil {
		return x.DetachKeys
	}
	return ""
}

func (x *RunContainerRequestExtended) GetRm() bool {
	if x != nil {
		return x.Rm
	}
	return false
}

func (x *RunContainerRequestExtended) GetAttach() []string {
	if x != nil {
		return x.Attach
	}
	return nil
}

func (x *RunContainerRequestExtended) GetEnvFile() map[string]string {
	if x != nil {
		return x.EnvFile
	}
	return nil
}

type RunContainerResponseExtended struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ExitCode      int32                  `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Warnings      []string               `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	ContainerInfo *ContainerInfo         `protobuf:"bytes,4,opt,name=container_info,json=containerInfo,proto3" json:"container_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunContainerResponseExtended) Reset() {
	*x = RunContainerResponseExtended{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunContainerResponseExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunContainerResponseExtended) ProtoMessage() {}

func (x *RunContainerResponseExtended) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunContainerResponseExtended.ProtoReflect.Descriptor instead.
func (*RunContainerResponseExtended) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{36}
}

func (x *RunContainerResponseExtended) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *RunContainerResponseExtended) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *RunContainerResponseExtended) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *RunContainerResponseExtended) GetContainerInfo() *ContainerInfo {
	if x != nil {
		return x.ContainerInfo
	}
	return nil
}

// Enhanced list request
type ListContainersRequestExtended struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	All           bool                   `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
	Last          int32                  `protobuf:"varint,3,opt,name=last,proto3" json:"last,omitempty"`
	Latest        bool                   `protobuf:"varint,4,opt,name=latest,proto3" json:"latest,omitempty"`
	NoTrunc       bool                   `protobuf:"varint,5,opt,name=no_trunc,json=noTrunc,proto3" json:"no_trunc,omitempty"`
	Quiet         bool                   `protobuf:"varint,6,opt,name=quiet,proto3" json:"quiet,omitempty"`
	Size          bool                   `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Filters       map[string]string      `protobuf:"bytes,8,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Format        string                 `protobuf:"bytes,9,opt,name=format,proto3" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersRequestExtended) Reset() {
	*x = ListContainersRequestExtended{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersRequestExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersRequestExtended) ProtoMessage() {}

func (x *ListContainersRequestExtended) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersRequestExtended.ProtoReflect.Descriptor instead.
func (*ListContainersRequestExtended) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{37}
}

func (x *ListContainersRequestExtended) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListContainersRequestExtended) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ListContainersRequestExtended) GetLast() int32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *ListContainersRequestExtended) GetLatest() bool {
	if x != nil {
		return x.Latest
	}
	return false
}

func (x *ListContainersRequestExtended) GetNoTrunc() bool {
	if x != nil {
		return x.NoTrunc
	}
	return false
}

func (x *ListContainersRequestExtended) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *ListContainersRequestExtended) GetSize() bool {
	if x != nil {
		return x.Size
	}
	return false
}

func (x *ListContainersRequestExtended) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListContainersRequestExtended) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type ListContainersResponseExtended struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Containers    []*ContainerInfo       `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersResponseExtended) Reset() {
	*x = ListContainersResponseExtended{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersResponseExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersResponseExtended) ProtoMessage() {}

func (x *ListContainersResponseExtended) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersResponseExtended.ProtoReflect.Descriptor instead.
func (*ListContainersResponseExtended) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{38}
}

func (x *ListContainersResponseExtended) GetContainers() []*ContainerInfo {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *ListContainersResponseExtended) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Enhanced inspect response
type InspectContainerResponseExtended struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerInfo *ContainerInfo         `protobuf:"bytes,1,opt,name=container_info,json=containerInfo,proto3" json:"container_info,omitempty"`
	RawData       *_struct.Struct        `protobuf:"bytes,2,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"` // Raw JSON data from nerdctl
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectContainerResponseExtended) Reset() {
	*x = InspectContainerResponseExtended{}
	mi := &file_api_proto_container_service_extended_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectContainerResponseExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectContainerResponseExtended) ProtoMessage() {}

func (x *InspectContainerResponseExtended) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_container_service_extended_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectContainerResponseExtended.ProtoReflect.Descriptor instead.
func (*InspectContainerResponseExtended) Descriptor() ([]byte, []int) {
	return file_api_proto_container_service_extended_proto_rawDescGZIP(), []int{39}
}

func (x *InspectContainerResponseExtended) GetContainerInfo() *ContainerInfo {
	if x != nil {
		return x.ContainerInfo
	}
	return nil
}

func (x *InspectContainerResponseExtended) GetRawData() *_struct.Struct {
	if x != nil {
		return x.RawData
	}
	return nil
}

var File_api_proto_container_service_extended_proto protoreflect.FileDescriptor

const file_api_proto_container_service_extended_proto_rawDesc = "" +
	"\n" +
	"*api/proto/container_service_extended.proto\x12\n" +
	"nerdctl.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x16api/proto/common.proto\x1a!api/proto/container_service.proto\"\xa8\x0f\n" +
	"\x0fContainerConfig\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\acommand\x18\x03 \x03(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x04 \x03(\tR\x04args\x12\x10\n" +
	"\x03env\x18\x05 \x03(\tR\x03env\x12\x1f\n" +
	"\vworking_dir\x18\x06 \x01(\tR\n" +
	"workingDir\x12?\n" +
	"\x06labels\x18\a \x03(\v2'.nerdctl.v1.ContainerConfig.LabelsEntryR\x06labels\x12\x12\n" +
	"\x04user\x18\b \x01(\tR\x04user\x12@\n" +
	"\x0enetwork_config\x18\t \x01(\v2\x19.nerdctl.v1.NetworkConfigR\rnetworkConfig\x12\x10\n" +
	"\x03dns\x18\n" +
	" \x03(\tR\x03dns\x12\x1d\n" +
	"\n" +
	"dns_search\x18\v \x03(\tR\tdnsSearch\x12\x19\n" +
	"\bdns_opts\x18\f \x03(\tR\adnsOpts\x12\x1a\n" +
	"\bhostname\x18\r \x01(\tR\bhostname\x12\x1e\n" +
	"\n" +
	"domainname\x18\x0e \x01(\tR\n" +
	"domainname\x12\x1f\n" +
	"\vextra_hosts\x18\x0f \x03(\tR\n" +
	"extraHosts\x12/\n" +
	"\x06mounts\x18\x10 \x03(\v2\x17.nerdctl.v1.VolumeMountR\x06mounts\x12!\n" +
	"\fvolumes_from\x18\x11 \x03(\tR\vvolumesFrom\x12\x14\n" +
	"\x05tmpfs\x18\x12 \x03(\tR\x05tmpfs\x12\x19\n" +
	"\bshm_size\x18\x13 \x01(\tR\ashmSize\x128\n" +
	"\tresources\x18\x14 \x01(\v2\x1a.nerdctl.v1.ResourceLimitsR\tresources\x12#\n" +
	"\rcgroup_parent\x18\x15 \x01(\tR\fcgroupParent\x12\x16\n" +
	"\x06ulimit\x18\x16 \x03(\tR\x06ulimit\x12\x16\n" +
	"\x06sysctl\x18\x17 \x03(\tR\x06sysctl\x127\n" +
	"\bsecurity\x18\x18 \x01(\v2\x1b.nerdctl.v1.SecurityOptionsR\bsecurity\x12\x17\n" +
	"\acap_add\x18\x19 \x03(\tR\x06capAdd\x12\x19\n" +
	"\bcap_drop\x18\x1a \x03(\tR\acapDrop\x12\x1e\n" +
	"\n" +
	"privileged\x18\x1b \x01(\bR\n" +
	"privileged\x12 \n" +
	"\fuser_ns_mode\x18\x1c \x01(\tR\n" +
	"userNsMode\x12\x10\n" +
	"\x03tty\x18\x1d \x01(\bR\x03tty\x12\x14\n" +
	"\x05stdin\x18\x1e \x01(\bR\x05stdin\x12\x12\n" +
	"\x04init\x18\x1f \x01(\bR\x04init\x12\x1f\n" +
	"\vinit_binary\x18  \x01(\tR\n" +
	"initBinary\x12\x19\n" +
	"\bpid_mode\x18! \x01(\tR\apidMode\x12\x19\n" +
	"\bipc_mode\x18\" \x01(\tR\aipcMode\x12\x19\n" +
	"\buts_mode\x18# \x01(\tR\autsMode\x12\x16\n" +
	"\x06device\x18$ \x03(\tR\x06device\x12,\n" +
	"\x12device_cgroup_rule\x18% \x03(\tR\x10deviceCgroupRule\x12:\n" +
	"\fhealth_check\x18& \x01(\v2\x17.nerdctl.v1.HealthCheckR\vhealthCheck\x124\n" +
	"\n" +
	"log_config\x18' \x01(\v2\x15.nerdctl.v1.LogConfigR\tlogConfig\x12@\n" +
	"\x0erestart_policy\x18( \x01(\v2\x19.nerdctl.v1.RestartPolicyR\rrestartPolicy\x120\n" +
	"\bplatform\x18) \x01(\v2\x14.nerdctl.v1.PlatformR\bplatform\x12\x18\n" +
	"\aruntime\x18* \x01(\tR\aruntime\x12X\n" +
	"\x0fruntime_options\x18+ \x03(\v2/.nerdctl.v1.ContainerConfig.RuntimeOptionsEntryR\x0eruntimeOptions\x12\x1f\n" +
	"\vstop_signal\x18, \x01(\tR\n" +
	"stopSignal\x12!\n" +
	"\fstop_timeout\x18- \x01(\x05R\vstopTimeout\x12\x1f\n" +
	"\vauto_remove\x18. \x01(\bR\n" +
	"autoRemove\x12\x1b\n" +
	"\tread_only\x18/ \x01(\bR\breadOnly\x12\x1c\n" +
	"\tisolation\x180 \x01(\tR\tisolation\x12\x1b\n" +
	"\tgroup_add\x181 \x03(\tR\bgroupAdd\x12*\n" +
	"\x11no_new_privileges\x182 \x01(\bR\x0fnoNewPrivileges\x12)\n" +
	"\x10apparmor_profile\x183 \x01(\tR\x0fapparmorProfile\x12'\n" +
	"\x0fseccomp_profile\x184 \x01(\tR\x0eseccompProfile\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13RuntimeOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"n\n" +
	"\x04Port\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12!\n" +
	"\fprivate_port\x18\x02 \x01(\x05R\vprivatePort\x12\x1f\n" +
	"\vpublic_port\x18\x03 \x01(\x05R\n" +
	"publicPort\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\"\xa1\x03\n" +
	"\x0fNetworkSettings\x12\x16\n" +
	"\x06bridge\x18\x01 \x01(\tR\x06bridge\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x02 \x01(\tR\tsandboxId\x12!\n" +
	"\fhairpin_mode\x18\x03 \x01(\bR\vhairpinMode\x125\n" +
	"\x17link_local_ipv6_address\x18\x04 \x01(\tR\x14linkLocalIpv6Address\x12:\n" +
	"\x1alink_local_ipv6_prefix_len\x18\x05 \x01(\x05R\x16linkLocalIpv6PrefixLen\x12E\n" +
	"\bnetworks\x18\x06 \x03(\v2).nerdctl.v1.NetworkSettings.NetworksEntryR\bnetworks\x12\x1f\n" +
	"\vsandbox_key\x18\a \x01(\tR\n" +
	"sandboxKey\x1aY\n" +
	"\rNetworksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.nerdctl.v1.EndpointSettingsR\x05value:\x028\x01\"\xb7\x04\n" +
	"\x10EndpointSettings\x12\x1f\n" +
	"\vipam_config\x18\x01 \x01(\tR\n" +
	"ipamConfig\x12\x14\n" +
	"\x05links\x18\x02 \x03(\tR\x05links\x12\x18\n" +
	"\aaliases\x18\x03 \x03(\tR\aaliases\x12\x1d\n" +
	"\n" +
	"network_id\x18\x04 \x01(\tR\tnetworkId\x12\x1f\n" +
	"\vendpoint_id\x18\x05 \x01(\tR\n" +
	"endpointId\x12\x18\n" +
	"\agateway\x18\x06 \x01(\tR\agateway\x12\x1d\n" +
	"\n" +
	"ip_address\x18\a \x01(\tR\tipAddress\x12\"\n" +
	"\rip_prefix_len\x18\b \x01(\x05R\vipPrefixLen\x12!\n" +
	"\fipv6_gateway\x18\t \x01(\tR\vipv6Gateway\x12.\n" +
	"\x13global_ipv6_address\x18\n" +
	" \x01(\tR\x11globalIpv6Address\x123\n" +
	"\x16global_ipv6_prefix_len\x18\v \x01(\x05R\x13globalIpv6PrefixLen\x12\x1f\n" +
	"\vmac_address\x18\f \x01(\tR\n" +
	"macAddress\x12M\n" +
	"\vdriver_opts\x18\r \x03(\v2,.nerdctl.v1.EndpointSettings.DriverOptsEntryR\n" +
	"driverOpts\x1a=\n" +
	"\x0fDriverOptsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcc\x01\n" +
	"\n" +
	"MountPoint\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12 \n" +
	"\vdestination\x18\x04 \x01(\tR\vdestination\x12\x16\n" +
	"\x06driver\x18\x05 \x01(\tR\x06driver\x12\x12\n" +
	"\x04mode\x18\x06 \x01(\tR\x04mode\x12\x0e\n" +
	"\x02rw\x18\a \x01(\bR\x02rw\x12 \n" +
	"\vpropagation\x18\b \x01(\tR\vpropagation\"\xd4\x03\n" +
	"\x14ContainerStatsDetail\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x121\n" +
	"\tcpu_stats\x18\x03 \x01(\v2\x14.nerdctl.v1.CPUStatsR\bcpuStats\x12:\n" +
	"\fmemory_stats\x18\x04 \x01(\v2\x17.nerdctl.v1.MemoryStatsR\vmemoryStats\x12=\n" +
	"\rnetwork_stats\x18\x05 \x01(\v2\x18.nerdctl.v1.NetworkStatsR\fnetworkStats\x129\n" +
	"\vblkio_stats\x18\x06 \x01(\v2\x18.nerdctl.v1.BlockIOStatsR\n" +
	"blkioStats\x124\n" +
	"\n" +
	"pids_stats\x18\a \x01(\v2\x15.nerdctl.v1.PidsStatsR\tpidsStats\x128\n" +
	"\ttimestamp\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\apreread\x18\t \x01(\tR\apreread\x12\x12\n" +
	"\x04read\x18\n" +
	" \x01(\tR\x04read\"\xcd\x01\n" +
	"\bCPUStats\x121\n" +
	"\tcpu_usage\x18\x01 \x01(\v2\x14.nerdctl.v1.CPUUsageR\bcpuUsage\x12(\n" +
	"\x10system_cpu_usage\x18\x02 \x01(\x04R\x0esystemCpuUsage\x12\x1f\n" +
	"\vonline_cpus\x18\x03 \x01(\x04R\n" +
	"onlineCpus\x12C\n" +
	"\x0fthrottling_data\x18\x04 \x01(\v2\x1a.nerdctl.v1.ThrottlingDataR\x0ethrottlingData\"\xaa\x01\n" +
	"\bCPUUsage\x12\x1f\n" +
	"\vtotal_usage\x18\x01 \x01(\x04R\n" +
	"totalUsage\x12!\n" +
	"\fpercpu_usage\x18\x02 \x03(\x04R\vpercpuUsage\x12.\n" +
	"\x13usage_in_kernelmode\x18\x03 \x01(\x04R\x11usageInKernelmode\x12*\n" +
	"\x11usage_in_usermode\x18\x04 \x01(\x04R\x0fusageInUsermode\"~\n" +
	"\x0eThrottlingData\x12\x18\n" +
	"\aperiods\x18\x01 \x01(\x04R\aperiods\x12+\n" +
	"\x11throttled_periods\x18\x02 \x01(\x04R\x10throttledPeriods\x12%\n" +
	"\x0ethrottled_time\x18\x03 \x01(\x04R\rthrottledTime\"\xa2\x01\n" +
	"\vMemoryStats\x12\x14\n" +
	"\x05usage\x18\x01 \x01(\x04R\x05usage\x12\x1b\n" +
	"\tmax_usage\x18\x02 \x01(\x04R\bmaxUsage\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x04R\x05limit\x12/\n" +
	"\x05stats\x18\x04 \x01(\v2\x19.nerdctl.v1.MemoryDetailsR\x05stats\x12\x19\n" +
	"\bfail_cnt\x18\x05 \x01(\x04R\afailCnt\"\x8e\t\n" +
	"\rMemoryDetails\x12\x1f\n" +
	"\vactive_anon\x18\x01 \x01(\x04R\n" +
	"activeAnon\x12\x1f\n" +
	"\vactive_file\x18\x02 \x01(\x04R\n" +
	"activeFile\x12\x14\n" +
	"\x05cache\x18\x03 \x01(\x04R\x05cache\x12\x14\n" +
	"\x05dirty\x18\x04 \x01(\x04R\x05dirty\x12:\n" +
	"\x19hierarchical_memory_limit\x18\x05 \x01(\x04R\x17hierarchicalMemoryLimit\x128\n" +
	"\x18hierarchical_memsw_limit\x18\x06 \x01(\x04R\x16hierarchicalMemswLimit\x12#\n" +
	"\rinactive_anon\x18\a \x01(\x04R\finactiveAnon\x12#\n" +
	"\rinactive_file\x18\b \x01(\x04R\finactiveFile\x12\x1f\n" +
	"\vmapped_file\x18\t \x01(\x04R\n" +
	"mappedFile\x12\x18\n" +
	"\apgfault\x18\n" +
	" \x01(\x04R\apgfault\x12\x1e\n" +
	"\n" +
	"pgmajfault\x18\v \x01(\x04R\n" +
	"pgmajfault\x12\x16\n" +
	"\x06pgpgin\x18\f \x01(\x04R\x06pgpgin\x12\x18\n" +
	"\apgpgout\x18\r \x01(\x04R\apgpgout\x12\x10\n" +
	"\x03rss\x18\x0e \x01(\x04R\x03rss\x12\x19\n" +
	"\brss_huge\x18\x0f \x01(\x04R\arssHuge\x12*\n" +
	"\x11total_active_anon\x18\x10 \x01(\x04R\x0ftotalActiveAnon\x12*\n" +
	"\x11total_active_file\x18\x11 \x01(\x04R\x0ftotalActiveFile\x12\x1f\n" +
	"\vtotal_cache\x18\x12 \x01(\x04R\n" +
	"totalCache\x12\x1f\n" +
	"\vtotal_dirty\x18\x13 \x01(\x04R\n" +
	"totalDirty\x12.\n" +
	"\x13total_inactive_anon\x18\x14 \x01(\x04R\x11totalInactiveAnon\x12.\n" +
	"\x13total_inactive_file\x18\x15 \x01(\x04R\x11totalInactiveFile\x12*\n" +
	"\x11total_mapped_file\x18\x16 \x01(\x04R\x0ftotalMappedFile\x12#\n" +
	"\rtotal_pgfault\x18\x17 \x01(\x04R\ftotalPgfault\x12)\n" +
	"\x10total_pgmajfault\x18\x18 \x01(\x04R\x0ftotalPgmajfault\x12!\n" +
	"\ftotal_pgpgin\x18\x19 \x01(\x04R\vtotalPgpgin\x12#\n" +
	"\rtotal_pgpgout\x18\x1a \x01(\x04R\ftotalPgpgout\x12\x1b\n" +
	"\ttotal_rss\x18\x1b \x01(\x04R\btotalRss\x12$\n" +
	"\x0etotal_rss_huge\x18\x1c \x01(\x04R\ftotalRssHuge\x12+\n" +
	"\x11total_unevictable\x18\x1d \x01(\x04R\x10totalUnevictable\x12'\n" +
	"\x0ftotal_writeback\x18\x1e \x01(\x04R\x0etotalWriteback\x12 \n" +
	"\vunevictable\x18\x1f \x01(\x04R\vunevictable\x12\x1c\n" +
	"\twriteback\x18  \x01(\x04R\twriteback\"\xb3\x01\n" +
	"\fNetworkStats\x12H\n" +
	"\n" +
	"interfaces\x18\x01 \x03(\v2(.nerdctl.v1.NetworkStats.InterfacesEntryR\n" +
	"interfaces\x1aY\n" +
	"\x0fInterfacesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.nerdctl.v1.InterfaceStatsR\x05value:\x028\x01\"\xfc\x01\n" +
	"\x0eInterfaceStats\x12\x19\n" +
	"\brx_bytes\x18\x01 \x01(\x04R\arxBytes\x12\x1d\n" +
	"\n" +
	"rx_packets\x18\x02 \x01(\x04R\trxPackets\x12\x1b\n" +
	"\trx_errors\x18\x03 \x01(\x04R\brxErrors\x12\x1d\n" +
	"\n" +
	"rx_dropped\x18\x04 \x01(\x04R\trxDropped\x12\x19\n" +
	"\btx_bytes\x18\x05 \x01(\x04R\atxBytes\x12\x1d\n" +
	"\n" +
	"tx_packets\x18\x06 \x01(\x04R\ttxPackets\x12\x1b\n" +
	"\ttx_errors\x18\a \x01(\x04R\btxErrors\x12\x1d\n" +
	"\n" +
	"tx_dropped\x18\b \x01(\x04R\ttxDropped\"\x88\x05\n" +
	"\fBlockIOStats\x12W\n" +
	"\x1aio_service_bytes_recursive\x18\x01 \x03(\v2\x1a.nerdctl.v1.BlkioStatEntryR\x17ioServiceBytesRecursive\x12N\n" +
	"\x15io_serviced_recursive\x18\x02 \x03(\v2\x1a.nerdctl.v1.BlkioStatEntryR\x13ioServicedRecursive\x12J\n" +
	"\x13io_queued_recursive\x18\x03 \x03(\v2\x1a.nerdctl.v1.BlkioStatEntryR\x11ioQueuedRecursive\x12U\n" +
	"\x19io_service_time_recursive\x18\x04 \x03(\v2\x1a.nerdctl.v1.BlkioStatEntryR\x16ioServiceTimeRecursive\x12O\n" +
	"\x16io_wait_time_recursive\x18\x05 \x03(\v2\x1a.nerdctl.v1.BlkioStatEntryR\x13ioWaitTimeRecursive\x12J\n" +
	"\x13io_merged_recursive\x18\x06 \x03(\v2\x1a.nerdctl.v1.BlkioStatEntryR\x11ioMergedRecursive\x12F\n" +
	"\x11io_time_recursive\x18\a \x03(\v2\x1a.nerdctl.v1.BlkioStatEntryR\x0fioTimeRecursive\x12G\n" +
	"\x11sectors_recursive\x18\b \x03(\v2\x1a.nerdctl.v1.BlkioStatEntryR\x10sectorsRecursive\"b\n" +
	"\x0eBlkioStatEntry\x12\x14\n" +
	"\x05major\x18\x01 \x01(\x04R\x05major\x12\x14\n" +
	"\x05minor\x18\x02 \x01(\x04R\x05minor\x12\x0e\n" +
	"\x02op\x18\x03 \x01(\tR\x02op\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x04R\x05value\";\n" +
	"\tPidsStats\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\x04R\acurrent\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x04R\x05limit\"o\n" +
	"\x13ContainerTopRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x17\n" +
	"\aps_args\x18\x03 \x01(\tR\x06psArgs\"a\n" +
	"\x10ContainerTopInfo\x12\x16\n" +
	"\x06titles\x18\x01 \x03(\tR\x06titles\x125\n" +
	"\tprocesses\x18\x02 \x03(\v2\x17.nerdctl.v1.ProcessInfoR\tprocesses\"%\n" +
	"\vProcessInfo\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\"{\n" +
	"\x11ContainerPortInfo\x12!\n" +
	"\fprivate_port\x18\x01 \x01(\tR\vprivatePort\x12\x1f\n" +
	"\vpublic_port\x18\x02 \x01(\tR\n" +
	"publicPort\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x0e\n" +
	"\x02ip\x18\x04 \x01(\tR\x02ip\"\x85\x01\n" +
	"\x13ContainerHealthInfo\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12%\n" +
	"\x0efailing_streak\x18\x02 \x01(\x05R\rfailingStreak\x12/\n" +
	"\x03log\x18\x03 \x03(\v2\x1d.nerdctl.v1.HealthCheckResultR\x03log\"\xa8\x01\n" +
	"\x11HealthCheckResult\x120\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\x12,\n" +
	"\x03end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x03end\x12\x1b\n" +
	"\texit_code\x18\x03 \x01(\x05R\bexitCode\x12\x16\n" +
	"\x06output\x18\x04 \x01(\tR\x06output\"\xaa\x02\n" +
	"\x15BatchContainerRequest\x12\x1c\n" +
	"\toperation\x18\x01 \x01(\tR\toperation\x12#\n" +
	"\rcontainer_ids\x18\x02 \x03(\tR\fcontainerIds\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12H\n" +
	"\aoptions\x18\x04 \x03(\v2..nerdctl.v1.BatchContainerRequest.OptionsEntryR\aoptions\x12*\n" +
	"\x11continue_on_error\x18\x05 \x01(\bR\x0fcontinueOnError\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9a\x01\n" +
	"\x16BatchContainerResponse\x12:\n" +
	"\aresults\x18\x01 \x03(\v2 .nerdctl.v1.BatchOperationResultR\aresults\x12#\n" +
	"\rsuccess_count\x18\x02 \x01(\x05R\fsuccessCount\x12\x1f\n" +
	"\verror_count\x18\x03 \x01(\x05R\n" +
	"errorCount\"\x83\x01\n" +
	"\x14BatchOperationResult\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x18\n" +
	"\awarning\x18\x04 \x01(\tR\awarning\"\xc9\x02\n" +
	"\x0eContainerEvent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\x12%\n" +
	"\x0econtainer_name\x18\x03 \x01(\tR\rcontainerName\x12\x14\n" +
	"\x05image\x18\x04 \x01(\tR\x05image\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12J\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2*.nerdctl.v1.ContainerEvent.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xeb\x02\n" +
	"\x18MonitorContainersRequest\x12#\n" +
	"\rcontainer_ids\x18\x01 \x03(\tR\fcontainerIds\x12\x1f\n" +
	"\vevent_types\x18\x02 \x03(\tR\n" +
	"eventTypes\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x120\n" +
	"\x05since\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x05since\x120\n" +
	"\x05until\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x05until\x12K\n" +
	"\afilters\x18\x06 \x03(\v21.nerdctl.v1.MonitorContainersRequest.FiltersEntryR\afilters\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"r\n" +
	"\x16GetContainerTopRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x17\n" +
	"\aps_args\x18\x03 \x01(\tR\x06psArgs\"R\n" +
	"\x17GetContainerTopResponse\x127\n" +
	"\btop_info\x18\x01 \x01(\v2\x1c.nerdctl.v1.ContainerTopInfoR\atopInfo\"}\n" +
	"\x17GetContainerPortRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12!\n" +
	"\fprivate_port\x18\x03 \x01(\tR\vprivatePort\"O\n" +
	"\x18GetContainerPortResponse\x123\n" +
	"\x05ports\x18\x01 \x03(\v2\x1d.nerdctl.v1.ContainerPortInfoR\x05ports\"^\n" +
	"\x1bHealthCheckContainerRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"`\n" +
	"\x1cHealthCheckContainerResponse\x12@\n" +
	"\vhealth_info\x18\x01 \x01(\v2\x1f.nerdctl.v1.ContainerHealthInfoR\n" +
	"healthInfo\"\x8c\x01\n" +
	"\x1eCreateContainerRequestExtended\x123\n" +
	"\x06config\x18\x01 \x01(\v2\x1b.nerdctl.v1.ContainerConfigR\x06config\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x17\n" +
	"\adry_run\x18\x03 \x01(\bR\x06dryRun\"\xa2\x01\n" +
	"\x1fCreateContainerResponseExtended\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x1a\n" +
	"\bwarnings\x18\x02 \x03(\tR\bwarnings\x12@\n" +
	"\x0econtainer_info\x18\x03 \x01(\v2\x19.nerdctl.v1.ContainerInfoR\rcontainerInfo\"\xde\x02\n" +
	"\x1bRunContainerRequestExtended\x123\n" +
	"\x06config\x18\x01 \x01(\v2\x1b.nerdctl.v1.ContainerConfigR\x06config\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06detach\x18\x03 \x01(\bR\x06detach\x12\x1f\n" +
	"\vdetach_keys\x18\x04 \x01(\tR\n" +
	"detachKeys\x12\x0e\n" +
	"\x02rm\x18\x05 \x01(\bR\x02rm\x12\x16\n" +
	"\x06attach\x18\x06 \x03(\tR\x06attach\x12O\n" +
	"\benv_file\x18\a \x03(\v24.nerdctl.v1.RunContainerRequestExtended.EnvFileEntryR\aenvFile\x1a:\n" +
	"\fEnvFileEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbc\x01\n" +
	"\x1cRunContainerResponseExtended\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x1b\n" +
	"\texit_code\x18\x02 \x01(\x05R\bexitCode\x12\x1a\n" +
	"\bwarnings\x18\x03 \x03(\tR\bwarnings\x12@\n" +
	"\x0econtainer_info\x18\x04 \x01(\v2\x19.nerdctl.v1.ContainerInfoR\rcontainerInfo\"\xe6\x02\n" +
	"\x1dListContainersRequestExtended\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x10\n" +
	"\x03all\x18\x02 \x01(\bR\x03all\x12\x12\n" +
	"\x04last\x18\x03 \x01(\x05R\x04last\x12\x16\n" +
	"\x06latest\x18\x04 \x01(\bR\x06latest\x12\x19\n" +
	"\bno_trunc\x18\x05 \x01(\bR\anoTrunc\x12\x14\n" +
	"\x05quiet\x18\x06 \x01(\bR\x05quiet\x12\x12\n" +
	"\x04size\x18\a \x01(\bR\x04size\x12P\n" +
	"\afilters\x18\b \x03(\v26.nerdctl.v1.ListContainersRequestExtended.FiltersEntryR\afilters\x12\x16\n" +
	"\x06format\x18\t \x01(\tR\x06format\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"|\n" +
	"\x1eListContainersResponseExtended\x129\n" +
	"\n" +
	"containers\x18\x01 \x03(\v2\x19.nerdctl.v1.ContainerInfoR\n" +
	"containers\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x98\x01\n" +
	" InspectContainerResponseExtended\x12@\n" +
	"\x0econtainer_info\x18\x01 \x01(\v2\x19.nerdctl.v1.ContainerInfoR\rcontainerInfo\x122\n" +
	"\braw_data\x18\x02 \x01(\v2\x17.google.protobuf.StructR\arawData2\xc3\x16\n" +
	"\x18ContainerServiceExtended\x12Z\n" +
	"\x0fCreateContainer\x12\".nerdctl.v1.CreateContainerRequest\x1a#.nerdctl.v1.CreateContainerResponse\x12W\n" +
	"\x0eStartContainer\x12!.nerdctl.v1.StartContainerRequest\x1a\".nerdctl.v1.StartContainerResponse\x12T\n" +
	"\rStopContainer\x12 .nerdctl.v1.StopContainerRequest\x1a!.nerdctl.v1.StopContainerResponse\x12]\n" +
	"\x10RestartContainer\x12#.nerdctl.v1.RestartContainerRequest\x1a$.nerdctl.v1.RestartContainerResponse\x12Z\n" +
	"\x0fRemoveContainer\x12\".nerdctl.v1.RemoveContainerRequest\x1a#.nerdctl.v1.RemoveContainerResponse\x12T\n" +
	"\rKillContainer\x12 .nerdctl.v1.KillContainerRequest\x1a!.nerdctl.v1.KillContainerResponse\x12W\n" +
	"\x0ePauseContainer\x12!.nerdctl.v1.PauseContainerRequest\x1a\".nerdctl.v1.PauseContainerResponse\x12]\n" +
	"\x10UnpauseContainer\x12#.nerdctl.v1.UnpauseContainerRequest\x1a$.nerdctl.v1.UnpauseContainerResponse\x12Q\n" +
	"\fRunContainer\x12\x1f.nerdctl.v1.RunContainerRequest\x1a .nerdctl.v1.RunContainerResponse\x12_\n" +
	"\x12RunContainerStream\x12\x1f.nerdctl.v1.RunContainerRequest\x1a&.nerdctl.v1.RunContainerStreamResponse0\x01\x12W\n" +
	"\x0eListContainers\x12!.nerdctl.v1.ListContainersRequest\x1a\".nerdctl.v1.ListContainersResponse\x12]\n" +
	"\x10InspectContainer\x12#.nerdctl.v1.InspectContainerRequest\x1a$.nerdctl.v1.InspectContainerResponse\x12O\n" +
	"\x10GetContainerLogs\x12#.nerdctl.v1.GetContainerLogsRequest\x1a\x14.nerdctl.v1.LogEntry0\x01\x12^\n" +
	"\x0fAttachContainer\x12\".nerdctl.v1.AttachContainerRequest\x1a#.nerdctl.v1.AttachContainerResponse(\x010\x01\x12T\n" +
	"\rExecContainer\x12 .nerdctl.v1.ExecContainerRequest\x1a!.nerdctl.v1.ExecContainerResponse\x12j\n" +
	"\x13ExecContainerStream\x12&.nerdctl.v1.ExecContainerStreamRequest\x1a'.nerdctl.v1.ExecContainerStreamResponse(\x010\x01\x12W\n" +
	"\x11GetContainerStats\x12$.nerdctl.v1.GetContainerStatsRequest\x1a\x1a.nerdctl.v1.ContainerStats0\x01\x12T\n" +
	"\rWaitContainer\x12 .nerdctl.v1.WaitContainerRequest\x1a!.nerdctl.v1.WaitContainerResponse\x12Z\n" +
	"\x0fRenameContainer\x12\".nerdctl.v1.RenameContainerRequest\x1a#.nerdctl.v1.RenameContainerResponse\x12Z\n" +
	"\x0fUpdateContainer\x12\".nerdctl.v1.UpdateContainerRequest\x1a#.nerdctl.v1.UpdateContainerResponse\x12\\\n" +
	"\x0fCopyToContainer\x12\".nerdctl.v1.CopyToContainerRequest\x1a#.nerdctl.v1.CopyToContainerResponse(\x01\x12b\n" +
	"\x11CopyFromContainer\x12$.nerdctl.v1.CopyFromContainerRequest\x1a%.nerdctl.v1.CopyFromContainerResponse0\x01\x12\\\n" +
	"\x0fExportContainer\x12\".nerdctl.v1.ExportContainerRequest\x1a#.nerdctl.v1.ExportContainerResponse0\x01\x12T\n" +
	"\rDiffContainer\x12 .nerdctl.v1.DiffContainerRequest\x1a!.nerdctl.v1.DiffContainerResponse\x12Z\n" +
	"\x0fCommitContainer\x12\".nerdctl.v1.CommitContainerRequest\x1a#.nerdctl.v1.CommitContainerResponse\x12Z\n" +
	"\x0fPruneContainers\x12\".nerdctl.v1.PruneContainersRequest\x1a#.nerdctl.v1.PruneContainersResponse\x12Z\n" +
	"\x0fGetContainerTop\x12\".nerdctl.v1.GetContainerTopRequest\x1a#.nerdctl.v1.GetContainerTopResponse\x12]\n" +
	"\x10GetContainerPort\x12#.nerdctl.v1.GetContainerPortRequest\x1a$.nerdctl.v1.GetContainerPortResponse\x12i\n" +
	"\x14HealthCheckContainer\x12'.nerdctl.v1.HealthCheckContainerRequest\x1a(.nerdctl.v1.HealthCheckContainerResponse\x12`\n" +
	"\x17BatchContainerOperation\x12!.nerdctl.v1.BatchContainerRequest\x1a\".nerdctl.v1.BatchContainerResponse\x12W\n" +
	"\x11MonitorContainers\x12$.nerdctl.v1.MonitorContainersRequest\x1a\x1a.nerdctl.v1.ContainerEvent0\x01B5Z3github.com/containerd/nerdctl-grpc-server/api/protob\x06proto3"

var (
	file_api_proto_container_service_extended_proto_rawDescOnce sync.Once
	file_api_proto_container_service_extended_proto_rawDescData []byte
)

func file_api_proto_container_service_extended_proto_rawDescGZIP() []byte {
	file_api_proto_container_service_extended_proto_rawDescOnce.Do(func() {
		file_api_proto_container_service_extended_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_container_service_extended_proto_rawDesc), len(file_api_proto_container_service_extended_proto_rawDesc)))
	})
	return file_api_proto_container_service_extended_proto_rawDescData
}

var file_api_proto_container_service_extended_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_api_proto_container_service_extended_proto_goTypes = []any{
	(*ContainerConfig)(nil),                  // 0: nerdctl.v1.ContainerConfig
	(*Port)(nil),                             // 1: nerdctl.v1.Port
	(*NetworkSettings)(nil),                  // 2: nerdctl.v1.NetworkSettings
	(*EndpointSettings)(nil),                 // 3: nerdctl.v1.EndpointSettings
	(*MountPoint)(nil),                       // 4: nerdctl.v1.MountPoint
	(*ContainerStatsDetail)(nil),             // 5: nerdctl.v1.ContainerStatsDetail
	(*CPUStats)(nil),                         // 6: nerdctl.v1.CPUStats
	(*CPUUsage)(nil),                         // 7: nerdctl.v1.CPUUsage
	(*ThrottlingData)(nil),                   // 8: nerdctl.v1.ThrottlingData
	(*MemoryStats)(nil),                      // 9: nerdctl.v1.MemoryStats
	(*MemoryDetails)(nil),                    // 10: nerdctl.v1.MemoryDetails
	(*NetworkStats)(nil),                     // 11: nerdctl.v1.NetworkStats
	(*InterfaceStats)(nil),                   // 12: nerdctl.v1.InterfaceStats
	(*BlockIOStats)(nil),                     // 13: nerdctl.v1.BlockIOStats
	(*BlkioStatEntry)(nil),                   // 14: nerdctl.v1.BlkioStatEntry
	(*PidsStats)(nil),                        // 15: nerdctl.v1.PidsStats
	(*ContainerTopRequest)(nil),              // 16: nerdctl.v1.ContainerTopRequest
	(*ContainerTopInfo)(nil),                 // 17: nerdctl.v1.ContainerTopInfo
	(*ProcessInfo)(nil),                      // 18: nerdctl.v1.ProcessInfo
	(*ContainerPortInfo)(nil),                // 19: nerdctl.v1.ContainerPortInfo
	(*ContainerHealthInfo)(nil),              // 20: nerdctl.v1.ContainerHealthInfo
	(*HealthCheckResult)(nil),                // 21: nerdctl.v1.HealthCheckResult
	(*BatchContainerRequest)(nil),            // 22: nerdctl.v1.BatchContainerRequest
	(*BatchContainerResponse)(nil),           // 23: nerdctl.v1.BatchContainerResponse
	(*BatchOperationResult)(nil),             // 24: nerdctl.v1.BatchOperationResult
	(*ContainerEvent)(nil),                   // 25: nerdctl.v1.ContainerEvent
	(*MonitorContainersRequest)(nil),         // 26: nerdctl.v1.MonitorContainersRequest
	(*GetContainerTopRequest)(nil),           // 27: nerdctl.v1.GetContainerTopRequest
	(*GetContainerTopResponse)(nil),          // 28: nerdctl.v1.GetContainerTopResponse
	(*GetContainerPortRequest)(nil),          // 29: nerdctl.v1.GetContainerPortRequest
	(*GetContainerPortResponse)(nil),         // 30: nerdctl.v1.GetContainerPortResponse
	(*HealthCheckContainerRequest)(nil),      // 31: nerdctl.v1.HealthCheckContainerRequest
	(*HealthCheckContainerResponse)(nil),     // 32: nerdctl.v1.HealthCheckContainerResponse
	(*CreateContainerRequestExtended)(nil),   // 33: nerdctl.v1.CreateContainerRequestExtended
	(*CreateContainerResponseExtended)(nil),  // 34: nerdctl.v1.CreateContainerResponseExtended
	(*RunContainerRequestExtended)(nil),      // 35: nerdctl.v1.RunContainerRequestExtended
	(*RunContainerResponseExtended)(nil),     // 36: nerdctl.v1.RunContainerResponseExtended
	(*ListContainersRequestExtended)(nil),    // 37: nerdctl.v1.ListContainersRequestExtended
	(*ListContainersResponseExtended)(nil),   // 38: nerdctl.v1.ListContainersResponseExtended
	(*InspectContainerResponseExtended)(nil), // 39: nerdctl.v1.InspectContainerResponseExtended
	nil,                                      // 40: nerdctl.v1.ContainerConfig.LabelsEntry
	nil,                                      // 41: nerdctl.v1.ContainerConfig.RuntimeOptionsEntry
	nil,                                      // 42: nerdctl.v1.NetworkSettings.NetworksEntry
	nil,                                      // 43: nerdctl.v1.EndpointSettings.DriverOptsEntry
	nil,                                      // 44: nerdctl.v1.NetworkStats.InterfacesEntry
	nil,                                      // 45: nerdctl.v1.BatchContainerRequest.OptionsEntry
	nil,                                      // 46: nerdctl.v1.ContainerEvent.AttributesEntry
	nil,                                      // 47: nerdctl.v1.MonitorContainersRequest.FiltersEntry
	nil,                                      // 48: nerdctl.v1.RunContainerRequestExtended.EnvFileEntry
	nil,                                      // 49: nerdctl.v1.ListContainersRequestExtended.FiltersEntry
	(*NetworkConfig)(nil),                    // 50: nerdctl.v1.NetworkConfig
	(*VolumeMount)(nil),                      // 51: nerdctl.v1.VolumeMount
	(*ResourceLimits)(nil),                   // 52: nerdctl.v1.ResourceLimits
	(*SecurityOptions)(nil),                  // 53: nerdctl.v1.SecurityOptions
	(*HealthCheck)(nil),                      // 54: nerdctl.v1.HealthCheck
	(*LogConfig)(nil),                        // 55: nerdctl.v1.LogConfig
	(*RestartPolicy)(nil),                    // 56: nerdctl.v1.RestartPolicy
	(*Platform)(nil),                         // 57: nerdctl.v1.Platform
	(*timestamp.Timestamp)(nil),              // 58: google.protobuf.Timestamp
	(*ContainerInfo)(nil),                    // 59: nerdctl.v1.ContainerInfo
	(*_struct.Struct)(nil),                   // 60: google.protobuf.Struct
	(*CreateContainerRequest)(nil),           // 61: nerdctl.v1.CreateContainerRequest
	(*StartContainerRequest)(nil),            // 62: nerdctl.v1.StartContainerRequest
	(*StopContainerRequest)(nil),             // 63: nerdctl.v1.StopContainerRequest
	(*RestartContainerRequest)(nil),          // 64: nerdctl.v1.RestartContainerRequest
	(*RemoveContainerRequest)(nil),           // 65: nerdctl.v1.RemoveContainerRequest
	(*KillContainerRequest)(nil),             // 66: nerdctl.v1.KillContainerRequest
	(*PauseContainerRequest)(nil),            // 67: nerdctl.v1.PauseContainerRequest
	(*UnpauseContainerRequest)(nil),          // 68: nerdctl.v1.UnpauseContainerRequest
	(*RunContainerRequest)(nil),              // 69: nerdctl.v1.RunContainerRequest
	(*ListContainersRequest)(nil),            // 70: nerdctl.v1.ListContainersRequest
	(*InspectContainerRequest)(nil),          // 71: nerdctl.v1.InspectContainerRequest
	(*GetContainerLogsRequest)(nil),          // 72: nerdctl.v1.GetContainerLogsRequest
	(*AttachContainerRequest)(nil),           // 73: nerdctl.v1.AttachContainerRequest
	(*ExecContainerRequest)(nil),             // 74: nerdctl.v1.ExecContainerRequest
	(*ExecContainerStreamRequest)(nil),       // 75: nerdctl.v1.ExecContainerStreamRequest
	(*GetContainerStatsRequest)(nil),         // 76: nerdctl.v1.GetContainerStatsRequest
	(*WaitContainerRequest)(nil),             // 77: nerdctl.v1.WaitContainerRequest
	(*RenameContainerRequest)(nil),           // 78: nerdctl.v1.RenameContainerRequest
	(*UpdateContainerRequest)(nil),           // 79: nerdctl.v1.UpdateContainerRequest
	(*CopyToContainerRequest)(nil),           // 80: nerdctl.v1.CopyToContainerRequest
	(*CopyFromContainerRequest)(nil),         // 81: nerdctl.v1.CopyFromContainerRequest
	(*ExportContainerRequest)(nil),           // 82: nerdctl.v1.ExportContainerRequest
	(*DiffContainerRequest)(nil),             // 83: nerdctl.v1.DiffContainerRequest
	(*CommitContainerRequest)(nil),           // 84: nerdctl.v1.CommitContainerRequest
	(*PruneContainersRequest)(nil),           // 85: nerdctl.v1.PruneContainersRequest
	(*CreateContainerResponse)(nil),          // 86: nerdctl.v1.CreateContainerResponse
	(*StartContainerResponse)(nil),           // 87: nerdctl.v1.StartContainerResponse
	(*StopContainerResponse)(nil),            // 88: nerdctl.v1.StopContainerResponse
	(*RestartContainerResponse)(nil),         // 89: nerdctl.v1.RestartContainerResponse
	(*RemoveContainerResponse)(nil),          // 90: nerdctl.v1.RemoveContainerResponse
	(*KillContainerResponse)(nil),            // 91: nerdctl.v1.KillContainerResponse
	(*PauseContainerResponse)(nil),           // 92: nerdctl.v1.PauseContainerResponse
	(*UnpauseContainerResponse)(nil),         // 93: nerdctl.v1.UnpauseContainerResponse
	(*RunContainerResponse)(nil),             // 94: nerdctl.v1.RunContainerResponse
	(*RunContainerStreamResponse)(nil),       // 95: nerdctl.v1.RunContainerStreamResponse
	(*ListContainersResponse)(nil),           // 96: nerdctl.v1.ListContainersResponse
	(*InspectContainerResponse)(nil),         // 97: nerdctl.v1.InspectContainerResponse
	(*LogEntry)(nil),                         // 98: nerdctl.v1.LogEntry
	(*AttachContainerResponse)(nil),          // 99: nerdctl.v1.AttachContainerResponse
	(*ExecContainerResponse)(nil),            // 100: nerdctl.v1.ExecContainerResponse
	(*ExecContainerStreamResponse)(nil),      // 101: nerdctl.v1.ExecContainerStreamResponse
	(*ContainerStats)(nil),                   // 102: nerdctl.v1.ContainerStats
	(*WaitContainerResponse)(nil),            // 103: nerdctl.v1.WaitContainerResponse
	(*RenameContainerResponse)(nil),          // 104: nerdctl.v1.RenameContainerResponse
	(*UpdateContainerResponse)(nil),          // 105: nerdctl.v1.UpdateContainerResponse
	(*CopyToContainerResponse)(nil),          // 106: nerdctl.v1.CopyToContainerResponse
	(*CopyFromContainerResponse)(nil),        // 107: nerdctl.v1.CopyFromContainerResponse
	(*ExportContainerResponse)(nil),          // 108: nerdctl.v1.ExportContainerResponse
	(*DiffContainerResponse)(nil),            // 109: nerdctl.v1.DiffContainerResponse
	(*CommitContainerResponse)(nil),          // 110: nerdctl.v1.CommitContainerResponse
	(*PruneContainersResponse)(nil),          // 111: nerdctl.v1.PruneContainersResponse
}
var file_api_proto_container_service_extended_proto_depIdxs = []int32{
	40,  // 0: nerdctl.v1.ContainerConfig.labels:type_name -> nerdctl.v1.ContainerConfig.LabelsEntry
	50,  // 1: nerdctl.v1.ContainerConfig.network_config:type_name -> nerdctl.v1.NetworkConfig
	51,  // 2: nerdctl.v1.ContainerConfig.mounts:type_name -> nerdctl.v1.VolumeMount
	52,  // 3: nerdctl.v1.ContainerConfig.resources:type_name -> nerdctl.v1.ResourceLimits
	53,  // 4: nerdctl.v1.ContainerConfig.security:type_name -> nerdctl.v1.SecurityOptions
	54,  // 5: nerdctl.v1.ContainerConfig.health_check:type_name -> nerdctl.v1.HealthCheck
	55,  // 6: nerdctl.v1.ContainerConfig.log_config:type_name -> nerdctl.v1.LogConfig
	56,  // 7: nerdctl.v1.ContainerConfig.restart_policy:type_name -> nerdctl.v1.RestartPolicy
	57,  // 8: nerdctl.v1.ContainerConfig.platform:type_name -> nerdctl.v1.Platform
	41,  // 9: nerdctl.v1.ContainerConfig.runtime_options:type_name -> nerdctl.v1.ContainerConfig.RuntimeOptionsEntry
	42,  // 10: nerdctl.v1.NetworkSettings.networks:type_name -> nerdctl.v1.NetworkSettings.NetworksEntry
	43,  // 11: nerdctl.v1.EndpointSettings.driver_opts:type_name -> nerdctl.v1.EndpointSettings.DriverOptsEntry
	6,   // 12: nerdctl.v1.ContainerStatsDetail.cpu_stats:type_name -> nerdctl.v1.CPUStats
	9,   // 13: nerdctl.v1.ContainerStatsDetail.memory_stats:type_name -> nerdctl.v1.MemoryStats
	11,  // 14: nerdctl.v1.ContainerStatsDetail.network_stats:type_name -> nerdctl.v1.NetworkStats
	13,  // 15: nerdctl.v1.ContainerStatsDetail.blkio_stats:type_name -> nerdctl.v1.BlockIOStats
	15,  // 16: nerdctl.v1.ContainerStatsDetail.pids_stats:type_name -> nerdctl.v1.PidsStats
	58,  // 17: nerdctl.v1.ContainerStatsDetail.timestamp:type_name -> google.protobuf.Timestamp
	7,   // 18: nerdctl.v1.CPUStats.cpu_usage:type_name -> nerdctl.v1.CPUUsage
	8,   // 19: nerdctl.v1.CPUStats.throttling_data:type_name -> nerdctl.v1.ThrottlingData
	10,  // 20: nerdctl.v1.MemoryStats.stats:type_name -> nerdctl.v1.MemoryDetails
	44,  // 21: nerdctl.v1.NetworkStats.interfaces:type_name -> nerdctl.v1.NetworkStats.InterfacesEntry
	14,  // 22: nerdctl.v1.BlockIOStats.io_service_bytes_recursive:type_name -> nerdctl.v1.BlkioStatEntry
	14,  // 23: nerdctl.v1.BlockIOStats.io_serviced_recursive:type_name -> nerdctl.v1.BlkioStatEntry
	14,  // 24: nerdctl.v1.BlockIOStats.io_queued_recursive:type_name -> nerdctl.v1.BlkioStatEntry
	14,  // 25: nerdctl.v1.BlockIOStats.io_service_time_recursive:type_name -> nerdctl.v1.BlkioStatEntry
	14,  // 26: nerdctl.v1.BlockIOStats.io_wait_time_recursive:type_name -> nerdctl.v1.BlkioStatEntry
	14,  // 27: nerdctl.v1.BlockIOStats.io_merged_recursive:type_name -> nerdctl.v1.BlkioStatEntry
	14,  // 28: nerdctl.v1.BlockIOStats.io_time_recursive:type_name -> nerdctl.v1.BlkioStatEntry
	14,  // 29: nerdctl.v1.BlockIOStats.sectors_recursive:type_name -> nerdctl.v1.BlkioStatEntry
	18,  // 30: nerdctl.v1.ContainerTopInfo.processes:type_name -> nerdctl.v1.ProcessInfo
	21,  // 31: nerdctl.v1.ContainerHealthInfo.log:type_name -> nerdctl.v1.HealthCheckResult
	58,  // 32: nerdctl.v1.HealthCheckResult.start:type_name -> google.protobuf.Timestamp
	58,  // 33: nerdctl.v1.HealthCheckResult.end:type_name -> google.protobuf.Timestamp
	45,  // 34: nerdctl.v1.BatchContainerRequest.options:type_name -> nerdctl.v1.BatchContainerRequest.OptionsEntry
	24,  // 35: nerdctl.v1.BatchContainerResponse.results:type_name -> nerdctl.v1.BatchOperationResult
	58,  // 36: nerdctl.v1.ContainerEvent.timestamp:type_name -> google.protobuf.Timestamp
	46,  // 37: nerdctl.v1.ContainerEvent.attributes:type_name -> nerdctl.v1.ContainerEvent.AttributesEntry
	58,  // 38: nerdctl.v1.MonitorContainersRequest.since:type_name -> google.protobuf.Timestamp
	58,  // 39: nerdctl.v1.MonitorContainersRequest.until:type_name -> google.protobuf.Timestamp
	47,  // 40: nerdctl.v1.MonitorContainersRequest.filters:type_name -> nerdctl.v1.MonitorContainersRequest.FiltersEntry
	17,  // 41: nerdctl.v1.GetContainerTopResponse.top_info:type_name -> nerdctl.v1.ContainerTopInfo
	19,  // 42: nerdctl.v1.GetContainerPortResponse.ports:type_name -> nerdctl.v1.ContainerPortInfo
	20,  // 43: nerdctl.v1.HealthCheckContainerResponse.health_info:type_name -> nerdctl.v1.ContainerHealthInfo
	0,   // 44: nerdctl.v1.CreateContainerRequestExtended.config:type_name -> nerdctl.v1.ContainerConfig
	59,  // 45: nerdctl.v1.CreateContainerResponseExtended.container_info:type_name -> nerdctl.v1.ContainerInfo
	0,   // 46: nerdctl.v1.RunContainerRequestExtended.config:type_name -> nerdctl.v1.ContainerConfig
	48,  // 47: nerdctl.v1.RunContainerRequestExtended.env_file:type_name -> nerdctl.v1.RunContainerRequestExtended.EnvFileEntry
	59,  // 48: nerdctl.v1.RunContainerResponseExtended.container_info:type_name -> nerdctl.v1.ContainerInfo
	49,  // 49: nerdctl.v1.ListContainersRequestExtended.filters:type_name -> nerdctl.v1.ListContainersRequestExtended.FiltersEntry
	59,  // 50: nerdctl.v1.ListContainersResponseExtended.containers:type_name -> nerdctl.v1.ContainerInfo
	59,  // 51: nerdctl.v1.InspectContainerResponseExtended.container_info:type_name -> nerdctl.v1.ContainerInfo
	60,  // 52: nerdctl.v1.InspectContainerResponseExtended.raw_data:type_name -> google.protobuf.Struct
	3,   // 53: nerdctl.v1.NetworkSettings.NetworksEntry.value:type_name -> nerdctl.v1.EndpointSettings
	12,  // 54: nerdctl.v1.NetworkStats.InterfacesEntry.value:type_name -> nerdctl.v1.InterfaceStats
	61,  // 55: nerdctl.v1.ContainerServiceExtended.CreateContainer:input_type -> nerdctl.v1.CreateContainerRequest
	62,  // 56: nerdctl.v1.ContainerServiceExtended.StartContainer:input_type -> nerdctl.v1.StartContainerRequest
	63,  // 57: nerdctl.v1.ContainerServiceExtended.StopContainer:input_type -> nerdctl.v1.StopContainerRequest
	64,  // 58: nerdctl.v1.ContainerServiceExtended.RestartContainer:input_type -> nerdctl.v1.RestartContainerRequest
	65,  // 59: nerdctl.v1.ContainerServiceExtended.RemoveContainer:input_type -> nerdctl.v1.RemoveContainerRequest
	66,  // 60: nerdctl.v1.ContainerServiceExtended.KillContainer:input_type -> nerdctl.v1.KillContainerRequest
	67,  // 61: nerdctl.v1.ContainerServiceExtended.PauseContainer:input_type -> nerdctl.v1.PauseContainerRequest
	68,  // 62: nerdctl.v1.ContainerServiceExtended.UnpauseContainer:input_type -> nerdctl.v1.UnpauseContainerRequest
	69,  // 63: nerdctl.v1.ContainerServiceExtended.RunContainer:input_type -> nerdctl.v1.RunContainerRequest
	69,  // 64: nerdctl.v1.ContainerServiceExtended.RunContainerStream:input_type -> nerdctl.v1.RunContainerRequest
	70,  // 65: nerdctl.v1.ContainerServiceExtended.ListContainers:input_type -> nerdctl.v1.ListContainersRequest
	71,  // 66: nerdctl.v1.ContainerServiceExtended.InspectContainer:input_type -> nerdctl.v1.InspectContainerRequest
	72,  // 67: nerdctl.v1.ContainerServiceExtended.GetContainerLogs:input_type -> nerdctl.v1.GetContainerLogsRequest
	73,  // 68: nerdctl.v1.ContainerServiceExtended.AttachContainer:input_type -> nerdctl.v1.AttachContainerRequest
	74,  // 69: nerdctl.v1.ContainerServiceExtended.ExecContainer:input_type -> nerdctl.v1.ExecContainerRequest
	75,  // 70: nerdctl.v1.ContainerServiceExtended.ExecContainerStream:input_type -> nerdctl.v1.ExecContainerStreamRequest
	76,  // 71: nerdctl.v1.ContainerServiceExtended.GetContainerStats:input_type -> nerdctl.v1.GetContainerStatsRequest
	77,  // 72: nerdctl.v1.ContainerServiceExtended.WaitContainer:input_type -> nerdctl.v1.WaitContainerRequest
	78,  // 73: nerdctl.v1.ContainerServiceExtended.RenameContainer:input_type -> nerdctl.v1.RenameContainerRequest
	79,  // 74: nerdctl.v1.ContainerServiceExtended.UpdateContainer:input_type -> nerdctl.v1.UpdateContainerRequest
	80,  // 75: nerdctl.v1.ContainerServiceExtended.CopyToContainer:input_type -> nerdctl.v1.CopyToContainerRequest
	81,  // 76: nerdctl.v1.ContainerServiceExtended.CopyFromContainer:input_type -> nerdctl.v1.CopyFromContainerRequest
	82,  // 77: nerdctl.v1.ContainerServiceExtended.ExportContainer:input_type -> nerdctl.v1.ExportContainerRequest
	83,  // 78: nerdctl.v1.ContainerServiceExtended.DiffContainer:input_type -> nerdctl.v1.DiffContainerRequest
	84,  // 79: nerdctl.v1.ContainerServiceExtended.CommitContainer:input_type -> nerdctl.v1.CommitContainerRequest
	85,  // 80: nerdctl.v1.ContainerServiceExtended.PruneContainers:input_type -> nerdctl.v1.PruneContainersRequest
	27,  // 81: nerdctl.v1.ContainerServiceExtended.GetContainerTop:input_type -> nerdctl.v1.GetContainerTopRequest
	29,  // 82: nerdctl.v1.ContainerServiceExtended.GetContainerPort:input_type -> nerdctl.v1.GetContainerPortRequest
	31,  // 83: nerdctl.v1.ContainerServiceExtended.HealthCheckContainer:input_type -> nerdctl.v1.HealthCheckContainerRequest
	22,  // 84: nerdctl.v1.ContainerServiceExtended.BatchContainerOperation:input_type -> nerdctl.v1.BatchContainerRequest
	26,  // 85: nerdctl.v1.ContainerServiceExtended.MonitorContainers:input_type -> nerdctl.v1.MonitorContainersRequest
	86,  // 86: nerdctl.v1.ContainerServiceExtended.CreateContainer:output_type -> nerdctl.v1.CreateContainerResponse
	87,  // 87: nerdctl.v1.ContainerServiceExtended.StartContainer:output_type -> nerdctl.v1.StartContainerResponse
	88,  // 88: nerdctl.v1.ContainerServiceExtended.StopContainer:output_type -> nerdctl.v1.StopContainerResponse
	89,  // 89: nerdctl.v1.ContainerServiceExtended.RestartContainer:output_type -> nerdctl.v1.RestartContainerResponse
	90,  // 90: nerdctl.v1.ContainerServiceExtended.RemoveContainer:output_type -> nerdctl.v1.RemoveContainerResponse
	91,  // 91: nerdctl.v1.ContainerServiceExtended.KillContainer:output_type -> nerdctl.v1.KillContainerResponse
	92,  // 92: nerdctl.v1.ContainerServiceExtended.PauseContainer:output_type -> nerdctl.v1.PauseContainerResponse
	93,  // 93: nerdctl.v1.ContainerServiceExtended.UnpauseContainer:output_type -> nerdctl.v1.UnpauseContainerResponse
	94,  // 94: nerdctl.v1.ContainerServiceExtended.RunContainer:output_type -> nerdctl.v1.RunContainerResponse
	95,  // 95: nerdctl.v1.ContainerServiceExtended.RunContainerStream:output_type -> nerdctl.v1.RunContainerStreamResponse
	96,  // 96: nerdctl.v1.ContainerServiceExtended.ListContainers:output_type -> nerdctl.v1.ListContainersResponse
	97,  // 97: nerdctl.v1.ContainerServiceExtended.InspectContainer:output_type -> nerdctl.v1.InspectContainerResponse
	98,  // 98: nerdctl.v1.ContainerServiceExtended.GetContainerLogs:output_type -> nerdctl.v1.LogEntry
	99,  // 99: nerdctl.v1.ContainerServiceExtended.AttachContainer:output_type -> nerdctl.v1.AttachContainerResponse
	100, // 100: nerdctl.v1.ContainerServiceExtended.ExecContainer:output_type -> nerdctl.v1.ExecContainerResponse
	101, // 101: nerdctl.v1.ContainerServiceExtended.ExecContainerStream:output_type -> nerdctl.v1.ExecContainerStreamResponse
	102, // 102: nerdctl.v1.ContainerServiceExtended.GetContainerStats:output_type -> nerdctl.v1.ContainerStats
	103, // 103: nerdctl.v1.ContainerServiceExtended.WaitContainer:output_type -> nerdctl.v1.WaitContainerResponse
	104, // 104: nerdctl.v1.ContainerServiceExtended.RenameContainer:output_type -> nerdctl.v1.RenameContainerResponse
	105, // 105: nerdctl.v1.ContainerServiceExtended.UpdateContainer:output_type -> nerdctl.v1.UpdateContainerResponse
	106, // 106: nerdctl.v1.ContainerServiceExtended.CopyToContainer:output_type -> nerdctl.v1.CopyToContainerResponse
	107, // 107: nerdctl.v1.ContainerServiceExtended.CopyFromContainer:output_type -> nerdctl.v1.CopyFromContainerResponse
	108, // 108: nerdctl.v1.ContainerServiceExtended.ExportContainer:output_type -> nerdctl.v1.ExportContainerResponse
	109, // 109: nerdctl.v1.ContainerServiceExtended.DiffContainer:output_type -> nerdctl.v1.DiffContainerResponse
	110, // 110: nerdctl.v1.ContainerServiceExtended.CommitContainer:output_type -> nerdctl.v1.CommitContainerResponse
	111, // 111: nerdctl.v1.ContainerServiceExtended.PruneContainers:output_type -> nerdctl.v1.PruneContainersResponse
	28,  // 112: nerdctl.v1.ContainerServiceExtended.GetContainerTop:output_type -> nerdctl.v1.GetContainerTopResponse
	30,  // 113: nerdctl.v1.ContainerServiceExtended.GetContainerPort:output_type -> nerdctl.v1.GetContainerPortResponse
	32,  // 114: nerdctl.v1.ContainerServiceExtended.HealthCheckContainer:output_type -> nerdctl.v1.HealthCheckContainerResponse
	23,  // 115: nerdctl.v1.ContainerServiceExtended.BatchContainerOperation:output_type -> nerdctl.v1.BatchContainerResponse
	25,  // 116: nerdctl.v1.ContainerServiceExtended.MonitorContainers:output_type -> nerdctl.v1.ContainerEvent
	86,  // [86:117] is the sub-list for method output_type
	55,  // [55:86] is the sub-list for method input_type
	55,  // [55:55] is the sub-list for extension type_name
	55,  // [55:55] is the sub-list for extension extendee
	0,   // [0:55] is the sub-list for field type_name
}

func init() { file_api_proto_container_service_extended_proto_init() }
func file_api_proto_container_service_extended_proto_init() {
	if File_api_proto_container_service_extended_proto != nil {
		return
	}
	file_api_proto_common_proto_init()
	file_api_proto_container_service_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_container_service_extended_proto_rawDesc), len(file_api_proto_container_service_extended_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_container_service_extended_proto_goTypes,
		DependencyIndexes: file_api_proto_container_service_extended_proto_depIdxs,
		MessageInfos:      file_api_proto_container_service_extended_proto_msgTypes,
	}.Build()
	File_api_proto_container_service_extended_proto = out.File
	file_api_proto_container_service_extended_proto_goTypes = nil
	file_api_proto_container_service_extended_proto_depIdxs = nil
}
