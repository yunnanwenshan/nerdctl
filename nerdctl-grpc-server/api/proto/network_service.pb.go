// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: api/proto/network_service.proto

package proto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Network information
type NetworkInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                     // Network ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                 // Network name
	Driver        string                 `protobuf:"bytes,3,opt,name=driver,proto3" json:"driver,omitempty"`                                                                             // Network driver
	Scope         string                 `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`                                                                               // Network scope
	Options       map[string]string      `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Driver options
	Ipam          []*IPAMConfig          `protobuf:"bytes,6,rep,name=ipam,proto3" json:"ipam,omitempty"`                                                                                 // IPAM configuration
	Internal      bool                   `protobuf:"varint,7,opt,name=internal,proto3" json:"internal,omitempty"`                                                                        // Internal network
	Attachable    bool                   `protobuf:"varint,8,opt,name=attachable,proto3" json:"attachable,omitempty"`                                                                    // Attachable to containers
	Ingress       bool                   `protobuf:"varint,9,opt,name=ingress,proto3" json:"ingress,omitempty"`                                                                          // Ingress network
	Created       *timestamp.Timestamp   `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty"`                                                                          // Creation time
	Labels        map[string]string      `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`  // Network labels
	Containers    []*NetworkContainer    `protobuf:"bytes,12,rep,name=containers,proto3" json:"containers,omitempty"`                                                                    // Connected containers
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInfo) Reset() {
	*x = NetworkInfo{}
	mi := &file_api_proto_network_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInfo) ProtoMessage() {}

func (x *NetworkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInfo.ProtoReflect.Descriptor instead.
func (*NetworkInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NetworkInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInfo) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *NetworkInfo) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *NetworkInfo) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *NetworkInfo) GetIpam() []*IPAMConfig {
	if x != nil {
		return x.Ipam
	}
	return nil
}

func (x *NetworkInfo) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *NetworkInfo) GetAttachable() bool {
	if x != nil {
		return x.Attachable
	}
	return false
}

func (x *NetworkInfo) GetIngress() bool {
	if x != nil {
		return x.Ingress
	}
	return false
}

func (x *NetworkInfo) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *NetworkInfo) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *NetworkInfo) GetContainers() []*NetworkContainer {
	if x != nil {
		return x.Containers
	}
	return nil
}

type IPAMConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subnet        string                 `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`                                                                                                           // Subnet CIDR
	Gateway       string                 `protobuf:"bytes,2,opt,name=gateway,proto3" json:"gateway,omitempty"`                                                                                                         // Gateway IP
	IpRange       string                 `protobuf:"bytes,3,opt,name=ip_range,json=ipRange,proto3" json:"ip_range,omitempty"`                                                                                          // IP range
	AuxAddresses  map[string]string      `protobuf:"bytes,4,rep,name=aux_addresses,json=auxAddresses,proto3" json:"aux_addresses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Auxiliary addresses
	Options       map[string]string      `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                               // IPAM options
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPAMConfig) Reset() {
	*x = IPAMConfig{}
	mi := &file_api_proto_network_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPAMConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAMConfig) ProtoMessage() {}

func (x *IPAMConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAMConfig.ProtoReflect.Descriptor instead.
func (*IPAMConfig) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{1}
}

func (x *IPAMConfig) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

func (x *IPAMConfig) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *IPAMConfig) GetIpRange() string {
	if x != nil {
		return x.IpRange
	}
	return ""
}

func (x *IPAMConfig) GetAuxAddresses() map[string]string {
	if x != nil {
		return x.AuxAddresses
	}
	return nil
}

func (x *IPAMConfig) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type NetworkContainer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`                                                    // Container ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                     // Container name
	Ipv4Address   string                 `protobuf:"bytes,3,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`                                                    // IPv4 address
	Ipv6Address   string                 `protobuf:"bytes,4,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`                                                    // IPv6 address
	MacAddress    string                 `protobuf:"bytes,5,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`                                                       // MAC address
	Endpoints     map[string]string      `protobuf:"bytes,6,rep,name=endpoints,proto3" json:"endpoints,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Network endpoints
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkContainer) Reset() {
	*x = NetworkContainer{}
	mi := &file_api_proto_network_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkContainer) ProtoMessage() {}

func (x *NetworkContainer) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkContainer.ProtoReflect.Descriptor instead.
func (*NetworkContainer) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{2}
}

func (x *NetworkContainer) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *NetworkContainer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkContainer) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *NetworkContainer) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *NetworkContainer) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkContainer) GetEndpoints() map[string]string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

// Create network request/response
type CreateNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                 // Network name
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                       // Containerd namespace
	Driver        string                 `protobuf:"bytes,3,opt,name=driver,proto3" json:"driver,omitempty"`                                                                             // Network driver (bridge, macvlan, etc.)
	Ipam          []*IPAMConfig          `protobuf:"bytes,4,rep,name=ipam,proto3" json:"ipam,omitempty"`                                                                                 // IPAM configuration
	Internal      bool                   `protobuf:"varint,5,opt,name=internal,proto3" json:"internal,omitempty"`                                                                        // Internal network
	Attachable    bool                   `protobuf:"varint,6,opt,name=attachable,proto3" json:"attachable,omitempty"`                                                                    // Attachable to containers
	Ingress       bool                   `protobuf:"varint,7,opt,name=ingress,proto3" json:"ingress,omitempty"`                                                                          // Ingress network
	Ipv6          bool                   `protobuf:"varint,8,opt,name=ipv6,proto3" json:"ipv6,omitempty"`                                                                                // Enable IPv6
	Options       map[string]string      `protobuf:"bytes,9,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Driver options
	Labels        map[string]string      `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`  // Network labels
	AuxAddresses  []string               `protobuf:"bytes,11,rep,name=aux_addresses,json=auxAddresses,proto3" json:"aux_addresses,omitempty"`                                            // Auxiliary addresses
	ConfigFile    string                 `protobuf:"bytes,12,opt,name=config_file,json=configFile,proto3" json:"config_file,omitempty"`                                                  // CNI config file path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkRequest) Reset() {
	*x = CreateNetworkRequest{}
	mi := &file_api_proto_network_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkRequest) ProtoMessage() {}

func (x *CreateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkRequest.ProtoReflect.Descriptor instead.
func (*CreateNetworkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNetworkRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNetworkRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateNetworkRequest) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *CreateNetworkRequest) GetIpam() []*IPAMConfig {
	if x != nil {
		return x.Ipam
	}
	return nil
}

func (x *CreateNetworkRequest) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *CreateNetworkRequest) GetAttachable() bool {
	if x != nil {
		return x.Attachable
	}
	return false
}

func (x *CreateNetworkRequest) GetIngress() bool {
	if x != nil {
		return x.Ingress
	}
	return false
}

func (x *CreateNetworkRequest) GetIpv6() bool {
	if x != nil {
		return x.Ipv6
	}
	return false
}

func (x *CreateNetworkRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreateNetworkRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateNetworkRequest) GetAuxAddresses() []string {
	if x != nil {
		return x.AuxAddresses
	}
	return nil
}

func (x *CreateNetworkRequest) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

type CreateNetworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"` // Created network ID
	Warnings      []string               `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`                    // Warning messages
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkResponse) Reset() {
	*x = CreateNetworkResponse{}
	mi := &file_api_proto_network_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkResponse) ProtoMessage() {}

func (x *CreateNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkResponse.ProtoReflect.Descriptor instead.
func (*CreateNetworkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateNetworkResponse) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *CreateNetworkResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// Remove network request/response
type RemoveNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Networks      []string               `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`   // Networks to remove
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"` // Containerd namespace
	Force         bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`        // Force removal
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNetworkRequest) Reset() {
	*x = RemoveNetworkRequest{}
	mi := &file_api_proto_network_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNetworkRequest) ProtoMessage() {}

func (x *RemoveNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNetworkRequest.ProtoReflect.Descriptor instead.
func (*RemoveNetworkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveNetworkRequest) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *RemoveNetworkRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RemoveNetworkRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type RemoveNetworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Removed       []string               `protobuf:"bytes,1,rep,name=removed,proto3" json:"removed,omitempty"` // Removed network IDs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNetworkResponse) Reset() {
	*x = RemoveNetworkResponse{}
	mi := &file_api_proto_network_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNetworkResponse) ProtoMessage() {}

func (x *RemoveNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNetworkResponse.ProtoReflect.Descriptor instead.
func (*RemoveNetworkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveNetworkResponse) GetRemoved() []string {
	if x != nil {
		return x.Removed
	}
	return nil
}

// List networks request/response
type ListNetworksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                       // Containerd namespace
	Filters       map[string]string      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Filters (name, driver, etc.)
	Quiet         bool                   `protobuf:"varint,3,opt,name=quiet,proto3" json:"quiet,omitempty"`                                                                              // Only show network IDs
	Format        string                 `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`                                                                             // Output format
	NoTrunc       bool                   `protobuf:"varint,5,opt,name=no_trunc,json=noTrunc,proto3" json:"no_trunc,omitempty"`                                                           // Don't truncate output
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksRequest) Reset() {
	*x = ListNetworksRequest{}
	mi := &file_api_proto_network_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksRequest) ProtoMessage() {}

func (x *ListNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksRequest.ProtoReflect.Descriptor instead.
func (*ListNetworksRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListNetworksRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListNetworksRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListNetworksRequest) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *ListNetworksRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *ListNetworksRequest) GetNoTrunc() bool {
	if x != nil {
		return x.NoTrunc
	}
	return false
}

type ListNetworksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Networks      []*NetworkInfo         `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"` // Network list
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksResponse) Reset() {
	*x = ListNetworksResponse{}
	mi := &file_api_proto_network_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksResponse) ProtoMessage() {}

func (x *ListNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksResponse.ProtoReflect.Descriptor instead.
func (*ListNetworksResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListNetworksResponse) GetNetworks() []*NetworkInfo {
	if x != nil {
		return x.Networks
	}
	return nil
}

// Inspect network request/response
type InspectNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`     // Network ID or name
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"` // Containerd namespace
	Format        string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`       // Output format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectNetworkRequest) Reset() {
	*x = InspectNetworkRequest{}
	mi := &file_api_proto_network_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectNetworkRequest) ProtoMessage() {}

func (x *InspectNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectNetworkRequest.ProtoReflect.Descriptor instead.
func (*InspectNetworkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{9}
}

func (x *InspectNetworkRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *InspectNetworkRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *InspectNetworkRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type InspectNetworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       *NetworkInfo           `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"` // Network information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectNetworkResponse) Reset() {
	*x = InspectNetworkResponse{}
	mi := &file_api_proto_network_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectNetworkResponse) ProtoMessage() {}

func (x *InspectNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectNetworkResponse.ProtoReflect.Descriptor instead.
func (*InspectNetworkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{10}
}

func (x *InspectNetworkResponse) GetNetwork() *NetworkInfo {
	if x != nil {
		return x.Network
	}
	return nil
}

// Connect network request/response
type ConnectNetworkRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Network        string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`                                     // Network ID or name
	Container      string                 `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`                                 // Container ID or name
	Namespace      string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`                                 // Containerd namespace
	EndpointConfig *NetworkEndpointConfig `protobuf:"bytes,4,opt,name=endpoint_config,json=endpointConfig,proto3" json:"endpoint_config,omitempty"` // Endpoint configuration
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConnectNetworkRequest) Reset() {
	*x = ConnectNetworkRequest{}
	mi := &file_api_proto_network_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectNetworkRequest) ProtoMessage() {}

func (x *ConnectNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectNetworkRequest.ProtoReflect.Descriptor instead.
func (*ConnectNetworkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{11}
}

func (x *ConnectNetworkRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ConnectNetworkRequest) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *ConnectNetworkRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConnectNetworkRequest) GetEndpointConfig() *NetworkEndpointConfig {
	if x != nil {
		return x.EndpointConfig
	}
	return nil
}

type NetworkEndpointConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ipv4Address   string                 `protobuf:"bytes,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`                                                                        // IPv4 address
	Ipv6Address   string                 `protobuf:"bytes,2,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`                                                                        // IPv6 address
	Aliases       []string               `protobuf:"bytes,3,rep,name=aliases,proto3" json:"aliases,omitempty"`                                                                                                   // Network aliases
	Links         []string               `protobuf:"bytes,4,rep,name=links,proto3" json:"links,omitempty"`                                                                                                       // Container links
	DriverOpts    map[string]string      `protobuf:"bytes,5,rep,name=driver_opts,json=driverOpts,proto3" json:"driver_opts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Driver options
	MacAddress    string                 `protobuf:"bytes,6,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`                                                                           // MAC address
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkEndpointConfig) Reset() {
	*x = NetworkEndpointConfig{}
	mi := &file_api_proto_network_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEndpointConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEndpointConfig) ProtoMessage() {}

func (x *NetworkEndpointConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEndpointConfig.ProtoReflect.Descriptor instead.
func (*NetworkEndpointConfig) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{12}
}

func (x *NetworkEndpointConfig) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *NetworkEndpointConfig) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *NetworkEndpointConfig) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *NetworkEndpointConfig) GetLinks() []string {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *NetworkEndpointConfig) GetDriverOpts() map[string]string {
	if x != nil {
		return x.DriverOpts
	}
	return nil
}

func (x *NetworkEndpointConfig) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

type ConnectNetworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connected     bool                   `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"` // Whether container was connected
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectNetworkResponse) Reset() {
	*x = ConnectNetworkResponse{}
	mi := &file_api_proto_network_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectNetworkResponse) ProtoMessage() {}

func (x *ConnectNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectNetworkResponse.ProtoReflect.Descriptor instead.
func (*ConnectNetworkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{13}
}

func (x *ConnectNetworkResponse) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

// Disconnect network request/response
type DisconnectNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`     // Network ID or name
	Container     string                 `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"` // Container ID or name
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"` // Containerd namespace
	Force         bool                   `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`        // Force disconnection
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectNetworkRequest) Reset() {
	*x = DisconnectNetworkRequest{}
	mi := &file_api_proto_network_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectNetworkRequest) ProtoMessage() {}

func (x *DisconnectNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectNetworkRequest.ProtoReflect.Descriptor instead.
func (*DisconnectNetworkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{14}
}

func (x *DisconnectNetworkRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DisconnectNetworkRequest) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *DisconnectNetworkRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DisconnectNetworkRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type DisconnectNetworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Disconnected  bool                   `protobuf:"varint,1,opt,name=disconnected,proto3" json:"disconnected,omitempty"` // Whether container was disconnected
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectNetworkResponse) Reset() {
	*x = DisconnectNetworkResponse{}
	mi := &file_api_proto_network_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectNetworkResponse) ProtoMessage() {}

func (x *DisconnectNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectNetworkResponse.ProtoReflect.Descriptor instead.
func (*DisconnectNetworkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{15}
}

func (x *DisconnectNetworkResponse) GetDisconnected() bool {
	if x != nil {
		return x.Disconnected
	}
	return false
}

// Prune networks request/response
type PruneNetworksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                       // Containerd namespace
	Filters       map[string]string      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Filters for pruning
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PruneNetworksRequest) Reset() {
	*x = PruneNetworksRequest{}
	mi := &file_api_proto_network_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PruneNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PruneNetworksRequest) ProtoMessage() {}

func (x *PruneNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PruneNetworksRequest.ProtoReflect.Descriptor instead.
func (*PruneNetworksRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{16}
}

func (x *PruneNetworksRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PruneNetworksRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

type PrunedNetwork struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"` // Pruned network ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                            // Network name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrunedNetwork) Reset() {
	*x = PrunedNetwork{}
	mi := &file_api_proto_network_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrunedNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrunedNetwork) ProtoMessage() {}

func (x *PrunedNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrunedNetwork.ProtoReflect.Descriptor instead.
func (*PrunedNetwork) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{17}
}

func (x *PrunedNetwork) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *PrunedNetwork) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PruneNetworksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pruned        []*PrunedNetwork       `protobuf:"bytes,1,rep,name=pruned,proto3" json:"pruned,omitempty"` // Pruned networks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PruneNetworksResponse) Reset() {
	*x = PruneNetworksResponse{}
	mi := &file_api_proto_network_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PruneNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PruneNetworksResponse) ProtoMessage() {}

func (x *PruneNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PruneNetworksResponse.ProtoReflect.Descriptor instead.
func (*PruneNetworksResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_proto_rawDescGZIP(), []int{18}
}

func (x *PruneNetworksResponse) GetPruned() []*PrunedNetwork {
	if x != nil {
		return x.Pruned
	}
	return nil
}

var File_api_proto_network_service_proto protoreflect.FileDescriptor

const file_api_proto_network_service_proto_rawDesc = "" +
	"\n" +
	"\x1fapi/proto/network_service.proto\x12\n" +
	"nerdctl.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x16api/proto/common.proto\"\xc9\x04\n" +
	"\vNetworkInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06driver\x18\x03 \x01(\tR\x06driver\x12\x14\n" +
	"\x05scope\x18\x04 \x01(\tR\x05scope\x12>\n" +
	"\aoptions\x18\x05 \x03(\v2$.nerdctl.v1.NetworkInfo.OptionsEntryR\aoptions\x12*\n" +
	"\x04ipam\x18\x06 \x03(\v2\x16.nerdctl.v1.IPAMConfigR\x04ipam\x12\x1a\n" +
	"\binternal\x18\a \x01(\bR\binternal\x12\x1e\n" +
	"\n" +
	"attachable\x18\b \x01(\bR\n" +
	"attachable\x12\x18\n" +
	"\aingress\x18\t \x01(\bR\aingress\x124\n" +
	"\acreated\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x12;\n" +
	"\x06labels\x18\v \x03(\v2#.nerdctl.v1.NetworkInfo.LabelsEntryR\x06labels\x12<\n" +
	"\n" +
	"containers\x18\f \x03(\v2\x1c.nerdctl.v1.NetworkContainerR\n" +
	"containers\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe4\x02\n" +
	"\n" +
	"IPAMConfig\x12\x16\n" +
	"\x06subnet\x18\x01 \x01(\tR\x06subnet\x12\x18\n" +
	"\agateway\x18\x02 \x01(\tR\agateway\x12\x19\n" +
	"\bip_range\x18\x03 \x01(\tR\aipRange\x12M\n" +
	"\raux_addresses\x18\x04 \x03(\v2(.nerdctl.v1.IPAMConfig.AuxAddressesEntryR\fauxAddresses\x12=\n" +
	"\aoptions\x18\x05 \x03(\v2#.nerdctl.v1.IPAMConfig.OptionsEntryR\aoptions\x1a?\n" +
	"\x11AuxAddressesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb9\x02\n" +
	"\x10NetworkContainer\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fipv4_address\x18\x03 \x01(\tR\vipv4Address\x12!\n" +
	"\fipv6_address\x18\x04 \x01(\tR\vipv6Address\x12\x1f\n" +
	"\vmac_address\x18\x05 \x01(\tR\n" +
	"macAddress\x12I\n" +
	"\tendpoints\x18\x06 \x03(\v2+.nerdctl.v1.NetworkContainer.EndpointsEntryR\tendpoints\x1a<\n" +
	"\x0eEndpointsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc2\x04\n" +
	"\x14CreateNetworkRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06driver\x18\x03 \x01(\tR\x06driver\x12*\n" +
	"\x04ipam\x18\x04 \x03(\v2\x16.nerdctl.v1.IPAMConfigR\x04ipam\x12\x1a\n" +
	"\binternal\x18\x05 \x01(\bR\binternal\x12\x1e\n" +
	"\n" +
	"attachable\x18\x06 \x01(\bR\n" +
	"attachable\x12\x18\n" +
	"\aingress\x18\a \x01(\bR\aingress\x12\x12\n" +
	"\x04ipv6\x18\b \x01(\bR\x04ipv6\x12G\n" +
	"\aoptions\x18\t \x03(\v2-.nerdctl.v1.CreateNetworkRequest.OptionsEntryR\aoptions\x12D\n" +
	"\x06labels\x18\n" +
	" \x03(\v2,.nerdctl.v1.CreateNetworkRequest.LabelsEntryR\x06labels\x12#\n" +
	"\raux_addresses\x18\v \x03(\tR\fauxAddresses\x12\x1f\n" +
	"\vconfig_file\x18\f \x01(\tR\n" +
	"configFile\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"R\n" +
	"\x15CreateNetworkResponse\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12\x1a\n" +
	"\bwarnings\x18\x02 \x03(\tR\bwarnings\"f\n" +
	"\x14RemoveNetworkRequest\x12\x1a\n" +
	"\bnetworks\x18\x01 \x03(\tR\bnetworks\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\"1\n" +
	"\x15RemoveNetworkResponse\x12\x18\n" +
	"\aremoved\x18\x01 \x03(\tR\aremoved\"\x80\x02\n" +
	"\x13ListNetworksRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12F\n" +
	"\afilters\x18\x02 \x03(\v2,.nerdctl.v1.ListNetworksRequest.FiltersEntryR\afilters\x12\x14\n" +
	"\x05quiet\x18\x03 \x01(\bR\x05quiet\x12\x16\n" +
	"\x06format\x18\x04 \x01(\tR\x06format\x12\x19\n" +
	"\bno_trunc\x18\x05 \x01(\bR\anoTrunc\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"K\n" +
	"\x14ListNetworksResponse\x123\n" +
	"\bnetworks\x18\x01 \x03(\v2\x17.nerdctl.v1.NetworkInfoR\bnetworks\"g\n" +
	"\x15InspectNetworkRequest\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\"K\n" +
	"\x16InspectNetworkResponse\x121\n" +
	"\anetwork\x18\x01 \x01(\v2\x17.nerdctl.v1.NetworkInfoR\anetwork\"\xb9\x01\n" +
	"\x15ConnectNetworkRequest\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x1c\n" +
	"\tcontainer\x18\x02 \x01(\tR\tcontainer\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12J\n" +
	"\x0fendpoint_config\x18\x04 \x01(\v2!.nerdctl.v1.NetworkEndpointConfigR\x0eendpointConfig\"\xc1\x02\n" +
	"\x15NetworkEndpointConfig\x12!\n" +
	"\fipv4_address\x18\x01 \x01(\tR\vipv4Address\x12!\n" +
	"\fipv6_address\x18\x02 \x01(\tR\vipv6Address\x12\x18\n" +
	"\aaliases\x18\x03 \x03(\tR\aaliases\x12\x14\n" +
	"\x05links\x18\x04 \x03(\tR\x05links\x12R\n" +
	"\vdriver_opts\x18\x05 \x03(\v21.nerdctl.v1.NetworkEndpointConfig.DriverOptsEntryR\n" +
	"driverOpts\x12\x1f\n" +
	"\vmac_address\x18\x06 \x01(\tR\n" +
	"macAddress\x1a=\n" +
	"\x0fDriverOptsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"6\n" +
	"\x16ConnectNetworkResponse\x12\x1c\n" +
	"\tconnected\x18\x01 \x01(\bR\tconnected\"\x86\x01\n" +
	"\x18DisconnectNetworkRequest\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x1c\n" +
	"\tcontainer\x18\x02 \x01(\tR\tcontainer\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05force\x18\x04 \x01(\bR\x05force\"?\n" +
	"\x19DisconnectNetworkResponse\x12\"\n" +
	"\fdisconnected\x18\x01 \x01(\bR\fdisconnected\"\xb9\x01\n" +
	"\x14PruneNetworksRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12G\n" +
	"\afilters\x18\x02 \x03(\v2-.nerdctl.v1.PruneNetworksRequest.FiltersEntryR\afilters\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"B\n" +
	"\rPrunedNetwork\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"J\n" +
	"\x15PruneNetworksResponse\x121\n" +
	"\x06pruned\x18\x01 \x03(\v2\x19.nerdctl.v1.PrunedNetworkR\x06pruned2\xf9\x04\n" +
	"\x0eNetworkService\x12T\n" +
	"\rCreateNetwork\x12 .nerdctl.v1.CreateNetworkRequest\x1a!.nerdctl.v1.CreateNetworkResponse\x12T\n" +
	"\rRemoveNetwork\x12 .nerdctl.v1.RemoveNetworkRequest\x1a!.nerdctl.v1.RemoveNetworkResponse\x12Q\n" +
	"\fListNetworks\x12\x1f.nerdctl.v1.ListNetworksRequest\x1a .nerdctl.v1.ListNetworksResponse\x12W\n" +
	"\x0eInspectNetwork\x12!.nerdctl.v1.InspectNetworkRequest\x1a\".nerdctl.v1.InspectNetworkResponse\x12W\n" +
	"\x0eConnectNetwork\x12!.nerdctl.v1.ConnectNetworkRequest\x1a\".nerdctl.v1.ConnectNetworkResponse\x12`\n" +
	"\x11DisconnectNetwork\x12$.nerdctl.v1.DisconnectNetworkRequest\x1a%.nerdctl.v1.DisconnectNetworkResponse\x12T\n" +
	"\rPruneNetworks\x12 .nerdctl.v1.PruneNetworksRequest\x1a!.nerdctl.v1.PruneNetworksResponseB5Z3github.com/containerd/nerdctl-grpc-server/api/protob\x06proto3"

var (
	file_api_proto_network_service_proto_rawDescOnce sync.Once
	file_api_proto_network_service_proto_rawDescData []byte
)

func file_api_proto_network_service_proto_rawDescGZIP() []byte {
	file_api_proto_network_service_proto_rawDescOnce.Do(func() {
		file_api_proto_network_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_network_service_proto_rawDesc), len(file_api_proto_network_service_proto_rawDesc)))
	})
	return file_api_proto_network_service_proto_rawDescData
}

var file_api_proto_network_service_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_api_proto_network_service_proto_goTypes = []any{
	(*NetworkInfo)(nil),               // 0: nerdctl.v1.NetworkInfo
	(*IPAMConfig)(nil),                // 1: nerdctl.v1.IPAMConfig
	(*NetworkContainer)(nil),          // 2: nerdctl.v1.NetworkContainer
	(*CreateNetworkRequest)(nil),      // 3: nerdctl.v1.CreateNetworkRequest
	(*CreateNetworkResponse)(nil),     // 4: nerdctl.v1.CreateNetworkResponse
	(*RemoveNetworkRequest)(nil),      // 5: nerdctl.v1.RemoveNetworkRequest
	(*RemoveNetworkResponse)(nil),     // 6: nerdctl.v1.RemoveNetworkResponse
	(*ListNetworksRequest)(nil),       // 7: nerdctl.v1.ListNetworksRequest
	(*ListNetworksResponse)(nil),      // 8: nerdctl.v1.ListNetworksResponse
	(*InspectNetworkRequest)(nil),     // 9: nerdctl.v1.InspectNetworkRequest
	(*InspectNetworkResponse)(nil),    // 10: nerdctl.v1.InspectNetworkResponse
	(*ConnectNetworkRequest)(nil),     // 11: nerdctl.v1.ConnectNetworkRequest
	(*NetworkEndpointConfig)(nil),     // 12: nerdctl.v1.NetworkEndpointConfig
	(*ConnectNetworkResponse)(nil),    // 13: nerdctl.v1.ConnectNetworkResponse
	(*DisconnectNetworkRequest)(nil),  // 14: nerdctl.v1.DisconnectNetworkRequest
	(*DisconnectNetworkResponse)(nil), // 15: nerdctl.v1.DisconnectNetworkResponse
	(*PruneNetworksRequest)(nil),      // 16: nerdctl.v1.PruneNetworksRequest
	(*PrunedNetwork)(nil),             // 17: nerdctl.v1.PrunedNetwork
	(*PruneNetworksResponse)(nil),     // 18: nerdctl.v1.PruneNetworksResponse
	nil,                               // 19: nerdctl.v1.NetworkInfo.OptionsEntry
	nil,                               // 20: nerdctl.v1.NetworkInfo.LabelsEntry
	nil,                               // 21: nerdctl.v1.IPAMConfig.AuxAddressesEntry
	nil,                               // 22: nerdctl.v1.IPAMConfig.OptionsEntry
	nil,                               // 23: nerdctl.v1.NetworkContainer.EndpointsEntry
	nil,                               // 24: nerdctl.v1.CreateNetworkRequest.OptionsEntry
	nil,                               // 25: nerdctl.v1.CreateNetworkRequest.LabelsEntry
	nil,                               // 26: nerdctl.v1.ListNetworksRequest.FiltersEntry
	nil,                               // 27: nerdctl.v1.NetworkEndpointConfig.DriverOptsEntry
	nil,                               // 28: nerdctl.v1.PruneNetworksRequest.FiltersEntry
	(*timestamp.Timestamp)(nil),       // 29: google.protobuf.Timestamp
}
var file_api_proto_network_service_proto_depIdxs = []int32{
	19, // 0: nerdctl.v1.NetworkInfo.options:type_name -> nerdctl.v1.NetworkInfo.OptionsEntry
	1,  // 1: nerdctl.v1.NetworkInfo.ipam:type_name -> nerdctl.v1.IPAMConfig
	29, // 2: nerdctl.v1.NetworkInfo.created:type_name -> google.protobuf.Timestamp
	20, // 3: nerdctl.v1.NetworkInfo.labels:type_name -> nerdctl.v1.NetworkInfo.LabelsEntry
	2,  // 4: nerdctl.v1.NetworkInfo.containers:type_name -> nerdctl.v1.NetworkContainer
	21, // 5: nerdctl.v1.IPAMConfig.aux_addresses:type_name -> nerdctl.v1.IPAMConfig.AuxAddressesEntry
	22, // 6: nerdctl.v1.IPAMConfig.options:type_name -> nerdctl.v1.IPAMConfig.OptionsEntry
	23, // 7: nerdctl.v1.NetworkContainer.endpoints:type_name -> nerdctl.v1.NetworkContainer.EndpointsEntry
	1,  // 8: nerdctl.v1.CreateNetworkRequest.ipam:type_name -> nerdctl.v1.IPAMConfig
	24, // 9: nerdctl.v1.CreateNetworkRequest.options:type_name -> nerdctl.v1.CreateNetworkRequest.OptionsEntry
	25, // 10: nerdctl.v1.CreateNetworkRequest.labels:type_name -> nerdctl.v1.CreateNetworkRequest.LabelsEntry
	26, // 11: nerdctl.v1.ListNetworksRequest.filters:type_name -> nerdctl.v1.ListNetworksRequest.FiltersEntry
	0,  // 12: nerdctl.v1.ListNetworksResponse.networks:type_name -> nerdctl.v1.NetworkInfo
	0,  // 13: nerdctl.v1.InspectNetworkResponse.network:type_name -> nerdctl.v1.NetworkInfo
	12, // 14: nerdctl.v1.ConnectNetworkRequest.endpoint_config:type_name -> nerdctl.v1.NetworkEndpointConfig
	27, // 15: nerdctl.v1.NetworkEndpointConfig.driver_opts:type_name -> nerdctl.v1.NetworkEndpointConfig.DriverOptsEntry
	28, // 16: nerdctl.v1.PruneNetworksRequest.filters:type_name -> nerdctl.v1.PruneNetworksRequest.FiltersEntry
	17, // 17: nerdctl.v1.PruneNetworksResponse.pruned:type_name -> nerdctl.v1.PrunedNetwork
	3,  // 18: nerdctl.v1.NetworkService.CreateNetwork:input_type -> nerdctl.v1.CreateNetworkRequest
	5,  // 19: nerdctl.v1.NetworkService.RemoveNetwork:input_type -> nerdctl.v1.RemoveNetworkRequest
	7,  // 20: nerdctl.v1.NetworkService.ListNetworks:input_type -> nerdctl.v1.ListNetworksRequest
	9,  // 21: nerdctl.v1.NetworkService.InspectNetwork:input_type -> nerdctl.v1.InspectNetworkRequest
	11, // 22: nerdctl.v1.NetworkService.ConnectNetwork:input_type -> nerdctl.v1.ConnectNetworkRequest
	14, // 23: nerdctl.v1.NetworkService.DisconnectNetwork:input_type -> nerdctl.v1.DisconnectNetworkRequest
	16, // 24: nerdctl.v1.NetworkService.PruneNetworks:input_type -> nerdctl.v1.PruneNetworksRequest
	4,  // 25: nerdctl.v1.NetworkService.CreateNetwork:output_type -> nerdctl.v1.CreateNetworkResponse
	6,  // 26: nerdctl.v1.NetworkService.RemoveNetwork:output_type -> nerdctl.v1.RemoveNetworkResponse
	8,  // 27: nerdctl.v1.NetworkService.ListNetworks:output_type -> nerdctl.v1.ListNetworksResponse
	10, // 28: nerdctl.v1.NetworkService.InspectNetwork:output_type -> nerdctl.v1.InspectNetworkResponse
	13, // 29: nerdctl.v1.NetworkService.ConnectNetwork:output_type -> nerdctl.v1.ConnectNetworkResponse
	15, // 30: nerdctl.v1.NetworkService.DisconnectNetwork:output_type -> nerdctl.v1.DisconnectNetworkResponse
	18, // 31: nerdctl.v1.NetworkService.PruneNetworks:output_type -> nerdctl.v1.PruneNetworksResponse
	25, // [25:32] is the sub-list for method output_type
	18, // [18:25] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_proto_network_service_proto_init() }
func file_api_proto_network_service_proto_init() {
	if File_api_proto_network_service_proto != nil {
		return
	}
	file_api_proto_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_network_service_proto_rawDesc), len(file_api_proto_network_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_network_service_proto_goTypes,
		DependencyIndexes: file_api_proto_network_service_proto_depIdxs,
		MessageInfos:      file_api_proto_network_service_proto_msgTypes,
	}.Build()
	File_api_proto_network_service_proto = out.File
	file_api_proto_network_service_proto_goTypes = nil
	file_api_proto_network_service_proto_depIdxs = nil
}
