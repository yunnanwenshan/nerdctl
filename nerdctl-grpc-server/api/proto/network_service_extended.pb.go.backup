// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: api/proto/network_service_extended.proto

package proto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkEndpointState int32

const (
	NetworkEndpointState_ENDPOINT_UNKNOWN  NetworkEndpointState = 0
	NetworkEndpointState_ENDPOINT_CREATING NetworkEndpointState = 1
	NetworkEndpointState_ENDPOINT_ACTIVE   NetworkEndpointState = 2
	NetworkEndpointState_ENDPOINT_INACTIVE NetworkEndpointState = 3
	NetworkEndpointState_ENDPOINT_ERROR    NetworkEndpointState = 4
	NetworkEndpointState_ENDPOINT_REMOVING NetworkEndpointState = 5
)

// Enum value maps for NetworkEndpointState.
var (
	NetworkEndpointState_name = map[int32]string{
		0: "ENDPOINT_UNKNOWN",
		1: "ENDPOINT_CREATING",
		2: "ENDPOINT_ACTIVE",
		3: "ENDPOINT_INACTIVE",
		4: "ENDPOINT_ERROR",
		5: "ENDPOINT_REMOVING",
	}
	NetworkEndpointState_value = map[string]int32{
		"ENDPOINT_UNKNOWN":  0,
		"ENDPOINT_CREATING": 1,
		"ENDPOINT_ACTIVE":   2,
		"ENDPOINT_INACTIVE": 3,
		"ENDPOINT_ERROR":    4,
		"ENDPOINT_REMOVING": 5,
	}
)

func (x NetworkEndpointState) Enum() *NetworkEndpointState {
	p := new(NetworkEndpointState)
	*p = x
	return p
}

func (x NetworkEndpointState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkEndpointState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_network_service_extended_proto_enumTypes[0].Descriptor()
}

func (NetworkEndpointState) Type() protoreflect.EnumType {
	return &file_api_proto_network_service_extended_proto_enumTypes[0]
}

func (x NetworkEndpointState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkEndpointState.Descriptor instead.
func (NetworkEndpointState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{0}
}

// Extended network information with comprehensive details
type NetworkInfoExtended struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic information
	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Driver string `protobuf:"bytes,3,opt,name=driver,proto3" json:"driver,omitempty"`
	Scope  string `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	// Network configuration
	Ipam    *IPAMConfigExtended `protobuf:"bytes,5,opt,name=ipam,proto3" json:"ipam,omitempty"`
	Options map[string]string   `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Labels  map[string]string   `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Network properties
	Internal    bool `protobuf:"varint,8,opt,name=internal,proto3" json:"internal,omitempty"`
	Attachable  bool `protobuf:"varint,9,opt,name=attachable,proto3" json:"attachable,omitempty"`
	Ingress     bool `protobuf:"varint,10,opt,name=ingress,proto3" json:"ingress,omitempty"`
	Ipv6Enabled bool `protobuf:"varint,11,opt,name=ipv6_enabled,json=ipv6Enabled,proto3" json:"ipv6_enabled,omitempty"`
	EnableIcc   bool `protobuf:"varint,12,opt,name=enable_icc,json=enableIcc,proto3" json:"enable_icc,omitempty"`
	// Timestamps
	Created *timestamp.Timestamp `protobuf:"bytes,13,opt,name=created,proto3" json:"created,omitempty"`
	Updated *timestamp.Timestamp `protobuf:"bytes,14,opt,name=updated,proto3" json:"updated,omitempty"`
	// Connected entities
	Containers []*NetworkContainerExtended `protobuf:"bytes,15,rep,name=containers,proto3" json:"containers,omitempty"`
	Endpoints  []*NetworkEndpoint          `protobuf:"bytes,16,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	// Network state
	State  *NetworkState  `protobuf:"bytes,17,opt,name=state,proto3" json:"state,omitempty"`
	Config *NetworkConfig `protobuf:"bytes,18,opt,name=config,proto3" json:"config,omitempty"`
	// Metrics and statistics
	Metrics *NetworkMetrics `protobuf:"bytes,19,opt,name=metrics,proto3" json:"metrics,omitempty"`
	// Driver-specific information
	DriverData map[string]string `protobuf:"bytes,20,rep,name=driver_data,json=driverData,proto3" json:"driver_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Network topology
	SubnetRanges     []string `protobuf:"bytes,21,rep,name=subnet_ranges,json=subnetRanges,proto3" json:"subnet_ranges,omitempty"`
	GatewayAddresses []string `protobuf:"bytes,22,rep,name=gateway_addresses,json=gatewayAddresses,proto3" json:"gateway_addresses,omitempty"`
	// Security and isolation
	FirewallRules []string `protobuf:"bytes,23,rep,name=firewall_rules,json=firewallRules,proto3" json:"firewall_rules,omitempty"`
	IsolationMode string   `protobuf:"bytes,24,opt,name=isolation_mode,json=isolationMode,proto3" json:"isolation_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInfoExtended) Reset() {
	*x = NetworkInfoExtended{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInfoExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInfoExtended) ProtoMessage() {}

func (x *NetworkInfoExtended) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInfoExtended.ProtoReflect.Descriptor instead.
func (*NetworkInfoExtended) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkInfoExtended) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NetworkInfoExtended) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInfoExtended) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *NetworkInfoExtended) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *NetworkInfoExtended) GetIpam() *IPAMConfigExtended {
	if x != nil {
		return x.Ipam
	}
	return nil
}

func (x *NetworkInfoExtended) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *NetworkInfoExtended) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *NetworkInfoExtended) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *NetworkInfoExtended) GetAttachable() bool {
	if x != nil {
		return x.Attachable
	}
	return false
}

func (x *NetworkInfoExtended) GetIngress() bool {
	if x != nil {
		return x.Ingress
	}
	return false
}

func (x *NetworkInfoExtended) GetIpv6Enabled() bool {
	if x != nil {
		return x.Ipv6Enabled
	}
	return false
}

func (x *NetworkInfoExtended) GetEnableIcc() bool {
	if x != nil {
		return x.EnableIcc
	}
	return false
}

func (x *NetworkInfoExtended) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *NetworkInfoExtended) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *NetworkInfoExtended) GetContainers() []*NetworkContainerExtended {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *NetworkInfoExtended) GetEndpoints() []*NetworkEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *NetworkInfoExtended) GetState() *NetworkState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *NetworkInfoExtended) GetConfig() *NetworkConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *NetworkInfoExtended) GetMetrics() *NetworkMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *NetworkInfoExtended) GetDriverData() map[string]string {
	if x != nil {
		return x.DriverData
	}
	return nil
}

func (x *NetworkInfoExtended) GetSubnetRanges() []string {
	if x != nil {
		return x.SubnetRanges
	}
	return nil
}

func (x *NetworkInfoExtended) GetGatewayAddresses() []string {
	if x != nil {
		return x.GatewayAddresses
	}
	return nil
}

func (x *NetworkInfoExtended) GetFirewallRules() []string {
	if x != nil {
		return x.FirewallRules
	}
	return nil
}

func (x *NetworkInfoExtended) GetIsolationMode() string {
	if x != nil {
		return x.IsolationMode
	}
	return ""
}

type IPAMConfigExtended struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Driver     string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Subnets    []*IPAMSubnet          `protobuf:"bytes,2,rep,name=subnets,proto3" json:"subnets,omitempty"`
	Options    map[string]string      `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DriverOpts map[string]string      `protobuf:"bytes,4,rep,name=driver_opts,json=driverOpts,proto3" json:"driver_opts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Advanced IPAM configuration
	EnableDhcp     bool     `protobuf:"varint,5,opt,name=enable_dhcp,json=enableDhcp,proto3" json:"enable_dhcp,omitempty"`
	DhcpRangeStart string   `protobuf:"bytes,6,opt,name=dhcp_range_start,json=dhcpRangeStart,proto3" json:"dhcp_range_start,omitempty"`
	DhcpRangeEnd   string   `protobuf:"bytes,7,opt,name=dhcp_range_end,json=dhcpRangeEnd,proto3" json:"dhcp_range_end,omitempty"`
	ReservedIps    []string `protobuf:"bytes,8,rep,name=reserved_ips,json=reservedIps,proto3" json:"reserved_ips,omitempty"`
	DnsServer      string   `protobuf:"bytes,9,opt,name=dns_server,json=dnsServer,proto3" json:"dns_server,omitempty"`
	DnsSearch      []string `protobuf:"bytes,10,rep,name=dns_search,json=dnsSearch,proto3" json:"dns_search,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *IPAMConfigExtended) Reset() {
	*x = IPAMConfigExtended{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPAMConfigExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAMConfigExtended) ProtoMessage() {}

func (x *IPAMConfigExtended) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAMConfigExtended.ProtoReflect.Descriptor instead.
func (*IPAMConfigExtended) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{1}
}

func (x *IPAMConfigExtended) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *IPAMConfigExtended) GetSubnets() []*IPAMSubnet {
	if x != nil {
		return x.Subnets
	}
	return nil
}

func (x *IPAMConfigExtended) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *IPAMConfigExtended) GetDriverOpts() map[string]string {
	if x != nil {
		return x.DriverOpts
	}
	return nil
}

func (x *IPAMConfigExtended) GetEnableDhcp() bool {
	if x != nil {
		return x.EnableDhcp
	}
	return false
}

func (x *IPAMConfigExtended) GetDhcpRangeStart() string {
	if x != nil {
		return x.DhcpRangeStart
	}
	return ""
}

func (x *IPAMConfigExtended) GetDhcpRangeEnd() string {
	if x != nil {
		return x.DhcpRangeEnd
	}
	return ""
}

func (x *IPAMConfigExtended) GetReservedIps() []string {
	if x != nil {
		return x.ReservedIps
	}
	return nil
}

func (x *IPAMConfigExtended) GetDnsServer() string {
	if x != nil {
		return x.DnsServer
	}
	return ""
}

func (x *IPAMConfigExtended) GetDnsSearch() []string {
	if x != nil {
		return x.DnsSearch
	}
	return nil
}

type IPAMSubnet struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Subnet       string                 `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Gateway      string                 `protobuf:"bytes,2,opt,name=gateway,proto3" json:"gateway,omitempty"`
	IpRange      string                 `protobuf:"bytes,3,opt,name=ip_range,json=ipRange,proto3" json:"ip_range,omitempty"`
	AuxAddresses map[string]string      `protobuf:"bytes,4,rep,name=aux_addresses,json=auxAddresses,proto3" json:"aux_addresses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	VlanId       int32                  `protobuf:"varint,5,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	// Subnet state
	AvailableIps       int32    `protobuf:"varint,6,opt,name=available_ips,json=availableIps,proto3" json:"available_ips,omitempty"`
	AllocatedIps       int32    `protobuf:"varint,7,opt,name=allocated_ips,json=allocatedIps,proto3" json:"allocated_ips,omitempty"`
	AllocatedAddresses []string `protobuf:"bytes,8,rep,name=allocated_addresses,json=allocatedAddresses,proto3" json:"allocated_addresses,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *IPAMSubnet) Reset() {
	*x = IPAMSubnet{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPAMSubnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAMSubnet) ProtoMessage() {}

func (x *IPAMSubnet) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAMSubnet.ProtoReflect.Descriptor instead.
func (*IPAMSubnet) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{2}
}

func (x *IPAMSubnet) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

func (x *IPAMSubnet) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *IPAMSubnet) GetIpRange() string {
	if x != nil {
		return x.IpRange
	}
	return ""
}

func (x *IPAMSubnet) GetAuxAddresses() map[string]string {
	if x != nil {
		return x.AuxAddresses
	}
	return nil
}

func (x *IPAMSubnet) GetVlanId() int32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

func (x *IPAMSubnet) GetAvailableIps() int32 {
	if x != nil {
		return x.AvailableIps
	}
	return 0
}

func (x *IPAMSubnet) GetAllocatedIps() int32 {
	if x != nil {
		return x.AllocatedIps
	}
	return 0
}

func (x *IPAMSubnet) GetAllocatedAddresses() []string {
	if x != nil {
		return x.AllocatedAddresses
	}
	return nil
}

type NetworkContainerExtended struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	ContainerId string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image       string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Ipv4Address string                 `protobuf:"bytes,4,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address string                 `protobuf:"bytes,5,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	MacAddress  string                 `protobuf:"bytes,6,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// Network configuration for container
	Aliases   []string          `protobuf:"bytes,7,rep,name=aliases,proto3" json:"aliases,omitempty"`
	Links     []string          `protobuf:"bytes,8,rep,name=links,proto3" json:"links,omitempty"`
	Endpoints map[string]string `protobuf:"bytes,9,rep,name=endpoints,proto3" json:"endpoints,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Container network state
	State       NetworkEndpointState `protobuf:"varint,10,opt,name=state,proto3,enum=nerdctl.v1.NetworkEndpointState" json:"state,omitempty"`
	ConnectedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
	// Port mappings
	PortMappings  []*PortMapping `protobuf:"bytes,12,rep,name=port_mappings,json=portMappings,proto3" json:"port_mappings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkContainerExtended) Reset() {
	*x = NetworkContainerExtended{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkContainerExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkContainerExtended) ProtoMessage() {}

func (x *NetworkContainerExtended) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkContainerExtended.ProtoReflect.Descriptor instead.
func (*NetworkContainerExtended) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{3}
}

func (x *NetworkContainerExtended) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *NetworkContainerExtended) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkContainerExtended) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *NetworkContainerExtended) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *NetworkContainerExtended) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *NetworkContainerExtended) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkContainerExtended) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *NetworkContainerExtended) GetLinks() []string {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *NetworkContainerExtended) GetEndpoints() map[string]string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *NetworkContainerExtended) GetState() NetworkEndpointState {
	if x != nil {
		return x.State
	}
	return NetworkEndpointState_ENDPOINT_UNKNOWN
}

func (x *NetworkContainerExtended) GetConnectedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ConnectedAt
	}
	return nil
}

func (x *NetworkContainerExtended) GetPortMappings() []*PortMapping {
	if x != nil {
		return x.PortMappings
	}
	return nil
}

type NetworkEndpoint struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	EndpointId  string                 `protobuf:"bytes,1,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NetworkId   string                 `protobuf:"bytes,3,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	ContainerId string                 `protobuf:"bytes,4,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Endpoint addresses
	Ipv4Address string `protobuf:"bytes,5,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address string `protobuf:"bytes,6,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	MacAddress  string `protobuf:"bytes,7,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// Endpoint configuration
	DnsNames []string          `protobuf:"bytes,8,rep,name=dns_names,json=dnsNames,proto3" json:"dns_names,omitempty"`
	Aliases  []string          `protobuf:"bytes,9,rep,name=aliases,proto3" json:"aliases,omitempty"`
	Options  map[string]string `protobuf:"bytes,10,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Endpoint state
	State         NetworkEndpointState `protobuf:"varint,11,opt,name=state,proto3,enum=nerdctl.v1.NetworkEndpointState" json:"state,omitempty"`
	Created       *timestamp.Timestamp `protobuf:"bytes,12,opt,name=created,proto3" json:"created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkEndpoint) Reset() {
	*x = NetworkEndpoint{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEndpoint) ProtoMessage() {}

func (x *NetworkEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEndpoint.ProtoReflect.Descriptor instead.
func (*NetworkEndpoint) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{4}
}

func (x *NetworkEndpoint) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

func (x *NetworkEndpoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkEndpoint) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *NetworkEndpoint) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *NetworkEndpoint) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *NetworkEndpoint) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *NetworkEndpoint) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkEndpoint) GetDnsNames() []string {
	if x != nil {
		return x.DnsNames
	}
	return nil
}

func (x *NetworkEndpoint) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *NetworkEndpoint) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *NetworkEndpoint) GetState() NetworkEndpointState {
	if x != nil {
		return x.State
	}
	return NetworkEndpointState_ENDPOINT_UNKNOWN
}

func (x *NetworkEndpoint) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

type NetworkState struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Status         string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // active, inactive, error, creating, removing
	Health         string                 `protobuf:"bytes,2,opt,name=health,proto3" json:"health,omitempty"` // healthy, unhealthy, degraded
	LastError      string                 `protobuf:"bytes,3,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
	ContainerCount int32                  `protobuf:"varint,4,opt,name=container_count,json=containerCount,proto3" json:"container_count,omitempty"`
	EndpointCount  int32                  `protobuf:"varint,5,opt,name=endpoint_count,json=endpointCount,proto3" json:"endpoint_count,omitempty"`
	LastActivity   *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
	// Network connectivity state
	BridgeUp         bool     `protobuf:"varint,7,opt,name=bridge_up,json=bridgeUp,proto3" json:"bridge_up,omitempty"`
	DhcpActive       bool     `protobuf:"varint,8,opt,name=dhcp_active,json=dhcpActive,proto3" json:"dhcp_active,omitempty"`
	ActiveInterfaces []string `protobuf:"bytes,9,rep,name=active_interfaces,json=activeInterfaces,proto3" json:"active_interfaces,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NetworkState) Reset() {
	*x = NetworkState{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkState) ProtoMessage() {}

func (x *NetworkState) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkState.ProtoReflect.Descriptor instead.
func (*NetworkState) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{5}
}

func (x *NetworkState) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NetworkState) GetHealth() string {
	if x != nil {
		return x.Health
	}
	return ""
}

func (x *NetworkState) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

func (x *NetworkState) GetContainerCount() int32 {
	if x != nil {
		return x.ContainerCount
	}
	return 0
}

func (x *NetworkState) GetEndpointCount() int32 {
	if x != nil {
		return x.EndpointCount
	}
	return 0
}

func (x *NetworkState) GetLastActivity() *timestamp.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

func (x *NetworkState) GetBridgeUp() bool {
	if x != nil {
		return x.BridgeUp
	}
	return false
}

func (x *NetworkState) GetDhcpActive() bool {
	if x != nil {
		return x.DhcpActive
	}
	return false
}

func (x *NetworkState) GetActiveInterfaces() []string {
	if x != nil {
		return x.ActiveInterfaces
	}
	return nil
}

type ExtendedNetworkConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CNI configuration
	CniVersion    string   `protobuf:"bytes,1,opt,name=cni_version,json=cniVersion,proto3" json:"cni_version,omitempty"`
	CniConfigPath string   `protobuf:"bytes,2,opt,name=cni_config_path,json=cniConfigPath,proto3" json:"cni_config_path,omitempty"`
	CniPlugins    []string `protobuf:"bytes,3,rep,name=cni_plugins,json=cniPlugins,proto3" json:"cni_plugins,omitempty"`
	// Network drivers
	PrimaryDriver    string            `protobuf:"bytes,4,opt,name=primary_driver,json=primaryDriver,proto3" json:"primary_driver,omitempty"`
	AvailableDrivers []string          `protobuf:"bytes,5,rep,name=available_drivers,json=availableDrivers,proto3" json:"available_drivers,omitempty"`
	DriverConfig     map[string]string `protobuf:"bytes,6,rep,name=driver_config,json=driverConfig,proto3" json:"driver_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Advanced configuration
	Mtu                   int32 `protobuf:"varint,7,opt,name=mtu,proto3" json:"mtu,omitempty"`
	HairpinMode           bool  `protobuf:"varint,8,opt,name=hairpin_mode,json=hairpinMode,proto3" json:"hairpin_mode,omitempty"`
	BridgeNfCallIptables  bool  `protobuf:"varint,9,opt,name=bridge_nf_call_iptables,json=bridgeNfCallIptables,proto3" json:"bridge_nf_call_iptables,omitempty"`
	BridgeNfCallIp6Tables bool  `protobuf:"varint,10,opt,name=bridge_nf_call_ip6tables,json=bridgeNfCallIp6tables,proto3" json:"bridge_nf_call_ip6tables,omitempty"`
	IpForward             bool  `protobuf:"varint,11,opt,name=ip_forward,json=ipForward,proto3" json:"ip_forward,omitempty"`
	IpMasq                bool  `protobuf:"varint,12,opt,name=ip_masq,json=ipMasq,proto3" json:"ip_masq,omitempty"`
	// VLAN configuration
	VlanId          int32  `protobuf:"varint,13,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	ParentInterface string `protobuf:"bytes,14,opt,name=parent_interface,json=parentInterface,proto3" json:"parent_interface,omitempty"`
	// Security configuration
	AllowedProtocols []string `protobuf:"bytes,15,rep,name=allowed_protocols,json=allowedProtocols,proto3" json:"allowed_protocols,omitempty"`
	BlockedPorts     []string `protobuf:"bytes,16,rep,name=blocked_ports,json=blockedPorts,proto3" json:"blocked_ports,omitempty"`
	EnableEncryption bool     `protobuf:"varint,17,opt,name=enable_encryption,json=enableEncryption,proto3" json:"enable_encryption,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExtendedNetworkConfig) Reset() {
	*x = ExtendedNetworkConfig{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendedNetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendedNetworkConfig) ProtoMessage() {}

func (x *ExtendedNetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendedNetworkConfig.ProtoReflect.Descriptor instead.
func (*ExtendedNetworkConfig) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{6}
}

func (x *ExtendedNetworkConfig) GetCniVersion() string {
	if x != nil {
		return x.CniVersion
	}
	return ""
}

func (x *ExtendedNetworkConfig) GetCniConfigPath() string {
	if x != nil {
		return x.CniConfigPath
	}
	return ""
}

func (x *ExtendedNetworkConfig) GetCniPlugins() []string {
	if x != nil {
		return x.CniPlugins
	}
	return nil
}

func (x *ExtendedNetworkConfig) GetPrimaryDriver() string {
	if x != nil {
		return x.PrimaryDriver
	}
	return ""
}

func (x *ExtendedNetworkConfig) GetAvailableDrivers() []string {
	if x != nil {
		return x.AvailableDrivers
	}
	return nil
}

func (x *ExtendedNetworkConfig) GetDriverConfig() map[string]string {
	if x != nil {
		return x.DriverConfig
	}
	return nil
}

func (x *ExtendedNetworkConfig) GetMtu() int32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *ExtendedNetworkConfig) GetHairpinMode() bool {
	if x != nil {
		return x.HairpinMode
	}
	return false
}

func (x *ExtendedNetworkConfig) GetBridgeNfCallIptables() bool {
	if x != nil {
		return x.BridgeNfCallIptables
	}
	return false
}

func (x *ExtendedNetworkConfig) GetBridgeNfCallIp6Tables() bool {
	if x != nil {
		return x.BridgeNfCallIp6Tables
	}
	return false
}

func (x *ExtendedNetworkConfig) GetIpForward() bool {
	if x != nil {
		return x.IpForward
	}
	return false
}

func (x *ExtendedNetworkConfig) GetIpMasq() bool {
	if x != nil {
		return x.IpMasq
	}
	return false
}

func (x *ExtendedNetworkConfig) GetVlanId() int32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

func (x *ExtendedNetworkConfig) GetParentInterface() string {
	if x != nil {
		return x.ParentInterface
	}
	return ""
}

func (x *ExtendedNetworkConfig) GetAllowedProtocols() []string {
	if x != nil {
		return x.AllowedProtocols
	}
	return nil
}

func (x *ExtendedNetworkConfig) GetBlockedPorts() []string {
	if x != nil {
		return x.BlockedPorts
	}
	return nil
}

func (x *ExtendedNetworkConfig) GetEnableEncryption() bool {
	if x != nil {
		return x.EnableEncryption
	}
	return false
}

type NetworkMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Traffic statistics
	BytesSent       int64 `protobuf:"varint,1,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived   int64 `protobuf:"varint,2,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	PacketsSent     int64 `protobuf:"varint,3,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsReceived int64 `protobuf:"varint,4,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	// Error statistics
	TxErrors  int64 `protobuf:"varint,5,opt,name=tx_errors,json=txErrors,proto3" json:"tx_errors,omitempty"`
	RxErrors  int64 `protobuf:"varint,6,opt,name=rx_errors,json=rxErrors,proto3" json:"rx_errors,omitempty"`
	TxDropped int64 `protobuf:"varint,7,opt,name=tx_dropped,json=txDropped,proto3" json:"tx_dropped,omitempty"`
	RxDropped int64 `protobuf:"varint,8,opt,name=rx_dropped,json=rxDropped,proto3" json:"rx_dropped,omitempty"`
	// Connection statistics
	CurrentConnections int32 `protobuf:"varint,9,opt,name=current_connections,json=currentConnections,proto3" json:"current_connections,omitempty"`
	PeakConnections    int32 `protobuf:"varint,10,opt,name=peak_connections,json=peakConnections,proto3" json:"peak_connections,omitempty"`
	TotalConnections   int64 `protobuf:"varint,11,opt,name=total_connections,json=totalConnections,proto3" json:"total_connections,omitempty"`
	// Performance metrics
	LatencyMs      float64              `protobuf:"fixed64,12,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	ThroughputMbps float64              `protobuf:"fixed64,13,opt,name=throughput_mbps,json=throughputMbps,proto3" json:"throughput_mbps,omitempty"`
	PacketLossRate float64              `protobuf:"fixed64,14,opt,name=packet_loss_rate,json=packetLossRate,proto3" json:"packet_loss_rate,omitempty"`
	CollectedAt    *timestamp.Timestamp `protobuf:"bytes,15,opt,name=collected_at,json=collectedAt,proto3" json:"collected_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NetworkMetrics) Reset() {
	*x = NetworkMetrics{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkMetrics) ProtoMessage() {}

func (x *NetworkMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkMetrics.ProtoReflect.Descriptor instead.
func (*NetworkMetrics) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{7}
}

func (x *NetworkMetrics) GetBytesSent() int64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *NetworkMetrics) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *NetworkMetrics) GetPacketsSent() int64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *NetworkMetrics) GetPacketsReceived() int64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *NetworkMetrics) GetTxErrors() int64 {
	if x != nil {
		return x.TxErrors
	}
	return 0
}

func (x *NetworkMetrics) GetRxErrors() int64 {
	if x != nil {
		return x.RxErrors
	}
	return 0
}

func (x *NetworkMetrics) GetTxDropped() int64 {
	if x != nil {
		return x.TxDropped
	}
	return 0
}

func (x *NetworkMetrics) GetRxDropped() int64 {
	if x != nil {
		return x.RxDropped
	}
	return 0
}

func (x *NetworkMetrics) GetCurrentConnections() int32 {
	if x != nil {
		return x.CurrentConnections
	}
	return 0
}

func (x *NetworkMetrics) GetPeakConnections() int32 {
	if x != nil {
		return x.PeakConnections
	}
	return 0
}

func (x *NetworkMetrics) GetTotalConnections() int64 {
	if x != nil {
		return x.TotalConnections
	}
	return 0
}

func (x *NetworkMetrics) GetLatencyMs() float64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *NetworkMetrics) GetThroughputMbps() float64 {
	if x != nil {
		return x.ThroughputMbps
	}
	return 0
}

func (x *NetworkMetrics) GetPacketLossRate() float64 {
	if x != nil {
		return x.PacketLossRate
	}
	return 0
}

func (x *NetworkMetrics) GetCollectedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CollectedAt
	}
	return nil
}

type ExtendedPortMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerPort int32                  `protobuf:"varint,1,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"`
	HostPort      int32                  `protobuf:"varint,2,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"` // tcp, udp, sctp
	HostIp        string                 `protobuf:"bytes,4,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtendedPortMapping) Reset() {
	*x = ExtendedPortMapping{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendedPortMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendedPortMapping) ProtoMessage() {}

func (x *ExtendedPortMapping) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendedPortMapping.ProtoReflect.Descriptor instead.
func (*ExtendedPortMapping) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{8}
}

func (x *ExtendedPortMapping) GetContainerPort() int32 {
	if x != nil {
		return x.ContainerPort
	}
	return 0
}

func (x *ExtendedPortMapping) GetHostPort() int32 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *ExtendedPortMapping) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ExtendedPortMapping) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *ExtendedPortMapping) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Create network request/response
type CreateNetworkExtendedRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Driver    string                 `protobuf:"bytes,3,opt,name=driver,proto3" json:"driver,omitempty"`
	// IPAM configuration
	Ipam *IPAMConfigExtended `protobuf:"bytes,4,opt,name=ipam,proto3" json:"ipam,omitempty"`
	// Network properties
	Internal   bool `protobuf:"varint,5,opt,name=internal,proto3" json:"internal,omitempty"`
	Attachable bool `protobuf:"varint,6,opt,name=attachable,proto3" json:"attachable,omitempty"`
	Ingress    bool `protobuf:"varint,7,opt,name=ingress,proto3" json:"ingress,omitempty"`
	Ipv6       bool `protobuf:"varint,8,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	EnableIcc  bool `protobuf:"varint,9,opt,name=enable_icc,json=enableIcc,proto3" json:"enable_icc,omitempty"`
	// Configuration
	Options map[string]string `protobuf:"bytes,10,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Labels  map[string]string `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Advanced options
	Mtu             int32  `protobuf:"varint,12,opt,name=mtu,proto3" json:"mtu,omitempty"`
	ParentInterface string `protobuf:"bytes,13,opt,name=parent_interface,json=parentInterface,proto3" json:"parent_interface,omitempty"`
	VlanId          int32  `protobuf:"varint,14,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	// Security options
	FirewallRules    []string `protobuf:"bytes,15,rep,name=firewall_rules,json=firewallRules,proto3" json:"firewall_rules,omitempty"`
	IsolationMode    string   `protobuf:"bytes,16,opt,name=isolation_mode,json=isolationMode,proto3" json:"isolation_mode,omitempty"`
	EnableEncryption bool     `protobuf:"varint,17,opt,name=enable_encryption,json=enableEncryption,proto3" json:"enable_encryption,omitempty"`
	// CNI specific
	ConfigFile     string `protobuf:"bytes,18,opt,name=config_file,json=configFile,proto3" json:"config_file,omitempty"`
	ConfigDir      string `protobuf:"bytes,19,opt,name=config_dir,json=configDir,proto3" json:"config_dir,omitempty"`
	ValidateConfig bool   `protobuf:"varint,20,opt,name=validate_config,json=validateConfig,proto3" json:"validate_config,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateNetworkExtendedRequest) Reset() {
	*x = CreateNetworkExtendedRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkExtendedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkExtendedRequest) ProtoMessage() {}

func (x *CreateNetworkExtendedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkExtendedRequest.ProtoReflect.Descriptor instead.
func (*CreateNetworkExtendedRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{9}
}

func (x *CreateNetworkExtendedRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNetworkExtendedRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateNetworkExtendedRequest) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *CreateNetworkExtendedRequest) GetIpam() *IPAMConfigExtended {
	if x != nil {
		return x.Ipam
	}
	return nil
}

func (x *CreateNetworkExtendedRequest) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *CreateNetworkExtendedRequest) GetAttachable() bool {
	if x != nil {
		return x.Attachable
	}
	return false
}

func (x *CreateNetworkExtendedRequest) GetIngress() bool {
	if x != nil {
		return x.Ingress
	}
	return false
}

func (x *CreateNetworkExtendedRequest) GetIpv6() bool {
	if x != nil {
		return x.Ipv6
	}
	return false
}

func (x *CreateNetworkExtendedRequest) GetEnableIcc() bool {
	if x != nil {
		return x.EnableIcc
	}
	return false
}

func (x *CreateNetworkExtendedRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreateNetworkExtendedRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateNetworkExtendedRequest) GetMtu() int32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *CreateNetworkExtendedRequest) GetParentInterface() string {
	if x != nil {
		return x.ParentInterface
	}
	return ""
}

func (x *CreateNetworkExtendedRequest) GetVlanId() int32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

func (x *CreateNetworkExtendedRequest) GetFirewallRules() []string {
	if x != nil {
		return x.FirewallRules
	}
	return nil
}

func (x *CreateNetworkExtendedRequest) GetIsolationMode() string {
	if x != nil {
		return x.IsolationMode
	}
	return ""
}

func (x *CreateNetworkExtendedRequest) GetEnableEncryption() bool {
	if x != nil {
		return x.EnableEncryption
	}
	return false
}

func (x *CreateNetworkExtendedRequest) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

func (x *CreateNetworkExtendedRequest) GetConfigDir() string {
	if x != nil {
		return x.ConfigDir
	}
	return ""
}

func (x *CreateNetworkExtendedRequest) GetValidateConfig() bool {
	if x != nil {
		return x.ValidateConfig
	}
	return false
}

type CreateNetworkExtendedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Warnings      []string               `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Network       *NetworkInfoExtended   `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	Metadata      *OperationMetadata     `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkExtendedResponse) Reset() {
	*x = CreateNetworkExtendedResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkExtendedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkExtendedResponse) ProtoMessage() {}

func (x *CreateNetworkExtendedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkExtendedResponse.ProtoReflect.Descriptor instead.
func (*CreateNetworkExtendedResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{10}
}

func (x *CreateNetworkExtendedResponse) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *CreateNetworkExtendedResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *CreateNetworkExtendedResponse) GetNetwork() *NetworkInfoExtended {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *CreateNetworkExtendedResponse) GetMetadata() *OperationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Remove network request/response
type RemoveNetworkExtendedRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Networks         []string               `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	Namespace        string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Force            bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	RemoveContainers bool                   `protobuf:"varint,4,opt,name=remove_containers,json=removeContainers,proto3" json:"remove_containers,omitempty"`
	TimeoutSeconds   int32                  `protobuf:"varint,5,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	DryRun           bool                   `protobuf:"varint,6,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RemoveNetworkExtendedRequest) Reset() {
	*x = RemoveNetworkExtendedRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNetworkExtendedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNetworkExtendedRequest) ProtoMessage() {}

func (x *RemoveNetworkExtendedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNetworkExtendedRequest.ProtoReflect.Descriptor instead.
func (*RemoveNetworkExtendedRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveNetworkExtendedRequest) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *RemoveNetworkExtendedRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RemoveNetworkExtendedRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *RemoveNetworkExtendedRequest) GetRemoveContainers() bool {
	if x != nil {
		return x.RemoveContainers
	}
	return false
}

func (x *RemoveNetworkExtendedRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *RemoveNetworkExtendedRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

type RemoveNetworkExtendedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Removed       []string               `protobuf:"bytes,1,rep,name=removed,proto3" json:"removed,omitempty"`
	Failed        []string               `protobuf:"bytes,2,rep,name=failed,proto3" json:"failed,omitempty"`
	Warnings      []string               `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Results       []*OperationResult     `protobuf:"bytes,4,rep,name=results,proto3" json:"results,omitempty"`
	Metadata      *OperationMetadata     `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNetworkExtendedResponse) Reset() {
	*x = RemoveNetworkExtendedResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNetworkExtendedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNetworkExtendedResponse) ProtoMessage() {}

func (x *RemoveNetworkExtendedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNetworkExtendedResponse.ProtoReflect.Descriptor instead.
func (*RemoveNetworkExtendedResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveNetworkExtendedResponse) GetRemoved() []string {
	if x != nil {
		return x.Removed
	}
	return nil
}

func (x *RemoveNetworkExtendedResponse) GetFailed() []string {
	if x != nil {
		return x.Failed
	}
	return nil
}

func (x *RemoveNetworkExtendedResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *RemoveNetworkExtendedResponse) GetResults() []*OperationResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *RemoveNetworkExtendedResponse) GetMetadata() *OperationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// List networks request/response
type ListNetworksExtendedRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Namespace string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Filters   map[string]string      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Quiet     bool                   `protobuf:"varint,3,opt,name=quiet,proto3" json:"quiet,omitempty"`
	Format    string                 `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
	NoTrunc   bool                   `protobuf:"varint,5,opt,name=no_trunc,json=noTrunc,proto3" json:"no_trunc,omitempty"`
	All       bool                   `protobuf:"varint,6,opt,name=all,proto3" json:"all,omitempty"`
	// Extended options
	IncludeSystem     bool     `protobuf:"varint,7,opt,name=include_system,json=includeSystem,proto3" json:"include_system,omitempty"`
	IncludeMetrics    bool     `protobuf:"varint,8,opt,name=include_metrics,json=includeMetrics,proto3" json:"include_metrics,omitempty"`
	IncludeContainers bool     `protobuf:"varint,9,opt,name=include_containers,json=includeContainers,proto3" json:"include_containers,omitempty"`
	Fields            []string `protobuf:"bytes,10,rep,name=fields,proto3" json:"fields,omitempty"`
	// Pagination
	Limit         int32  `protobuf:"varint,11,opt,name=limit,proto3" json:"limit,omitempty"`
	ContinueToken string `protobuf:"bytes,12,opt,name=continue_token,json=continueToken,proto3" json:"continue_token,omitempty"`
	// Sorting
	SortBy        string `protobuf:"bytes,13,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	ReverseSort   bool   `protobuf:"varint,14,opt,name=reverse_sort,json=reverseSort,proto3" json:"reverse_sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksExtendedRequest) Reset() {
	*x = ListNetworksExtendedRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksExtendedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksExtendedRequest) ProtoMessage() {}

func (x *ListNetworksExtendedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksExtendedRequest.ProtoReflect.Descriptor instead.
func (*ListNetworksExtendedRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{13}
}

func (x *ListNetworksExtendedRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListNetworksExtendedRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListNetworksExtendedRequest) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *ListNetworksExtendedRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *ListNetworksExtendedRequest) GetNoTrunc() bool {
	if x != nil {
		return x.NoTrunc
	}
	return false
}

func (x *ListNetworksExtendedRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ListNetworksExtendedRequest) GetIncludeSystem() bool {
	if x != nil {
		return x.IncludeSystem
	}
	return false
}

func (x *ListNetworksExtendedRequest) GetIncludeMetrics() bool {
	if x != nil {
		return x.IncludeMetrics
	}
	return false
}

func (x *ListNetworksExtendedRequest) GetIncludeContainers() bool {
	if x != nil {
		return x.IncludeContainers
	}
	return false
}

func (x *ListNetworksExtendedRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListNetworksExtendedRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListNetworksExtendedRequest) GetContinueToken() string {
	if x != nil {
		return x.ContinueToken
	}
	return ""
}

func (x *ListNetworksExtendedRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListNetworksExtendedRequest) GetReverseSort() bool {
	if x != nil {
		return x.ReverseSort
	}
	return false
}

type ListNetworksExtendedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Networks      []*NetworkInfoExtended `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	ContinueToken string                 `protobuf:"bytes,3,opt,name=continue_token,json=continueToken,proto3" json:"continue_token,omitempty"`
	Warnings      []string               `protobuf:"bytes,4,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Metadata      *OperationMetadata     `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksExtendedResponse) Reset() {
	*x = ListNetworksExtendedResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksExtendedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksExtendedResponse) ProtoMessage() {}

func (x *ListNetworksExtendedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksExtendedResponse.ProtoReflect.Descriptor instead.
func (*ListNetworksExtendedResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{14}
}

func (x *ListNetworksExtendedResponse) GetNetworks() []*NetworkInfoExtended {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *ListNetworksExtendedResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListNetworksExtendedResponse) GetContinueToken() string {
	if x != nil {
		return x.ContinueToken
	}
	return ""
}

func (x *ListNetworksExtendedResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *ListNetworksExtendedResponse) GetMetadata() *OperationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Inspect network request/response
type InspectNetworkExtendedRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Network           string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Namespace         string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Format            string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Verbose           bool                   `protobuf:"varint,4,opt,name=verbose,proto3" json:"verbose,omitempty"`
	IncludeContainers bool                   `protobuf:"varint,5,opt,name=include_containers,json=includeContainers,proto3" json:"include_containers,omitempty"`
	IncludeEndpoints  bool                   `protobuf:"varint,6,opt,name=include_endpoints,json=includeEndpoints,proto3" json:"include_endpoints,omitempty"`
	IncludeMetrics    bool                   `protobuf:"varint,7,opt,name=include_metrics,json=includeMetrics,proto3" json:"include_metrics,omitempty"`
	Fields            []string               `protobuf:"bytes,8,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *InspectNetworkExtendedRequest) Reset() {
	*x = InspectNetworkExtendedRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectNetworkExtendedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectNetworkExtendedRequest) ProtoMessage() {}

func (x *InspectNetworkExtendedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectNetworkExtendedRequest.ProtoReflect.Descriptor instead.
func (*InspectNetworkExtendedRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{15}
}

func (x *InspectNetworkExtendedRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *InspectNetworkExtendedRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *InspectNetworkExtendedRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *InspectNetworkExtendedRequest) GetVerbose() bool {
	if x != nil {
		return x.Verbose
	}
	return false
}

func (x *InspectNetworkExtendedRequest) GetIncludeContainers() bool {
	if x != nil {
		return x.IncludeContainers
	}
	return false
}

func (x *InspectNetworkExtendedRequest) GetIncludeEndpoints() bool {
	if x != nil {
		return x.IncludeEndpoints
	}
	return false
}

func (x *InspectNetworkExtendedRequest) GetIncludeMetrics() bool {
	if x != nil {
		return x.IncludeMetrics
	}
	return false
}

func (x *InspectNetworkExtendedRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type InspectNetworkExtendedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       *NetworkInfoExtended   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Warnings      []string               `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Metadata      *OperationMetadata     `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectNetworkExtendedResponse) Reset() {
	*x = InspectNetworkExtendedResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectNetworkExtendedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectNetworkExtendedResponse) ProtoMessage() {}

func (x *InspectNetworkExtendedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectNetworkExtendedResponse.ProtoReflect.Descriptor instead.
func (*InspectNetworkExtendedResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{16}
}

func (x *InspectNetworkExtendedResponse) GetNetwork() *NetworkInfoExtended {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *InspectNetworkExtendedResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *InspectNetworkExtendedResponse) GetMetadata() *OperationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Connect network request/response
type ConnectNetworkExtendedRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Network   string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Container string                 `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`
	Namespace string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Endpoint configuration
	EndpointConfig *NetworkEndpointConfigExtended `protobuf:"bytes,4,opt,name=endpoint_config,json=endpointConfig,proto3" json:"endpoint_config,omitempty"`
	// Connection options
	Force                bool  `protobuf:"varint,5,opt,name=force,proto3" json:"force,omitempty"`
	TimeoutSeconds       int32 `protobuf:"varint,6,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	ValidateConnectivity bool  `protobuf:"varint,7,opt,name=validate_connectivity,json=validateConnectivity,proto3" json:"validate_connectivity,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ConnectNetworkExtendedRequest) Reset() {
	*x = ConnectNetworkExtendedRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectNetworkExtendedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectNetworkExtendedRequest) ProtoMessage() {}

func (x *ConnectNetworkExtendedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectNetworkExtendedRequest.ProtoReflect.Descriptor instead.
func (*ConnectNetworkExtendedRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{17}
}

func (x *ConnectNetworkExtendedRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ConnectNetworkExtendedRequest) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *ConnectNetworkExtendedRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConnectNetworkExtendedRequest) GetEndpointConfig() *NetworkEndpointConfigExtended {
	if x != nil {
		return x.EndpointConfig
	}
	return nil
}

func (x *ConnectNetworkExtendedRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *ConnectNetworkExtendedRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *ConnectNetworkExtendedRequest) GetValidateConnectivity() bool {
	if x != nil {
		return x.ValidateConnectivity
	}
	return false
}

type NetworkEndpointConfigExtended struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Ipv4Address string                 `protobuf:"bytes,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address string                 `protobuf:"bytes,2,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	Aliases     []string               `protobuf:"bytes,3,rep,name=aliases,proto3" json:"aliases,omitempty"`
	Links       []string               `protobuf:"bytes,4,rep,name=links,proto3" json:"links,omitempty"`
	DriverOpts  map[string]string      `protobuf:"bytes,5,rep,name=driver_opts,json=driverOpts,proto3" json:"driver_opts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MacAddress  string                 `protobuf:"bytes,6,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// Advanced endpoint configuration
	DnsNames   []string          `protobuf:"bytes,7,rep,name=dns_names,json=dnsNames,proto3" json:"dns_names,omitempty"`
	DnsServers []string          `protobuf:"bytes,8,rep,name=dns_servers,json=dnsServers,proto3" json:"dns_servers,omitempty"`
	DnsSearch  []string          `protobuf:"bytes,9,rep,name=dns_search,json=dnsSearch,proto3" json:"dns_search,omitempty"`
	ExtraHosts map[string]string `protobuf:"bytes,10,rep,name=extra_hosts,json=extraHosts,proto3" json:"extra_hosts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Port configuration
	PortMappings []*PortMapping `protobuf:"bytes,11,rep,name=port_mappings,json=portMappings,proto3" json:"port_mappings,omitempty"`
	// Security configuration
	Capabilities  []string `protobuf:"bytes,12,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	Privileged    bool     `protobuf:"varint,13,opt,name=privileged,proto3" json:"privileged,omitempty"`
	UserNsMode    string   `protobuf:"bytes,14,opt,name=user_ns_mode,json=userNsMode,proto3" json:"user_ns_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkEndpointConfigExtended) Reset() {
	*x = NetworkEndpointConfigExtended{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEndpointConfigExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEndpointConfigExtended) ProtoMessage() {}

func (x *NetworkEndpointConfigExtended) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEndpointConfigExtended.ProtoReflect.Descriptor instead.
func (*NetworkEndpointConfigExtended) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{18}
}

func (x *NetworkEndpointConfigExtended) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *NetworkEndpointConfigExtended) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *NetworkEndpointConfigExtended) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *NetworkEndpointConfigExtended) GetLinks() []string {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *NetworkEndpointConfigExtended) GetDriverOpts() map[string]string {
	if x != nil {
		return x.DriverOpts
	}
	return nil
}

func (x *NetworkEndpointConfigExtended) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkEndpointConfigExtended) GetDnsNames() []string {
	if x != nil {
		return x.DnsNames
	}
	return nil
}

func (x *NetworkEndpointConfigExtended) GetDnsServers() []string {
	if x != nil {
		return x.DnsServers
	}
	return nil
}

func (x *NetworkEndpointConfigExtended) GetDnsSearch() []string {
	if x != nil {
		return x.DnsSearch
	}
	return nil
}

func (x *NetworkEndpointConfigExtended) GetExtraHosts() map[string]string {
	if x != nil {
		return x.ExtraHosts
	}
	return nil
}

func (x *NetworkEndpointConfigExtended) GetPortMappings() []*PortMapping {
	if x != nil {
		return x.PortMappings
	}
	return nil
}

func (x *NetworkEndpointConfigExtended) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *NetworkEndpointConfigExtended) GetPrivileged() bool {
	if x != nil {
		return x.Privileged
	}
	return false
}

func (x *NetworkEndpointConfigExtended) GetUserNsMode() string {
	if x != nil {
		return x.UserNsMode
	}
	return ""
}

type ConnectNetworkExtendedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connected     bool                   `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	EndpointId    string                 `protobuf:"bytes,2,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	Warnings      []string               `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Endpoint      *NetworkEndpoint       `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Metadata      *OperationMetadata     `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectNetworkExtendedResponse) Reset() {
	*x = ConnectNetworkExtendedResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectNetworkExtendedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectNetworkExtendedResponse) ProtoMessage() {}

func (x *ConnectNetworkExtendedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectNetworkExtendedResponse.ProtoReflect.Descriptor instead.
func (*ConnectNetworkExtendedResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{19}
}

func (x *ConnectNetworkExtendedResponse) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *ConnectNetworkExtendedResponse) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

func (x *ConnectNetworkExtendedResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *ConnectNetworkExtendedResponse) GetEndpoint() *NetworkEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *ConnectNetworkExtendedResponse) GetMetadata() *OperationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Disconnect network request/response
type DisconnectNetworkExtendedRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Network          string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Container        string                 `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`
	Namespace        string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Force            bool                   `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	TimeoutSeconds   int32                  `protobuf:"varint,5,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	CleanupResources bool                   `protobuf:"varint,6,opt,name=cleanup_resources,json=cleanupResources,proto3" json:"cleanup_resources,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DisconnectNetworkExtendedRequest) Reset() {
	*x = DisconnectNetworkExtendedRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectNetworkExtendedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectNetworkExtendedRequest) ProtoMessage() {}

func (x *DisconnectNetworkExtendedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectNetworkExtendedRequest.ProtoReflect.Descriptor instead.
func (*DisconnectNetworkExtendedRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{20}
}

func (x *DisconnectNetworkExtendedRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DisconnectNetworkExtendedRequest) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *DisconnectNetworkExtendedRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DisconnectNetworkExtendedRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *DisconnectNetworkExtendedRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *DisconnectNetworkExtendedRequest) GetCleanupResources() bool {
	if x != nil {
		return x.CleanupResources
	}
	return false
}

type DisconnectNetworkExtendedResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Disconnected   bool                   `protobuf:"varint,1,opt,name=disconnected,proto3" json:"disconnected,omitempty"`
	Warnings       []string               `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	CleanupActions []string               `protobuf:"bytes,3,rep,name=cleanup_actions,json=cleanupActions,proto3" json:"cleanup_actions,omitempty"`
	Metadata       *OperationMetadata     `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DisconnectNetworkExtendedResponse) Reset() {
	*x = DisconnectNetworkExtendedResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectNetworkExtendedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectNetworkExtendedResponse) ProtoMessage() {}

func (x *DisconnectNetworkExtendedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectNetworkExtendedResponse.ProtoReflect.Descriptor instead.
func (*DisconnectNetworkExtendedResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{21}
}

func (x *DisconnectNetworkExtendedResponse) GetDisconnected() bool {
	if x != nil {
		return x.Disconnected
	}
	return false
}

func (x *DisconnectNetworkExtendedResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *DisconnectNetworkExtendedResponse) GetCleanupActions() []string {
	if x != nil {
		return x.CleanupActions
	}
	return nil
}

func (x *DisconnectNetworkExtendedResponse) GetMetadata() *OperationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Prune networks request/response
type PruneNetworksExtendedRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Namespace           string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Filters             map[string]string      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Force               bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	PruneSystemNetworks bool                   `protobuf:"varint,4,opt,name=prune_system_networks,json=pruneSystemNetworks,proto3" json:"prune_system_networks,omitempty"`
	TimeoutSeconds      int32                  `protobuf:"varint,5,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	DryRun              bool                   `protobuf:"varint,6,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// Advanced pruning options
	Until           string `protobuf:"bytes,7,opt,name=until,proto3" json:"until,omitempty"` // Prune networks older than this timestamp
	PruneUnusedOnly bool   `protobuf:"varint,8,opt,name=prune_unused_only,json=pruneUnusedOnly,proto3" json:"prune_unused_only,omitempty"`
	IncludeVolumes  bool   `protobuf:"varint,9,opt,name=include_volumes,json=includeVolumes,proto3" json:"include_volumes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PruneNetworksExtendedRequest) Reset() {
	*x = PruneNetworksExtendedRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PruneNetworksExtendedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PruneNetworksExtendedRequest) ProtoMessage() {}

func (x *PruneNetworksExtendedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PruneNetworksExtendedRequest.ProtoReflect.Descriptor instead.
func (*PruneNetworksExtendedRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{22}
}

func (x *PruneNetworksExtendedRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PruneNetworksExtendedRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *PruneNetworksExtendedRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *PruneNetworksExtendedRequest) GetPruneSystemNetworks() bool {
	if x != nil {
		return x.PruneSystemNetworks
	}
	return false
}

func (x *PruneNetworksExtendedRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *PruneNetworksExtendedRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *PruneNetworksExtendedRequest) GetUntil() string {
	if x != nil {
		return x.Until
	}
	return ""
}

func (x *PruneNetworksExtendedRequest) GetPruneUnusedOnly() bool {
	if x != nil {
		return x.PruneUnusedOnly
	}
	return false
}

func (x *PruneNetworksExtendedRequest) GetIncludeVolumes() bool {
	if x != nil {
		return x.IncludeVolumes
	}
	return false
}

type PruneNetworksExtendedResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Pruned         []string               `protobuf:"bytes,1,rep,name=pruned,proto3" json:"pruned,omitempty"`
	Failed         []string               `protobuf:"bytes,2,rep,name=failed,proto3" json:"failed,omitempty"`
	SpaceReclaimed int64                  `protobuf:"varint,3,opt,name=space_reclaimed,json=spaceReclaimed,proto3" json:"space_reclaimed,omitempty"`
	Warnings       []string               `protobuf:"bytes,4,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Results        []*OperationResult     `protobuf:"bytes,5,rep,name=results,proto3" json:"results,omitempty"`
	Metadata       *OperationMetadata     `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PruneNetworksExtendedResponse) Reset() {
	*x = PruneNetworksExtendedResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PruneNetworksExtendedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PruneNetworksExtendedResponse) ProtoMessage() {}

func (x *PruneNetworksExtendedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PruneNetworksExtendedResponse.ProtoReflect.Descriptor instead.
func (*PruneNetworksExtendedResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{23}
}

func (x *PruneNetworksExtendedResponse) GetPruned() []string {
	if x != nil {
		return x.Pruned
	}
	return nil
}

func (x *PruneNetworksExtendedResponse) GetFailed() []string {
	if x != nil {
		return x.Failed
	}
	return nil
}

func (x *PruneNetworksExtendedResponse) GetSpaceReclaimed() int64 {
	if x != nil {
		return x.SpaceReclaimed
	}
	return 0
}

func (x *PruneNetworksExtendedResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *PruneNetworksExtendedResponse) GetResults() []*OperationResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PruneNetworksExtendedResponse) GetMetadata() *OperationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Update network request/response
type UpdateNetworkRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Network   string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Namespace string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Updatable fields
	Labels  map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Options map[string]string `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Configuration updates
	EnableIcc     bool     `protobuf:"varint,5,opt,name=enable_icc,json=enableIcc,proto3" json:"enable_icc,omitempty"`
	Mtu           int32    `protobuf:"varint,6,opt,name=mtu,proto3" json:"mtu,omitempty"`
	FirewallRules []string `protobuf:"bytes,7,rep,name=firewall_rules,json=firewallRules,proto3" json:"firewall_rules,omitempty"`
	// Advanced updates
	IpamUpdate    *IPAMConfigExtended `protobuf:"bytes,8,opt,name=ipam_update,json=ipamUpdate,proto3" json:"ipam_update,omitempty"`
	AddIpam       bool                `protobuf:"varint,9,opt,name=add_ipam,json=addIpam,proto3" json:"add_ipam,omitempty"`          // Whether to add or replace IPAM config
	UpdateMask    string              `protobuf:"bytes,10,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"` // Field mask for partial updates
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNetworkRequest) Reset() {
	*x = UpdateNetworkRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNetworkRequest) ProtoMessage() {}

func (x *UpdateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNetworkRequest.ProtoReflect.Descriptor instead.
func (*UpdateNetworkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateNetworkRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *UpdateNetworkRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateNetworkRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateNetworkRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *UpdateNetworkRequest) GetEnableIcc() bool {
	if x != nil {
		return x.EnableIcc
	}
	return false
}

func (x *UpdateNetworkRequest) GetMtu() int32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *UpdateNetworkRequest) GetFirewallRules() []string {
	if x != nil {
		return x.FirewallRules
	}
	return nil
}

func (x *UpdateNetworkRequest) GetIpamUpdate() *IPAMConfigExtended {
	if x != nil {
		return x.IpamUpdate
	}
	return nil
}

func (x *UpdateNetworkRequest) GetAddIpam() bool {
	if x != nil {
		return x.AddIpam
	}
	return false
}

func (x *UpdateNetworkRequest) GetUpdateMask() string {
	if x != nil {
		return x.UpdateMask
	}
	return ""
}

type UpdateNetworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Updated       bool                   `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
	Network       *NetworkInfoExtended   `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Warnings      []string               `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Metadata      *OperationMetadata     `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNetworkResponse) Reset() {
	*x = UpdateNetworkResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNetworkResponse) ProtoMessage() {}

func (x *UpdateNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNetworkResponse.ProtoReflect.Descriptor instead.
func (*UpdateNetworkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateNetworkResponse) GetUpdated() bool {
	if x != nil {
		return x.Updated
	}
	return false
}

func (x *UpdateNetworkResponse) GetNetwork() *NetworkInfoExtended {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *UpdateNetworkResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *UpdateNetworkResponse) GetMetadata() *OperationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Network exists request/response
type NetworkExistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkExistsRequest) Reset() {
	*x = NetworkExistsRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkExistsRequest) ProtoMessage() {}

func (x *NetworkExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkExistsRequest.ProtoReflect.Descriptor instead.
func (*NetworkExistsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{26}
}

func (x *NetworkExistsRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *NetworkExistsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type NetworkExistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	NetworkId     string                 `protobuf:"bytes,2,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkExistsResponse) Reset() {
	*x = NetworkExistsResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkExistsResponse) ProtoMessage() {}

func (x *NetworkExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkExistsResponse.ProtoReflect.Descriptor instead.
func (*NetworkExistsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{27}
}

func (x *NetworkExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *NetworkExistsResponse) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

// Network events request/response
type NetworkEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Filters       map[string]string      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Since         *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=since,proto3" json:"since,omitempty"`
	Until         *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=until,proto3" json:"until,omitempty"`
	Follow        bool                   `protobuf:"varint,5,opt,name=follow,proto3" json:"follow,omitempty"`
	EventTypes    []string               `protobuf:"bytes,6,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkEventsRequest) Reset() {
	*x = NetworkEventsRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEventsRequest) ProtoMessage() {}

func (x *NetworkEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEventsRequest.ProtoReflect.Descriptor instead.
func (*NetworkEventsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{28}
}

func (x *NetworkEventsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NetworkEventsRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *NetworkEventsRequest) GetSince() *timestamp.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

func (x *NetworkEventsRequest) GetUntil() *timestamp.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

func (x *NetworkEventsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *NetworkEventsRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

type NetworkEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // create, remove, connect, disconnect, update
	NetworkId     string                 `protobuf:"bytes,2,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	NetworkName   string                 `protobuf:"bytes,3,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	ContainerId   string                 `protobuf:"bytes,4,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ContainerName string                 `protobuf:"bytes,5,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Message       string                 `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	Actor         string                 `protobuf:"bytes,9,opt,name=actor,proto3" json:"actor,omitempty"`
	// Event-specific data
	//
	// Types that are valid to be assigned to EventData:
	//
	//	*NetworkEvent_CreateEvent
	//	*NetworkEvent_RemoveEvent
	//	*NetworkEvent_ConnectEvent
	//	*NetworkEvent_DisconnectEvent
	//	*NetworkEvent_UpdateEvent
	EventData     isNetworkEvent_EventData `protobuf_oneof:"event_data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkEvent) Reset() {
	*x = NetworkEvent{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEvent) ProtoMessage() {}

func (x *NetworkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEvent.ProtoReflect.Descriptor instead.
func (*NetworkEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{29}
}

func (x *NetworkEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *NetworkEvent) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *NetworkEvent) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *NetworkEvent) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *NetworkEvent) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *NetworkEvent) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *NetworkEvent) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *NetworkEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NetworkEvent) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *NetworkEvent) GetEventData() isNetworkEvent_EventData {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *NetworkEvent) GetCreateEvent() *NetworkCreateEvent {
	if x != nil {
		if x, ok := x.EventData.(*NetworkEvent_CreateEvent); ok {
			return x.CreateEvent
		}
	}
	return nil
}

func (x *NetworkEvent) GetRemoveEvent() *NetworkRemoveEvent {
	if x != nil {
		if x, ok := x.EventData.(*NetworkEvent_RemoveEvent); ok {
			return x.RemoveEvent
		}
	}
	return nil
}

func (x *NetworkEvent) GetConnectEvent() *NetworkConnectEvent {
	if x != nil {
		if x, ok := x.EventData.(*NetworkEvent_ConnectEvent); ok {
			return x.ConnectEvent
		}
	}
	return nil
}

func (x *NetworkEvent) GetDisconnectEvent() *NetworkDisconnectEvent {
	if x != nil {
		if x, ok := x.EventData.(*NetworkEvent_DisconnectEvent); ok {
			return x.DisconnectEvent
		}
	}
	return nil
}

func (x *NetworkEvent) GetUpdateEvent() *NetworkUpdateEvent {
	if x != nil {
		if x, ok := x.EventData.(*NetworkEvent_UpdateEvent); ok {
			return x.UpdateEvent
		}
	}
	return nil
}

type isNetworkEvent_EventData interface {
	isNetworkEvent_EventData()
}

type NetworkEvent_CreateEvent struct {
	CreateEvent *NetworkCreateEvent `protobuf:"bytes,10,opt,name=create_event,json=createEvent,proto3,oneof"`
}

type NetworkEvent_RemoveEvent struct {
	RemoveEvent *NetworkRemoveEvent `protobuf:"bytes,11,opt,name=remove_event,json=removeEvent,proto3,oneof"`
}

type NetworkEvent_ConnectEvent struct {
	ConnectEvent *NetworkConnectEvent `protobuf:"bytes,12,opt,name=connect_event,json=connectEvent,proto3,oneof"`
}

type NetworkEvent_DisconnectEvent struct {
	DisconnectEvent *NetworkDisconnectEvent `protobuf:"bytes,13,opt,name=disconnect_event,json=disconnectEvent,proto3,oneof"`
}

type NetworkEvent_UpdateEvent struct {
	UpdateEvent *NetworkUpdateEvent `protobuf:"bytes,14,opt,name=update_event,json=updateEvent,proto3,oneof"`
}

func (*NetworkEvent_CreateEvent) isNetworkEvent_EventData() {}

func (*NetworkEvent_RemoveEvent) isNetworkEvent_EventData() {}

func (*NetworkEvent_ConnectEvent) isNetworkEvent_EventData() {}

func (*NetworkEvent_DisconnectEvent) isNetworkEvent_EventData() {}

func (*NetworkEvent_UpdateEvent) isNetworkEvent_EventData() {}

type NetworkCreateEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       *NetworkInfoExtended   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	DriverUsed    string                 `protobuf:"bytes,2,opt,name=driver_used,json=driverUsed,proto3" json:"driver_used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkCreateEvent) Reset() {
	*x = NetworkCreateEvent{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkCreateEvent) ProtoMessage() {}

func (x *NetworkCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkCreateEvent.ProtoReflect.Descriptor instead.
func (*NetworkCreateEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{30}
}

func (x *NetworkCreateEvent) GetNetwork() *NetworkInfoExtended {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *NetworkCreateEvent) GetDriverUsed() string {
	if x != nil {
		return x.DriverUsed
	}
	return ""
}

type NetworkRemoveEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	NetworkName   string                 `protobuf:"bytes,2,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	ForceRemoved  bool                   `protobuf:"varint,3,opt,name=force_removed,json=forceRemoved,proto3" json:"force_removed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkRemoveEvent) Reset() {
	*x = NetworkRemoveEvent{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkRemoveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkRemoveEvent) ProtoMessage() {}

func (x *NetworkRemoveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkRemoveEvent.ProtoReflect.Descriptor instead.
func (*NetworkRemoveEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{31}
}

func (x *NetworkRemoveEvent) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *NetworkRemoveEvent) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *NetworkRemoveEvent) GetForceRemoved() bool {
	if x != nil {
		return x.ForceRemoved
	}
	return false
}

type NetworkConnectEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	ContainerId   string                 `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	EndpointId    string                 `protobuf:"bytes,3,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	AssignedIp    string                 `protobuf:"bytes,4,opt,name=assigned_ip,json=assignedIp,proto3" json:"assigned_ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConnectEvent) Reset() {
	*x = NetworkConnectEvent{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConnectEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConnectEvent) ProtoMessage() {}

func (x *NetworkConnectEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConnectEvent.ProtoReflect.Descriptor instead.
func (*NetworkConnectEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{32}
}

func (x *NetworkConnectEvent) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *NetworkConnectEvent) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *NetworkConnectEvent) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

func (x *NetworkConnectEvent) GetAssignedIp() string {
	if x != nil {
		return x.AssignedIp
	}
	return ""
}

type NetworkDisconnectEvent struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NetworkId         string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	ContainerId       string                 `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	EndpointId        string                 `protobuf:"bytes,3,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	ForceDisconnected bool                   `protobuf:"varint,4,opt,name=force_disconnected,json=forceDisconnected,proto3" json:"force_disconnected,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NetworkDisconnectEvent) Reset() {
	*x = NetworkDisconnectEvent{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkDisconnectEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDisconnectEvent) ProtoMessage() {}

func (x *NetworkDisconnectEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDisconnectEvent.ProtoReflect.Descriptor instead.
func (*NetworkDisconnectEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{33}
}

func (x *NetworkDisconnectEvent) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *NetworkDisconnectEvent) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *NetworkDisconnectEvent) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

func (x *NetworkDisconnectEvent) GetForceDisconnected() bool {
	if x != nil {
		return x.ForceDisconnected
	}
	return false
}

type NetworkUpdateEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	UpdatedFields []string               `protobuf:"bytes,2,rep,name=updated_fields,json=updatedFields,proto3" json:"updated_fields,omitempty"`
	OldValues     map[string]string      `protobuf:"bytes,3,rep,name=old_values,json=oldValues,proto3" json:"old_values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NewValues     map[string]string      `protobuf:"bytes,4,rep,name=new_values,json=newValues,proto3" json:"new_values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkUpdateEvent) Reset() {
	*x = NetworkUpdateEvent{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkUpdateEvent) ProtoMessage() {}

func (x *NetworkUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkUpdateEvent.ProtoReflect.Descriptor instead.
func (*NetworkUpdateEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{34}
}

func (x *NetworkUpdateEvent) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *NetworkUpdateEvent) GetUpdatedFields() []string {
	if x != nil {
		return x.UpdatedFields
	}
	return nil
}

func (x *NetworkUpdateEvent) GetOldValues() map[string]string {
	if x != nil {
		return x.OldValues
	}
	return nil
}

func (x *NetworkUpdateEvent) GetNewValues() map[string]string {
	if x != nil {
		return x.NewValues
	}
	return nil
}

// Network stats request/response
type NetworkStatsRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Networks           []string               `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	Namespace          string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Stream             bool                   `protobuf:"varint,3,opt,name=stream,proto3" json:"stream,omitempty"`
	IntervalSeconds    int32                  `protobuf:"varint,4,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
	IncludeSystemStats bool                   `protobuf:"varint,5,opt,name=include_system_stats,json=includeSystemStats,proto3" json:"include_system_stats,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NetworkStatsRequest) Reset() {
	*x = NetworkStatsRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStatsRequest) ProtoMessage() {}

func (x *NetworkStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStatsRequest.ProtoReflect.Descriptor instead.
func (*NetworkStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{35}
}

func (x *NetworkStatsRequest) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *NetworkStatsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NetworkStatsRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

func (x *NetworkStatsRequest) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *NetworkStatsRequest) GetIncludeSystemStats() bool {
	if x != nil {
		return x.IncludeSystemStats
	}
	return false
}

type NetworkStatsResponse struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NetworkId   string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	NetworkName string                 `protobuf:"bytes,2,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	Stats       *NetworkMetrics        `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	Timestamp   *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// System-level network stats
	SystemStats   map[string]float64 `protobuf:"bytes,5,rep,name=system_stats,json=systemStats,proto3" json:"system_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Interfaces    []*InterfaceStats  `protobuf:"bytes,6,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkStatsResponse) Reset() {
	*x = NetworkStatsResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStatsResponse) ProtoMessage() {}

func (x *NetworkStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStatsResponse.ProtoReflect.Descriptor instead.
func (*NetworkStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{36}
}

func (x *NetworkStatsResponse) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *NetworkStatsResponse) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *NetworkStatsResponse) GetStats() *NetworkMetrics {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *NetworkStatsResponse) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *NetworkStatsResponse) GetSystemStats() map[string]float64 {
	if x != nil {
		return x.SystemStats
	}
	return nil
}

func (x *NetworkStatsResponse) GetInterfaces() []*InterfaceStats {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type InterfaceStats struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	InterfaceName   string                 `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	BytesSent       int64                  `protobuf:"varint,2,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived   int64                  `protobuf:"varint,3,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	PacketsSent     int64                  `protobuf:"varint,4,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsReceived int64                  `protobuf:"varint,5,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	Errors          int64                  `protobuf:"varint,6,opt,name=errors,proto3" json:"errors,omitempty"`
	Dropped         int64                  `protobuf:"varint,7,opt,name=dropped,proto3" json:"dropped,omitempty"`
	IsUp            bool                   `protobuf:"varint,8,opt,name=is_up,json=isUp,proto3" json:"is_up,omitempty"`
	Mtu             int32                  `protobuf:"varint,9,opt,name=mtu,proto3" json:"mtu,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InterfaceStats) Reset() {
	*x = InterfaceStats{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceStats) ProtoMessage() {}

func (x *InterfaceStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceStats.ProtoReflect.Descriptor instead.
func (*InterfaceStats) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{37}
}

func (x *InterfaceStats) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *InterfaceStats) GetBytesSent() int64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *InterfaceStats) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *InterfaceStats) GetPacketsSent() int64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *InterfaceStats) GetPacketsReceived() int64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *InterfaceStats) GetErrors() int64 {
	if x != nil {
		return x.Errors
	}
	return 0
}

func (x *InterfaceStats) GetDropped() int64 {
	if x != nil {
		return x.Dropped
	}
	return 0
}

func (x *InterfaceStats) GetIsUp() bool {
	if x != nil {
		return x.IsUp
	}
	return false
}

func (x *InterfaceStats) GetMtu() int32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

// Batch operations request/response
type BatchNetworkRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Operations     []*NetworkOperation    `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	Namespace      string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FailFast       bool                   `protobuf:"varint,3,opt,name=fail_fast,json=failFast,proto3" json:"fail_fast,omitempty"`
	Concurrency    int32                  `protobuf:"varint,4,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,5,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchNetworkRequest) Reset() {
	*x = BatchNetworkRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchNetworkRequest) ProtoMessage() {}

func (x *BatchNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchNetworkRequest.ProtoReflect.Descriptor instead.
func (*BatchNetworkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{38}
}

func (x *BatchNetworkRequest) GetOperations() []*NetworkOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *BatchNetworkRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *BatchNetworkRequest) GetFailFast() bool {
	if x != nil {
		return x.FailFast
	}
	return false
}

func (x *BatchNetworkRequest) GetConcurrency() int32 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

func (x *BatchNetworkRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type NetworkOperation struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	OperationId string                 `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Types that are valid to be assigned to Operation:
	//
	//	*NetworkOperation_Create
	//	*NetworkOperation_Remove
	//	*NetworkOperation_Connect
	//	*NetworkOperation_Disconnect
	//	*NetworkOperation_Update
	Operation     isNetworkOperation_Operation `protobuf_oneof:"operation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkOperation) Reset() {
	*x = NetworkOperation{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkOperation) ProtoMessage() {}

func (x *NetworkOperation) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkOperation.ProtoReflect.Descriptor instead.
func (*NetworkOperation) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{39}
}

func (x *NetworkOperation) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *NetworkOperation) GetOperation() isNetworkOperation_Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *NetworkOperation) GetCreate() *CreateNetworkExtendedRequest {
	if x != nil {
		if x, ok := x.Operation.(*NetworkOperation_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *NetworkOperation) GetRemove() *RemoveNetworkExtendedRequest {
	if x != nil {
		if x, ok := x.Operation.(*NetworkOperation_Remove); ok {
			return x.Remove
		}
	}
	return nil
}

func (x *NetworkOperation) GetConnect() *ConnectNetworkExtendedRequest {
	if x != nil {
		if x, ok := x.Operation.(*NetworkOperation_Connect); ok {
			return x.Connect
		}
	}
	return nil
}

func (x *NetworkOperation) GetDisconnect() *DisconnectNetworkExtendedRequest {
	if x != nil {
		if x, ok := x.Operation.(*NetworkOperation_Disconnect); ok {
			return x.Disconnect
		}
	}
	return nil
}

func (x *NetworkOperation) GetUpdate() *UpdateNetworkRequest {
	if x != nil {
		if x, ok := x.Operation.(*NetworkOperation_Update); ok {
			return x.Update
		}
	}
	return nil
}

type isNetworkOperation_Operation interface {
	isNetworkOperation_Operation()
}

type NetworkOperation_Create struct {
	Create *CreateNetworkExtendedRequest `protobuf:"bytes,2,opt,name=create,proto3,oneof"`
}

type NetworkOperation_Remove struct {
	Remove *RemoveNetworkExtendedRequest `protobuf:"bytes,3,opt,name=remove,proto3,oneof"`
}

type NetworkOperation_Connect struct {
	Connect *ConnectNetworkExtendedRequest `protobuf:"bytes,4,opt,name=connect,proto3,oneof"`
}

type NetworkOperation_Disconnect struct {
	Disconnect *DisconnectNetworkExtendedRequest `protobuf:"bytes,5,opt,name=disconnect,proto3,oneof"`
}

type NetworkOperation_Update struct {
	Update *UpdateNetworkRequest `protobuf:"bytes,6,opt,name=update,proto3,oneof"`
}

func (*NetworkOperation_Create) isNetworkOperation_Operation() {}

func (*NetworkOperation_Remove) isNetworkOperation_Operation() {}

func (*NetworkOperation_Connect) isNetworkOperation_Operation() {}

func (*NetworkOperation_Disconnect) isNetworkOperation_Operation() {}

func (*NetworkOperation_Update) isNetworkOperation_Operation() {}

type BatchNetworkResponse struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	OperationId  string                 `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	Success      bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*BatchNetworkResponse_CreateResult
	//	*BatchNetworkResponse_RemoveResult
	//	*BatchNetworkResponse_ConnectResult
	//	*BatchNetworkResponse_DisconnectResult
	//	*BatchNetworkResponse_UpdateResult
	Result        isBatchNetworkResponse_Result `protobuf_oneof:"result"`
	Metadata      *OperationMetadata            `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchNetworkResponse) Reset() {
	*x = BatchNetworkResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchNetworkResponse) ProtoMessage() {}

func (x *BatchNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchNetworkResponse.ProtoReflect.Descriptor instead.
func (*BatchNetworkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{40}
}

func (x *BatchNetworkResponse) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *BatchNetworkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchNetworkResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *BatchNetworkResponse) GetResult() isBatchNetworkResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BatchNetworkResponse) GetCreateResult() *CreateNetworkExtendedResponse {
	if x != nil {
		if x, ok := x.Result.(*BatchNetworkResponse_CreateResult); ok {
			return x.CreateResult
		}
	}
	return nil
}

func (x *BatchNetworkResponse) GetRemoveResult() *RemoveNetworkExtendedResponse {
	if x != nil {
		if x, ok := x.Result.(*BatchNetworkResponse_RemoveResult); ok {
			return x.RemoveResult
		}
	}
	return nil
}

func (x *BatchNetworkResponse) GetConnectResult() *ConnectNetworkExtendedResponse {
	if x != nil {
		if x, ok := x.Result.(*BatchNetworkResponse_ConnectResult); ok {
			return x.ConnectResult
		}
	}
	return nil
}

func (x *BatchNetworkResponse) GetDisconnectResult() *DisconnectNetworkExtendedResponse {
	if x != nil {
		if x, ok := x.Result.(*BatchNetworkResponse_DisconnectResult); ok {
			return x.DisconnectResult
		}
	}
	return nil
}

func (x *BatchNetworkResponse) GetUpdateResult() *UpdateNetworkResponse {
	if x != nil {
		if x, ok := x.Result.(*BatchNetworkResponse_UpdateResult); ok {
			return x.UpdateResult
		}
	}
	return nil
}

func (x *BatchNetworkResponse) GetMetadata() *OperationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isBatchNetworkResponse_Result interface {
	isBatchNetworkResponse_Result()
}

type BatchNetworkResponse_CreateResult struct {
	CreateResult *CreateNetworkExtendedResponse `protobuf:"bytes,4,opt,name=create_result,json=createResult,proto3,oneof"`
}

type BatchNetworkResponse_RemoveResult struct {
	RemoveResult *RemoveNetworkExtendedResponse `protobuf:"bytes,5,opt,name=remove_result,json=removeResult,proto3,oneof"`
}

type BatchNetworkResponse_ConnectResult struct {
	ConnectResult *ConnectNetworkExtendedResponse `protobuf:"bytes,6,opt,name=connect_result,json=connectResult,proto3,oneof"`
}

type BatchNetworkResponse_DisconnectResult struct {
	DisconnectResult *DisconnectNetworkExtendedResponse `protobuf:"bytes,7,opt,name=disconnect_result,json=disconnectResult,proto3,oneof"`
}

type BatchNetworkResponse_UpdateResult struct {
	UpdateResult *UpdateNetworkResponse `protobuf:"bytes,8,opt,name=update_result,json=updateResult,proto3,oneof"`
}

func (*BatchNetworkResponse_CreateResult) isBatchNetworkResponse_Result() {}

func (*BatchNetworkResponse_RemoveResult) isBatchNetworkResponse_Result() {}

func (*BatchNetworkResponse_ConnectResult) isBatchNetworkResponse_Result() {}

func (*BatchNetworkResponse_DisconnectResult) isBatchNetworkResponse_Result() {}

func (*BatchNetworkResponse_UpdateResult) isBatchNetworkResponse_Result() {}

// Bulk inspect request/response
type BulkInspectNetworkRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Networks          []string               `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	Namespace         string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Verbose           bool                   `protobuf:"varint,3,opt,name=verbose,proto3" json:"verbose,omitempty"`
	IncludeContainers bool                   `protobuf:"varint,4,opt,name=include_containers,json=includeContainers,proto3" json:"include_containers,omitempty"`
	IncludeMetrics    bool                   `protobuf:"varint,5,opt,name=include_metrics,json=includeMetrics,proto3" json:"include_metrics,omitempty"`
	Fields            []string               `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BulkInspectNetworkRequest) Reset() {
	*x = BulkInspectNetworkRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkInspectNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkInspectNetworkRequest) ProtoMessage() {}

func (x *BulkInspectNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkInspectNetworkRequest.ProtoReflect.Descriptor instead.
func (*BulkInspectNetworkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{41}
}

func (x *BulkInspectNetworkRequest) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *BulkInspectNetworkRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *BulkInspectNetworkRequest) GetVerbose() bool {
	if x != nil {
		return x.Verbose
	}
	return false
}

func (x *BulkInspectNetworkRequest) GetIncludeContainers() bool {
	if x != nil {
		return x.IncludeContainers
	}
	return false
}

func (x *BulkInspectNetworkRequest) GetIncludeMetrics() bool {
	if x != nil {
		return x.IncludeMetrics
	}
	return false
}

func (x *BulkInspectNetworkRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type BulkInspectNetworkResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Results       []*NetworkInspectResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                   `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	SuccessCount  int32                   `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	ErrorCount    int32                   `protobuf:"varint,4,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	Warnings      []string                `protobuf:"bytes,5,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Metadata      *OperationMetadata      `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkInspectNetworkResponse) Reset() {
	*x = BulkInspectNetworkResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkInspectNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkInspectNetworkResponse) ProtoMessage() {}

func (x *BulkInspectNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkInspectNetworkResponse.ProtoReflect.Descriptor instead.
func (*BulkInspectNetworkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{42}
}

func (x *BulkInspectNetworkResponse) GetResults() []*NetworkInspectResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BulkInspectNetworkResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *BulkInspectNetworkResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BulkInspectNetworkResponse) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *BulkInspectNetworkResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *BulkInspectNetworkResponse) GetMetadata() *OperationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type NetworkInspectResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	NetworkInfo   *NetworkInfoExtended   `protobuf:"bytes,4,opt,name=network_info,json=networkInfo,proto3" json:"network_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInspectResult) Reset() {
	*x = NetworkInspectResult{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInspectResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInspectResult) ProtoMessage() {}

func (x *NetworkInspectResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInspectResult.ProtoReflect.Descriptor instead.
func (*NetworkInspectResult) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{43}
}

func (x *NetworkInspectResult) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *NetworkInspectResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NetworkInspectResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *NetworkInspectResult) GetNetworkInfo() *NetworkInfoExtended {
	if x != nil {
		return x.NetworkInfo
	}
	return nil
}

// List network drivers request/response
type ListNetworkDriversRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Namespace         string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	IncludePluginInfo bool                   `protobuf:"varint,2,opt,name=include_plugin_info,json=includePluginInfo,proto3" json:"include_plugin_info,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListNetworkDriversRequest) Reset() {
	*x = ListNetworkDriversRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworkDriversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkDriversRequest) ProtoMessage() {}

func (x *ListNetworkDriversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworkDriversRequest.ProtoReflect.Descriptor instead.
func (*ListNetworkDriversRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{44}
}

func (x *ListNetworkDriversRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListNetworkDriversRequest) GetIncludePluginInfo() bool {
	if x != nil {
		return x.IncludePluginInfo
	}
	return false
}

type ListNetworkDriversResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Drivers       []*NetworkDriver       `protobuf:"bytes,1,rep,name=drivers,proto3" json:"drivers,omitempty"`
	Warnings      []string               `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworkDriversResponse) Reset() {
	*x = ListNetworkDriversResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworkDriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkDriversResponse) ProtoMessage() {}

func (x *ListNetworkDriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworkDriversResponse.ProtoReflect.Descriptor instead.
func (*ListNetworkDriversResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{45}
}

func (x *ListNetworkDriversResponse) GetDrivers() []*NetworkDriver {
	if x != nil {
		return x.Drivers
	}
	return nil
}

func (x *ListNetworkDriversResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type NetworkDriver struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Name         string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version      string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Description  string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Capabilities []string               `protobuf:"bytes,4,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	Options      map[string]string      `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IsAvailable  bool                   `protobuf:"varint,6,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	IsDefault    bool                   `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	// Plugin information
	PluginPath    string            `protobuf:"bytes,8,opt,name=plugin_path,json=pluginPath,proto3" json:"plugin_path,omitempty"`
	PluginConfig  map[string]string `protobuf:"bytes,9,rep,name=plugin_config,json=pluginConfig,proto3" json:"plugin_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkDriver) Reset() {
	*x = NetworkDriver{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkDriver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDriver) ProtoMessage() {}

func (x *NetworkDriver) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDriver.ProtoReflect.Descriptor instead.
func (*NetworkDriver) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{46}
}

func (x *NetworkDriver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkDriver) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NetworkDriver) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NetworkDriver) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *NetworkDriver) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *NetworkDriver) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *NetworkDriver) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *NetworkDriver) GetPluginPath() string {
	if x != nil {
		return x.PluginPath
	}
	return ""
}

func (x *NetworkDriver) GetPluginConfig() map[string]string {
	if x != nil {
		return x.PluginConfig
	}
	return nil
}

// Get network config request/response
type GetNetworkConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Format        string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"` // json, yaml, raw
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkConfigRequest) Reset() {
	*x = GetNetworkConfigRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkConfigRequest) ProtoMessage() {}

func (x *GetNetworkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkConfigRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{47}
}

func (x *GetNetworkConfigRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetNetworkConfigRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetNetworkConfigRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type GetNetworkConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        string                 `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Format        string                 `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	ConfigPath    string                 `protobuf:"bytes,3,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
	Warnings      []string               `protobuf:"bytes,4,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkConfigResponse) Reset() {
	*x = GetNetworkConfigResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkConfigResponse) ProtoMessage() {}

func (x *GetNetworkConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkConfigResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{48}
}

func (x *GetNetworkConfigResponse) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *GetNetworkConfigResponse) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *GetNetworkConfigResponse) GetConfigPath() string {
	if x != nil {
		return x.ConfigPath
	}
	return ""
}

func (x *GetNetworkConfigResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// Validate network config request/response
type ValidateNetworkConfigRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Config           string                 `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	ConfigPath       string                 `protobuf:"bytes,2,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
	Format           string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"` // json, yaml
	StrictValidation bool                   `protobuf:"varint,4,opt,name=strict_validation,json=strictValidation,proto3" json:"strict_validation,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ValidateNetworkConfigRequest) Reset() {
	*x = ValidateNetworkConfigRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateNetworkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateNetworkConfigRequest) ProtoMessage() {}

func (x *ValidateNetworkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateNetworkConfigRequest.ProtoReflect.Descriptor instead.
func (*ValidateNetworkConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{49}
}

func (x *ValidateNetworkConfigRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ValidateNetworkConfigRequest) GetConfigPath() string {
	if x != nil {
		return x.ConfigPath
	}
	return ""
}

func (x *ValidateNetworkConfigRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *ValidateNetworkConfigRequest) GetStrictValidation() bool {
	if x != nil {
		return x.StrictValidation
	}
	return false
}

type ValidateNetworkConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Errors        []string               `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	Warnings      []string               `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Issues        []*ValidationIssue     `protobuf:"bytes,4,rep,name=issues,proto3" json:"issues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateNetworkConfigResponse) Reset() {
	*x = ValidateNetworkConfigResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateNetworkConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateNetworkConfigResponse) ProtoMessage() {}

func (x *ValidateNetworkConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateNetworkConfigResponse.ProtoReflect.Descriptor instead.
func (*ValidateNetworkConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{50}
}

func (x *ValidateNetworkConfigResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateNetworkConfigResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ValidateNetworkConfigResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *ValidateNetworkConfigResponse) GetIssues() []*ValidationIssue {
	if x != nil {
		return x.Issues
	}
	return nil
}

type ValidationIssue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Severity      string                 `protobuf:"bytes,1,opt,name=severity,proto3" json:"severity,omitempty"` // error, warning, info
	Field         string                 `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Suggestion    string                 `protobuf:"bytes,4,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationIssue) Reset() {
	*x = ValidationIssue{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationIssue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationIssue) ProtoMessage() {}

func (x *ValidationIssue) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationIssue.ProtoReflect.Descriptor instead.
func (*ValidationIssue) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{51}
}

func (x *ValidationIssue) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *ValidationIssue) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ValidationIssue) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationIssue) GetSuggestion() string {
	if x != nil {
		return x.Suggestion
	}
	return ""
}

// Diagnose network request/response
type DiagnoseNetworkRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Network           string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Namespace         string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	DeepInspection    bool                   `protobuf:"varint,3,opt,name=deep_inspection,json=deepInspection,proto3" json:"deep_inspection,omitempty"`
	CheckConnectivity bool                   `protobuf:"varint,4,opt,name=check_connectivity,json=checkConnectivity,proto3" json:"check_connectivity,omitempty"`
	CheckDns          bool                   `protobuf:"varint,5,opt,name=check_dns,json=checkDns,proto3" json:"check_dns,omitempty"`
	TargetContainers  []string               `protobuf:"bytes,6,rep,name=target_containers,json=targetContainers,proto3" json:"target_containers,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DiagnoseNetworkRequest) Reset() {
	*x = DiagnoseNetworkRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnoseNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnoseNetworkRequest) ProtoMessage() {}

func (x *DiagnoseNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnoseNetworkRequest.ProtoReflect.Descriptor instead.
func (*DiagnoseNetworkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{52}
}

func (x *DiagnoseNetworkRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DiagnoseNetworkRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DiagnoseNetworkRequest) GetDeepInspection() bool {
	if x != nil {
		return x.DeepInspection
	}
	return false
}

func (x *DiagnoseNetworkRequest) GetCheckConnectivity() bool {
	if x != nil {
		return x.CheckConnectivity
	}
	return false
}

func (x *DiagnoseNetworkRequest) GetCheckDns() bool {
	if x != nil {
		return x.CheckDns
	}
	return false
}

func (x *DiagnoseNetworkRequest) GetTargetContainers() []string {
	if x != nil {
		return x.TargetContainers
	}
	return nil
}

type DiagnoseNetworkResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NetworkId       string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	NetworkName     string                 `protobuf:"bytes,2,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	OverallStatus   string                 `protobuf:"bytes,3,opt,name=overall_status,json=overallStatus,proto3" json:"overall_status,omitempty"` // healthy, degraded, unhealthy
	Results         []*DiagnosticResult    `protobuf:"bytes,4,rep,name=results,proto3" json:"results,omitempty"`
	Recommendations []string               `protobuf:"bytes,5,rep,name=recommendations,proto3" json:"recommendations,omitempty"`
	DebugInfo       map[string]string      `protobuf:"bytes,6,rep,name=debug_info,json=debugInfo,proto3" json:"debug_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DiagnoseNetworkResponse) Reset() {
	*x = DiagnoseNetworkResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnoseNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnoseNetworkResponse) ProtoMessage() {}

func (x *DiagnoseNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnoseNetworkResponse.ProtoReflect.Descriptor instead.
func (*DiagnoseNetworkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{53}
}

func (x *DiagnoseNetworkResponse) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *DiagnoseNetworkResponse) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *DiagnoseNetworkResponse) GetOverallStatus() string {
	if x != nil {
		return x.OverallStatus
	}
	return ""
}

func (x *DiagnoseNetworkResponse) GetResults() []*DiagnosticResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *DiagnoseNetworkResponse) GetRecommendations() []string {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

func (x *DiagnoseNetworkResponse) GetDebugInfo() map[string]string {
	if x != nil {
		return x.DebugInfo
	}
	return nil
}

type DiagnosticResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TestName        string                 `protobuf:"bytes,1,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
	Status          string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // pass, fail, warning, skip
	Message         string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Details         map[string]string      `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ExecutionTimeMs float64                `protobuf:"fixed64,5,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DiagnosticResult) Reset() {
	*x = DiagnosticResult{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnosticResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticResult) ProtoMessage() {}

func (x *DiagnosticResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticResult.ProtoReflect.Descriptor instead.
func (*DiagnosticResult) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{54}
}

func (x *DiagnosticResult) GetTestName() string {
	if x != nil {
		return x.TestName
	}
	return ""
}

func (x *DiagnosticResult) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DiagnosticResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DiagnosticResult) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *DiagnosticResult) GetExecutionTimeMs() float64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

// Network connectivity request/response
type NetworkConnectivityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceNetwork string                 `protobuf:"bytes,1,opt,name=source_network,json=sourceNetwork,proto3" json:"source_network,omitempty"`
	TargetNetwork string                 `protobuf:"bytes,2,opt,name=target_network,json=targetNetwork,proto3" json:"target_network,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Test parameters
	SourceContainer string   `protobuf:"bytes,4,opt,name=source_container,json=sourceContainer,proto3" json:"source_container,omitempty"`
	TargetContainer string   `protobuf:"bytes,5,opt,name=target_container,json=targetContainer,proto3" json:"target_container,omitempty"`
	Protocols       []string `protobuf:"bytes,6,rep,name=protocols,proto3" json:"protocols,omitempty"` // tcp, udp, icmp
	Ports           []int32  `protobuf:"varint,7,rep,packed,name=ports,proto3" json:"ports,omitempty"`
	TimeoutSeconds  int32    `protobuf:"varint,8,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	RetryCount      int32    `protobuf:"varint,9,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkConnectivityRequest) Reset() {
	*x = NetworkConnectivityRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConnectivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConnectivityRequest) ProtoMessage() {}

func (x *NetworkConnectivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConnectivityRequest.ProtoReflect.Descriptor instead.
func (*NetworkConnectivityRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{55}
}

func (x *NetworkConnectivityRequest) GetSourceNetwork() string {
	if x != nil {
		return x.SourceNetwork
	}
	return ""
}

func (x *NetworkConnectivityRequest) GetTargetNetwork() string {
	if x != nil {
		return x.TargetNetwork
	}
	return ""
}

func (x *NetworkConnectivityRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NetworkConnectivityRequest) GetSourceContainer() string {
	if x != nil {
		return x.SourceContainer
	}
	return ""
}

func (x *NetworkConnectivityRequest) GetTargetContainer() string {
	if x != nil {
		return x.TargetContainer
	}
	return ""
}

func (x *NetworkConnectivityRequest) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *NetworkConnectivityRequest) GetPorts() []int32 {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *NetworkConnectivityRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *NetworkConnectivityRequest) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

type NetworkConnectivityResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Reachable        bool                   `protobuf:"varint,1,opt,name=reachable,proto3" json:"reachable,omitempty"`
	Results          []*ConnectivityResult  `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	Summary          string                 `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	AverageLatencyMs float64                `protobuf:"fixed64,4,opt,name=average_latency_ms,json=averageLatencyMs,proto3" json:"average_latency_ms,omitempty"`
	PacketLossRate   float64                `protobuf:"fixed64,5,opt,name=packet_loss_rate,json=packetLossRate,proto3" json:"packet_loss_rate,omitempty"`
	Warnings         []string               `protobuf:"bytes,6,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NetworkConnectivityResponse) Reset() {
	*x = NetworkConnectivityResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConnectivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConnectivityResponse) ProtoMessage() {}

func (x *NetworkConnectivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConnectivityResponse.ProtoReflect.Descriptor instead.
func (*NetworkConnectivityResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{56}
}

func (x *NetworkConnectivityResponse) GetReachable() bool {
	if x != nil {
		return x.Reachable
	}
	return false
}

func (x *NetworkConnectivityResponse) GetResults() []*ConnectivityResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *NetworkConnectivityResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *NetworkConnectivityResponse) GetAverageLatencyMs() float64 {
	if x != nil {
		return x.AverageLatencyMs
	}
	return 0
}

func (x *NetworkConnectivityResponse) GetPacketLossRate() float64 {
	if x != nil {
		return x.PacketLossRate
	}
	return 0
}

func (x *NetworkConnectivityResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type ConnectivityResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Protocol      string                 `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	LatencyMs     float64                `protobuf:"fixed64,4,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	AttemptCount  int32                  `protobuf:"varint,6,opt,name=attempt_count,json=attemptCount,proto3" json:"attempt_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectivityResult) Reset() {
	*x = ConnectivityResult{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectivityResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectivityResult) ProtoMessage() {}

func (x *ConnectivityResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectivityResult.ProtoReflect.Descriptor instead.
func (*ConnectivityResult) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{57}
}

func (x *ConnectivityResult) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ConnectivityResult) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ConnectivityResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConnectivityResult) GetLatencyMs() float64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *ConnectivityResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ConnectivityResult) GetAttemptCount() int32 {
	if x != nil {
		return x.AttemptCount
	}
	return 0
}

// Get supported features request/response
type GetNetworkSupportedFeaturesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkSupportedFeaturesRequest) Reset() {
	*x = GetNetworkSupportedFeaturesRequest{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkSupportedFeaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkSupportedFeaturesRequest) ProtoMessage() {}

func (x *GetNetworkSupportedFeaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkSupportedFeaturesRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkSupportedFeaturesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{58}
}

func (x *GetNetworkSupportedFeaturesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type GetNetworkSupportedFeaturesResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Features      *NetworkSupportedFeatures `protobuf:"bytes,1,opt,name=features,proto3" json:"features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkSupportedFeaturesResponse) Reset() {
	*x = GetNetworkSupportedFeaturesResponse{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkSupportedFeaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkSupportedFeaturesResponse) ProtoMessage() {}

func (x *GetNetworkSupportedFeaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkSupportedFeaturesResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkSupportedFeaturesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{59}
}

func (x *GetNetworkSupportedFeaturesResponse) GetFeatures() *NetworkSupportedFeatures {
	if x != nil {
		return x.Features
	}
	return nil
}

type NetworkSupportedFeatures struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Drivers     []string               `protobuf:"bytes,1,rep,name=drivers,proto3" json:"drivers,omitempty"`
	IpamDrivers []string               `protobuf:"bytes,2,rep,name=ipam_drivers,json=ipamDrivers,proto3" json:"ipam_drivers,omitempty"`
	CniPlugins  []string               `protobuf:"bytes,3,rep,name=cni_plugins,json=cniPlugins,proto3" json:"cni_plugins,omitempty"`
	// Feature flags
	SupportsIpv6             bool `protobuf:"varint,4,opt,name=supports_ipv6,json=supportsIpv6,proto3" json:"supports_ipv6,omitempty"`
	SupportsMacvlan          bool `protobuf:"varint,5,opt,name=supports_macvlan,json=supportsMacvlan,proto3" json:"supports_macvlan,omitempty"`
	SupportsOverlay          bool `protobuf:"varint,6,opt,name=supports_overlay,json=supportsOverlay,proto3" json:"supports_overlay,omitempty"`
	SupportsEncryption       bool `protobuf:"varint,7,opt,name=supports_encryption,json=supportsEncryption,proto3" json:"supports_encryption,omitempty"`
	SupportsMulticast        bool `protobuf:"varint,8,opt,name=supports_multicast,json=supportsMulticast,proto3" json:"supports_multicast,omitempty"`
	SupportsVlan             bool `protobuf:"varint,9,opt,name=supports_vlan,json=supportsVlan,proto3" json:"supports_vlan,omitempty"`
	SupportsBridgeNetworking bool `protobuf:"varint,10,opt,name=supports_bridge_networking,json=supportsBridgeNetworking,proto3" json:"supports_bridge_networking,omitempty"`
	SupportsHostNetworking   bool `protobuf:"varint,11,opt,name=supports_host_networking,json=supportsHostNetworking,proto3" json:"supports_host_networking,omitempty"`
	SupportsNoneNetworking   bool `protobuf:"varint,12,opt,name=supports_none_networking,json=supportsNoneNetworking,proto3" json:"supports_none_networking,omitempty"`
	// Advanced features
	SupportsNetworkPolicies    bool `protobuf:"varint,13,opt,name=supports_network_policies,json=supportsNetworkPolicies,proto3" json:"supports_network_policies,omitempty"`
	SupportsServiceDiscovery   bool `protobuf:"varint,14,opt,name=supports_service_discovery,json=supportsServiceDiscovery,proto3" json:"supports_service_discovery,omitempty"`
	SupportsLoadBalancing      bool `protobuf:"varint,15,opt,name=supports_load_balancing,json=supportsLoadBalancing,proto3" json:"supports_load_balancing,omitempty"`
	SupportsTrafficShaping     bool `protobuf:"varint,16,opt,name=supports_traffic_shaping,json=supportsTrafficShaping,proto3" json:"supports_traffic_shaping,omitempty"`
	SupportsNetworkMonitoring  bool `protobuf:"varint,17,opt,name=supports_network_monitoring,json=supportsNetworkMonitoring,proto3" json:"supports_network_monitoring,omitempty"`
	SupportsNetworkDiagnostics bool `protobuf:"varint,18,opt,name=supports_network_diagnostics,json=supportsNetworkDiagnostics,proto3" json:"supports_network_diagnostics,omitempty"`
	// Version information
	CniVersion           string            `protobuf:"bytes,19,opt,name=cni_version,json=cniVersion,proto3" json:"cni_version,omitempty"`
	MinNerdctlVersion    string            `protobuf:"bytes,20,opt,name=min_nerdctl_version,json=minNerdctlVersion,proto3" json:"min_nerdctl_version,omitempty"`
	MaxNerdctlVersion    string            `protobuf:"bytes,21,opt,name=max_nerdctl_version,json=maxNerdctlVersion,proto3" json:"max_nerdctl_version,omitempty"`
	Capabilities         map[string]string `protobuf:"bytes,22,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ExperimentalFeatures []string          `protobuf:"bytes,23,rep,name=experimental_features,json=experimentalFeatures,proto3" json:"experimental_features,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NetworkSupportedFeatures) Reset() {
	*x = NetworkSupportedFeatures{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkSupportedFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkSupportedFeatures) ProtoMessage() {}

func (x *NetworkSupportedFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkSupportedFeatures.ProtoReflect.Descriptor instead.
func (*NetworkSupportedFeatures) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{60}
}

func (x *NetworkSupportedFeatures) GetDrivers() []string {
	if x != nil {
		return x.Drivers
	}
	return nil
}

func (x *NetworkSupportedFeatures) GetIpamDrivers() []string {
	if x != nil {
		return x.IpamDrivers
	}
	return nil
}

func (x *NetworkSupportedFeatures) GetCniPlugins() []string {
	if x != nil {
		return x.CniPlugins
	}
	return nil
}

func (x *NetworkSupportedFeatures) GetSupportsIpv6() bool {
	if x != nil {
		return x.SupportsIpv6
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsMacvlan() bool {
	if x != nil {
		return x.SupportsMacvlan
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsOverlay() bool {
	if x != nil {
		return x.SupportsOverlay
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsEncryption() bool {
	if x != nil {
		return x.SupportsEncryption
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsMulticast() bool {
	if x != nil {
		return x.SupportsMulticast
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsVlan() bool {
	if x != nil {
		return x.SupportsVlan
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsBridgeNetworking() bool {
	if x != nil {
		return x.SupportsBridgeNetworking
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsHostNetworking() bool {
	if x != nil {
		return x.SupportsHostNetworking
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsNoneNetworking() bool {
	if x != nil {
		return x.SupportsNoneNetworking
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsNetworkPolicies() bool {
	if x != nil {
		return x.SupportsNetworkPolicies
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsServiceDiscovery() bool {
	if x != nil {
		return x.SupportsServiceDiscovery
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsLoadBalancing() bool {
	if x != nil {
		return x.SupportsLoadBalancing
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsTrafficShaping() bool {
	if x != nil {
		return x.SupportsTrafficShaping
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsNetworkMonitoring() bool {
	if x != nil {
		return x.SupportsNetworkMonitoring
	}
	return false
}

func (x *NetworkSupportedFeatures) GetSupportsNetworkDiagnostics() bool {
	if x != nil {
		return x.SupportsNetworkDiagnostics
	}
	return false
}

func (x *NetworkSupportedFeatures) GetCniVersion() string {
	if x != nil {
		return x.CniVersion
	}
	return ""
}

func (x *NetworkSupportedFeatures) GetMinNerdctlVersion() string {
	if x != nil {
		return x.MinNerdctlVersion
	}
	return ""
}

func (x *NetworkSupportedFeatures) GetMaxNerdctlVersion() string {
	if x != nil {
		return x.MaxNerdctlVersion
	}
	return ""
}

func (x *NetworkSupportedFeatures) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *NetworkSupportedFeatures) GetExperimentalFeatures() []string {
	if x != nil {
		return x.ExperimentalFeatures
	}
	return nil
}

// Common operation result and metadata
type OperationResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationResult) Reset() {
	*x = OperationResult{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationResult) ProtoMessage() {}

func (x *OperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationResult.ProtoReflect.Descriptor instead.
func (*OperationResult) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{61}
}

func (x *OperationResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OperationResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OperationResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *OperationResult) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *OperationResult) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type OperationMetadata struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OperationId    string                 `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	StartedAt      *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt    *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	DurationMs     float64                `protobuf:"fixed64,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	NerdctlVersion string                 `protobuf:"bytes,5,opt,name=nerdctl_version,json=nerdctlVersion,proto3" json:"nerdctl_version,omitempty"`
	CniVersion     string                 `protobuf:"bytes,6,opt,name=cni_version,json=cniVersion,proto3" json:"cni_version,omitempty"`
	SystemInfo     map[string]string      `protobuf:"bytes,7,rep,name=system_info,json=systemInfo,proto3" json:"system_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *OperationMetadata) Reset() {
	*x = OperationMetadata{}
	mi := &file_api_proto_network_service_extended_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationMetadata) ProtoMessage() {}

func (x *OperationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_network_service_extended_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationMetadata.ProtoReflect.Descriptor instead.
func (*OperationMetadata) Descriptor() ([]byte, []int) {
	return file_api_proto_network_service_extended_proto_rawDescGZIP(), []int{62}
}

func (x *OperationMetadata) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *OperationMetadata) GetStartedAt() *timestamp.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *OperationMetadata) GetCompletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *OperationMetadata) GetDurationMs() float64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *OperationMetadata) GetNerdctlVersion() string {
	if x != nil {
		return x.NerdctlVersion
	}
	return ""
}

func (x *OperationMetadata) GetCniVersion() string {
	if x != nil {
		return x.CniVersion
	}
	return ""
}

func (x *OperationMetadata) GetSystemInfo() map[string]string {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

var File_api_proto_network_service_extended_proto protoreflect.FileDescriptor

const file_api_proto_network_service_extended_proto_rawDesc = "" +
	"\n" +
	"(api/proto/network_service_extended.proto\x12\n" +
	"nerdctl.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x16api/proto/common.proto\x1a\x1fapi/proto/network_service.proto\"\xee\t\n" +
	"\x13NetworkInfoExtended\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06driver\x18\x03 \x01(\tR\x06driver\x12\x14\n" +
	"\x05scope\x18\x04 \x01(\tR\x05scope\x122\n" +
	"\x04ipam\x18\x05 \x01(\v2\x1e.nerdctl.v1.IPAMConfigExtendedR\x04ipam\x12F\n" +
	"\aoptions\x18\x06 \x03(\v2,.nerdctl.v1.NetworkInfoExtended.OptionsEntryR\aoptions\x12C\n" +
	"\x06labels\x18\a \x03(\v2+.nerdctl.v1.NetworkInfoExtended.LabelsEntryR\x06labels\x12\x1a\n" +
	"\binternal\x18\b \x01(\bR\binternal\x12\x1e\n" +
	"\n" +
	"attachable\x18\t \x01(\bR\n" +
	"attachable\x12\x18\n" +
	"\aingress\x18\n" +
	" \x01(\bR\aingress\x12!\n" +
	"\fipv6_enabled\x18\v \x01(\bR\vipv6Enabled\x12\x1d\n" +
	"\n" +
	"enable_icc\x18\f \x01(\bR\tenableIcc\x124\n" +
	"\acreated\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x12D\n" +
	"\n" +
	"containers\x18\x0f \x03(\v2$.nerdctl.v1.NetworkContainerExtendedR\n" +
	"containers\x129\n" +
	"\tendpoints\x18\x10 \x03(\v2\x1b.nerdctl.v1.NetworkEndpointR\tendpoints\x12.\n" +
	"\x05state\x18\x11 \x01(\v2\x18.nerdctl.v1.NetworkStateR\x05state\x121\n" +
	"\x06config\x18\x12 \x01(\v2\x19.nerdctl.v1.NetworkConfigR\x06config\x124\n" +
	"\ametrics\x18\x13 \x01(\v2\x1a.nerdctl.v1.NetworkMetricsR\ametrics\x12P\n" +
	"\vdriver_data\x18\x14 \x03(\v2/.nerdctl.v1.NetworkInfoExtended.DriverDataEntryR\n" +
	"driverData\x12#\n" +
	"\rsubnet_ranges\x18\x15 \x03(\tR\fsubnetRanges\x12+\n" +
	"\x11gateway_addresses\x18\x16 \x03(\tR\x10gatewayAddresses\x12%\n" +
	"\x0efirewall_rules\x18\x17 \x03(\tR\rfirewallRules\x12%\n" +
	"\x0eisolation_mode\x18\x18 \x01(\tR\risolationMode\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a=\n" +
	"\x0fDriverDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc3\x04\n" +
	"\x12IPAMConfigExtended\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x120\n" +
	"\asubnets\x18\x02 \x03(\v2\x16.nerdctl.v1.IPAMSubnetR\asubnets\x12E\n" +
	"\aoptions\x18\x03 \x03(\v2+.nerdctl.v1.IPAMConfigExtended.OptionsEntryR\aoptions\x12O\n" +
	"\vdriver_opts\x18\x04 \x03(\v2..nerdctl.v1.IPAMConfigExtended.DriverOptsEntryR\n" +
	"driverOpts\x12\x1f\n" +
	"\venable_dhcp\x18\x05 \x01(\bR\n" +
	"enableDhcp\x12(\n" +
	"\x10dhcp_range_start\x18\x06 \x01(\tR\x0edhcpRangeStart\x12$\n" +
	"\x0edhcp_range_end\x18\a \x01(\tR\fdhcpRangeEnd\x12!\n" +
	"\freserved_ips\x18\b \x03(\tR\vreservedIps\x12\x1d\n" +
	"\n" +
	"dns_server\x18\t \x01(\tR\tdnsServer\x12\x1d\n" +
	"\n" +
	"dns_search\x18\n" +
	" \x03(\tR\tdnsSearch\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a=\n" +
	"\x0fDriverOptsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfd\x02\n" +
	"\n" +
	"IPAMSubnet\x12\x16\n" +
	"\x06subnet\x18\x01 \x01(\tR\x06subnet\x12\x18\n" +
	"\agateway\x18\x02 \x01(\tR\agateway\x12\x19\n" +
	"\bip_range\x18\x03 \x01(\tR\aipRange\x12M\n" +
	"\raux_addresses\x18\x04 \x03(\v2(.nerdctl.v1.IPAMSubnet.AuxAddressesEntryR\fauxAddresses\x12\x17\n" +
	"\avlan_id\x18\x05 \x01(\x05R\x06vlanId\x12#\n" +
	"\ravailable_ips\x18\x06 \x01(\x05R\favailableIps\x12#\n" +
	"\rallocated_ips\x18\a \x01(\x05R\fallocatedIps\x12/\n" +
	"\x13allocated_addresses\x18\b \x03(\tR\x12allocatedAddresses\x1a?\n" +
	"\x11AuxAddressesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc4\x04\n" +
	"\x18NetworkContainerExtended\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12!\n" +
	"\fipv4_address\x18\x04 \x01(\tR\vipv4Address\x12!\n" +
	"\fipv6_address\x18\x05 \x01(\tR\vipv6Address\x12\x1f\n" +
	"\vmac_address\x18\x06 \x01(\tR\n" +
	"macAddress\x12\x18\n" +
	"\aaliases\x18\a \x03(\tR\aaliases\x12\x14\n" +
	"\x05links\x18\b \x03(\tR\x05links\x12Q\n" +
	"\tendpoints\x18\t \x03(\v23.nerdctl.v1.NetworkContainerExtended.EndpointsEntryR\tendpoints\x126\n" +
	"\x05state\x18\n" +
	" \x01(\x0e2 .nerdctl.v1.NetworkEndpointStateR\x05state\x12=\n" +
	"\fconnected_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vconnectedAt\x12<\n" +
	"\rport_mappings\x18\f \x03(\v2\x17.nerdctl.v1.PortMappingR\fportMappings\x1a<\n" +
	"\x0eEndpointsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x94\x04\n" +
	"\x0fNetworkEndpoint\x12\x1f\n" +
	"\vendpoint_id\x18\x01 \x01(\tR\n" +
	"endpointId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"network_id\x18\x03 \x01(\tR\tnetworkId\x12!\n" +
	"\fcontainer_id\x18\x04 \x01(\tR\vcontainerId\x12!\n" +
	"\fipv4_address\x18\x05 \x01(\tR\vipv4Address\x12!\n" +
	"\fipv6_address\x18\x06 \x01(\tR\vipv6Address\x12\x1f\n" +
	"\vmac_address\x18\a \x01(\tR\n" +
	"macAddress\x12\x1b\n" +
	"\tdns_names\x18\b \x03(\tR\bdnsNames\x12\x18\n" +
	"\aaliases\x18\t \x03(\tR\aaliases\x12B\n" +
	"\aoptions\x18\n" +
	" \x03(\v2(.nerdctl.v1.NetworkEndpoint.OptionsEntryR\aoptions\x126\n" +
	"\x05state\x18\v \x01(\x0e2 .nerdctl.v1.NetworkEndpointStateR\x05state\x124\n" +
	"\acreated\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd9\x02\n" +
	"\fNetworkState\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x16\n" +
	"\x06health\x18\x02 \x01(\tR\x06health\x12\x1d\n" +
	"\n" +
	"last_error\x18\x03 \x01(\tR\tlastError\x12'\n" +
	"\x0fcontainer_count\x18\x04 \x01(\x05R\x0econtainerCount\x12%\n" +
	"\x0eendpoint_count\x18\x05 \x01(\x05R\rendpointCount\x12?\n" +
	"\rlast_activity\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\flastActivity\x12\x1b\n" +
	"\tbridge_up\x18\a \x01(\bR\bbridgeUp\x12\x1f\n" +
	"\vdhcp_active\x18\b \x01(\bR\n" +
	"dhcpActive\x12+\n" +
	"\x11active_interfaces\x18\t \x03(\tR\x10activeInterfaces\"\x90\x06\n" +
	"\x15ExtendedNetworkConfig\x12\x1f\n" +
	"\vcni_version\x18\x01 \x01(\tR\n" +
	"cniVersion\x12&\n" +
	"\x0fcni_config_path\x18\x02 \x01(\tR\rcniConfigPath\x12\x1f\n" +
	"\vcni_plugins\x18\x03 \x03(\tR\n" +
	"cniPlugins\x12%\n" +
	"\x0eprimary_driver\x18\x04 \x01(\tR\rprimaryDriver\x12+\n" +
	"\x11available_drivers\x18\x05 \x03(\tR\x10availableDrivers\x12X\n" +
	"\rdriver_config\x18\x06 \x03(\v23.nerdctl.v1.ExtendedNetworkConfig.DriverConfigEntryR\fdriverConfig\x12\x10\n" +
	"\x03mtu\x18\a \x01(\x05R\x03mtu\x12!\n" +
	"\fhairpin_mode\x18\b \x01(\bR\vhairpinMode\x125\n" +
	"\x17bridge_nf_call_iptables\x18\t \x01(\bR\x14bridgeNfCallIptables\x127\n" +
	"\x18bridge_nf_call_ip6tables\x18\n" +
	" \x01(\bR\x15bridgeNfCallIp6tables\x12\x1d\n" +
	"\n" +
	"ip_forward\x18\v \x01(\bR\tipForward\x12\x17\n" +
	"\aip_masq\x18\f \x01(\bR\x06ipMasq\x12\x17\n" +
	"\avlan_id\x18\r \x01(\x05R\x06vlanId\x12)\n" +
	"\x10parent_interface\x18\x0e \x01(\tR\x0fparentInterface\x12+\n" +
	"\x11allowed_protocols\x18\x0f \x03(\tR\x10allowedProtocols\x12#\n" +
	"\rblocked_ports\x18\x10 \x03(\tR\fblockedPorts\x12+\n" +
	"\x11enable_encryption\x18\x11 \x01(\bR\x10enableEncryption\x1a?\n" +
	"\x11DriverConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd6\x04\n" +
	"\x0eNetworkMetrics\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x01 \x01(\x03R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\x02 \x01(\x03R\rbytesReceived\x12!\n" +
	"\fpackets_sent\x18\x03 \x01(\x03R\vpacketsSent\x12)\n" +
	"\x10packets_received\x18\x04 \x01(\x03R\x0fpacketsReceived\x12\x1b\n" +
	"\ttx_errors\x18\x05 \x01(\x03R\btxErrors\x12\x1b\n" +
	"\trx_errors\x18\x06 \x01(\x03R\brxErrors\x12\x1d\n" +
	"\n" +
	"tx_dropped\x18\a \x01(\x03R\ttxDropped\x12\x1d\n" +
	"\n" +
	"rx_dropped\x18\b \x01(\x03R\trxDropped\x12/\n" +
	"\x13current_connections\x18\t \x01(\x05R\x12currentConnections\x12)\n" +
	"\x10peak_connections\x18\n" +
	" \x01(\x05R\x0fpeakConnections\x12+\n" +
	"\x11total_connections\x18\v \x01(\x03R\x10totalConnections\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\f \x01(\x01R\tlatencyMs\x12'\n" +
	"\x0fthroughput_mbps\x18\r \x01(\x01R\x0ethroughputMbps\x12(\n" +
	"\x10packet_loss_rate\x18\x0e \x01(\x01R\x0epacketLossRate\x12=\n" +
	"\fcollected_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\vcollectedAt\"\xb0\x01\n" +
	"\x13ExtendedPortMapping\x12%\n" +
	"\x0econtainer_port\x18\x01 \x01(\x05R\rcontainerPort\x12\x1b\n" +
	"\thost_port\x18\x02 \x01(\x05R\bhostPort\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x17\n" +
	"\ahost_ip\x18\x04 \x01(\tR\x06hostIp\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\"\xf5\x06\n" +
	"\x1cCreateNetworkExtendedRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06driver\x18\x03 \x01(\tR\x06driver\x122\n" +
	"\x04ipam\x18\x04 \x01(\v2\x1e.nerdctl.v1.IPAMConfigExtendedR\x04ipam\x12\x1a\n" +
	"\binternal\x18\x05 \x01(\bR\binternal\x12\x1e\n" +
	"\n" +
	"attachable\x18\x06 \x01(\bR\n" +
	"attachable\x12\x18\n" +
	"\aingress\x18\a \x01(\bR\aingress\x12\x12\n" +
	"\x04ipv6\x18\b \x01(\bR\x04ipv6\x12\x1d\n" +
	"\n" +
	"enable_icc\x18\t \x01(\bR\tenableIcc\x12O\n" +
	"\aoptions\x18\n" +
	" \x03(\v25.nerdctl.v1.CreateNetworkExtendedRequest.OptionsEntryR\aoptions\x12L\n" +
	"\x06labels\x18\v \x03(\v24.nerdctl.v1.CreateNetworkExtendedRequest.LabelsEntryR\x06labels\x12\x10\n" +
	"\x03mtu\x18\f \x01(\x05R\x03mtu\x12)\n" +
	"\x10parent_interface\x18\r \x01(\tR\x0fparentInterface\x12\x17\n" +
	"\avlan_id\x18\x0e \x01(\x05R\x06vlanId\x12%\n" +
	"\x0efirewall_rules\x18\x0f \x03(\tR\rfirewallRules\x12%\n" +
	"\x0eisolation_mode\x18\x10 \x01(\tR\risolationMode\x12+\n" +
	"\x11enable_encryption\x18\x11 \x01(\bR\x10enableEncryption\x12\x1f\n" +
	"\vconfig_file\x18\x12 \x01(\tR\n" +
	"configFile\x12\x1d\n" +
	"\n" +
	"config_dir\x18\x13 \x01(\tR\tconfigDir\x12'\n" +
	"\x0fvalidate_config\x18\x14 \x01(\bR\x0evalidateConfig\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd0\x01\n" +
	"\x1dCreateNetworkExtendedResponse\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12\x1a\n" +
	"\bwarnings\x18\x02 \x03(\tR\bwarnings\x129\n" +
	"\anetwork\x18\x03 \x01(\v2\x1f.nerdctl.v1.NetworkInfoExtendedR\anetwork\x129\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1d.nerdctl.v1.OperationMetadataR\bmetadata\"\xdd\x01\n" +
	"\x1cRemoveNetworkExtendedRequest\x12\x1a\n" +
	"\bnetworks\x18\x01 \x03(\tR\bnetworks\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\x12+\n" +
	"\x11remove_containers\x18\x04 \x01(\bR\x10removeContainers\x12'\n" +
	"\x0ftimeout_seconds\x18\x05 \x01(\x05R\x0etimeoutSeconds\x12\x17\n" +
	"\adry_run\x18\x06 \x01(\bR\x06dryRun\"\xdf\x01\n" +
	"\x1dRemoveNetworkExtendedResponse\x12\x18\n" +
	"\aremoved\x18\x01 \x03(\tR\aremoved\x12\x16\n" +
	"\x06failed\x18\x02 \x03(\tR\x06failed\x12\x1a\n" +
	"\bwarnings\x18\x03 \x03(\tR\bwarnings\x125\n" +
	"\aresults\x18\x04 \x03(\v2\x1b.nerdctl.v1.OperationResultR\aresults\x129\n" +
	"\bmetadata\x18\x05 \x01(\v2\x1d.nerdctl.v1.OperationMetadataR\bmetadata\"\xb2\x04\n" +
	"\x1bListNetworksExtendedRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12N\n" +
	"\afilters\x18\x02 \x03(\v24.nerdctl.v1.ListNetworksExtendedRequest.FiltersEntryR\afilters\x12\x14\n" +
	"\x05quiet\x18\x03 \x01(\bR\x05quiet\x12\x16\n" +
	"\x06format\x18\x04 \x01(\tR\x06format\x12\x19\n" +
	"\bno_trunc\x18\x05 \x01(\bR\anoTrunc\x12\x10\n" +
	"\x03all\x18\x06 \x01(\bR\x03all\x12%\n" +
	"\x0einclude_system\x18\a \x01(\bR\rincludeSystem\x12'\n" +
	"\x0finclude_metrics\x18\b \x01(\bR\x0eincludeMetrics\x12-\n" +
	"\x12include_containers\x18\t \x01(\bR\x11includeContainers\x12\x16\n" +
	"\x06fields\x18\n" +
	" \x03(\tR\x06fields\x12\x14\n" +
	"\x05limit\x18\v \x01(\x05R\x05limit\x12%\n" +
	"\x0econtinue_token\x18\f \x01(\tR\rcontinueToken\x12\x17\n" +
	"\asort_by\x18\r \x01(\tR\x06sortBy\x12!\n" +
	"\freverse_sort\x18\x0e \x01(\bR\vreverseSort\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfa\x01\n" +
	"\x1cListNetworksExtendedResponse\x12;\n" +
	"\bnetworks\x18\x01 \x03(\v2\x1f.nerdctl.v1.NetworkInfoExtendedR\bnetworks\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12%\n" +
	"\x0econtinue_token\x18\x03 \x01(\tR\rcontinueToken\x12\x1a\n" +
	"\bwarnings\x18\x04 \x03(\tR\bwarnings\x129\n" +
	"\bmetadata\x18\x05 \x01(\v2\x1d.nerdctl.v1.OperationMetadataR\bmetadata\"\xa6\x02\n" +
	"\x1dInspectNetworkExtendedRequest\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\x12\x18\n" +
	"\averbose\x18\x04 \x01(\bR\averbose\x12-\n" +
	"\x12include_containers\x18\x05 \x01(\bR\x11includeContainers\x12+\n" +
	"\x11include_endpoints\x18\x06 \x01(\bR\x10includeEndpoints\x12'\n" +
	"\x0finclude_metrics\x18\a \x01(\bR\x0eincludeMetrics\x12\x16\n" +
	"\x06fields\x18\b \x03(\tR\x06fields\"\xb2\x01\n" +
	"\x1eInspectNetworkExtendedResponse\x129\n" +
	"\anetwork\x18\x01 \x01(\v2\x1f.nerdctl.v1.NetworkInfoExtendedR\anetwork\x12\x1a\n" +
	"\bwarnings\x18\x02 \x03(\tR\bwarnings\x129\n" +
	"\bmetadata\x18\x03 \x01(\v2\x1d.nerdctl.v1.OperationMetadataR\bmetadata\"\xbd\x02\n" +
	"\x1dConnectNetworkExtendedRequest\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x1c\n" +
	"\tcontainer\x18\x02 \x01(\tR\tcontainer\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12R\n" +
	"\x0fendpoint_config\x18\x04 \x01(\v2).nerdctl.v1.NetworkEndpointConfigExtendedR\x0eendpointConfig\x12\x14\n" +
	"\x05force\x18\x05 \x01(\bR\x05force\x12'\n" +
	"\x0ftimeout_seconds\x18\x06 \x01(\x05R\x0etimeoutSeconds\x123\n" +
	"\x15validate_connectivity\x18\a \x01(\bR\x14validateConnectivity\"\xed\x05\n" +
	"\x1dNetworkEndpointConfigExtended\x12!\n" +
	"\fipv4_address\x18\x01 \x01(\tR\vipv4Address\x12!\n" +
	"\fipv6_address\x18\x02 \x01(\tR\vipv6Address\x12\x18\n" +
	"\aaliases\x18\x03 \x03(\tR\aaliases\x12\x14\n" +
	"\x05links\x18\x04 \x03(\tR\x05links\x12Z\n" +
	"\vdriver_opts\x18\x05 \x03(\v29.nerdctl.v1.NetworkEndpointConfigExtended.DriverOptsEntryR\n" +
	"driverOpts\x12\x1f\n" +
	"\vmac_address\x18\x06 \x01(\tR\n" +
	"macAddress\x12\x1b\n" +
	"\tdns_names\x18\a \x03(\tR\bdnsNames\x12\x1f\n" +
	"\vdns_servers\x18\b \x03(\tR\n" +
	"dnsServers\x12\x1d\n" +
	"\n" +
	"dns_search\x18\t \x03(\tR\tdnsSearch\x12Z\n" +
	"\vextra_hosts\x18\n" +
	" \x03(\v29.nerdctl.v1.NetworkEndpointConfigExtended.ExtraHostsEntryR\n" +
	"extraHosts\x12<\n" +
	"\rport_mappings\x18\v \x03(\v2\x17.nerdctl.v1.PortMappingR\fportMappings\x12\"\n" +
	"\fcapabilities\x18\f \x03(\tR\fcapabilities\x12\x1e\n" +
	"\n" +
	"privileged\x18\r \x01(\bR\n" +
	"privileged\x12 \n" +
	"\fuser_ns_mode\x18\x0e \x01(\tR\n" +
	"userNsMode\x1a=\n" +
	"\x0fDriverOptsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a=\n" +
	"\x0fExtraHostsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xef\x01\n" +
	"\x1eConnectNetworkExtendedResponse\x12\x1c\n" +
	"\tconnected\x18\x01 \x01(\bR\tconnected\x12\x1f\n" +
	"\vendpoint_id\x18\x02 \x01(\tR\n" +
	"endpointId\x12\x1a\n" +
	"\bwarnings\x18\x03 \x03(\tR\bwarnings\x127\n" +
	"\bendpoint\x18\x04 \x01(\v2\x1b.nerdctl.v1.NetworkEndpointR\bendpoint\x129\n" +
	"\bmetadata\x18\x05 \x01(\v2\x1d.nerdctl.v1.OperationMetadataR\bmetadata\"\xe4\x01\n" +
	" DisconnectNetworkExtendedRequest\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x1c\n" +
	"\tcontainer\x18\x02 \x01(\tR\tcontainer\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05force\x18\x04 \x01(\bR\x05force\x12'\n" +
	"\x0ftimeout_seconds\x18\x05 \x01(\x05R\x0etimeoutSeconds\x12+\n" +
	"\x11cleanup_resources\x18\x06 \x01(\bR\x10cleanupResources\"\xc7\x01\n" +
	"!DisconnectNetworkExtendedResponse\x12\"\n" +
	"\fdisconnected\x18\x01 \x01(\bR\fdisconnected\x12\x1a\n" +
	"\bwarnings\x18\x02 \x03(\tR\bwarnings\x12'\n" +
	"\x0fcleanup_actions\x18\x03 \x03(\tR\x0ecleanupActions\x129\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1d.nerdctl.v1.OperationMetadataR\bmetadata\"\xc0\x03\n" +
	"\x1cPruneNetworksExtendedRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12O\n" +
	"\afilters\x18\x02 \x03(\v25.nerdctl.v1.PruneNetworksExtendedRequest.FiltersEntryR\afilters\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\x122\n" +
	"\x15prune_system_networks\x18\x04 \x01(\bR\x13pruneSystemNetworks\x12'\n" +
	"\x0ftimeout_seconds\x18\x05 \x01(\x05R\x0etimeoutSeconds\x12\x17\n" +
	"\adry_run\x18\x06 \x01(\bR\x06dryRun\x12\x14\n" +
	"\x05until\x18\a \x01(\tR\x05until\x12*\n" +
	"\x11prune_unused_only\x18\b \x01(\bR\x0fpruneUnusedOnly\x12'\n" +
	"\x0finclude_volumes\x18\t \x01(\bR\x0eincludeVolumes\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x86\x02\n" +
	"\x1dPruneNetworksExtendedResponse\x12\x16\n" +
	"\x06pruned\x18\x01 \x03(\tR\x06pruned\x12\x16\n" +
	"\x06failed\x18\x02 \x03(\tR\x06failed\x12'\n" +
	"\x0fspace_reclaimed\x18\x03 \x01(\x03R\x0espaceReclaimed\x12\x1a\n" +
	"\bwarnings\x18\x04 \x03(\tR\bwarnings\x125\n" +
	"\aresults\x18\x05 \x03(\v2\x1b.nerdctl.v1.OperationResultR\aresults\x129\n" +
	"\bmetadata\x18\x06 \x01(\v2\x1d.nerdctl.v1.OperationMetadataR\bmetadata\"\xa9\x04\n" +
	"\x14UpdateNetworkRequest\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12D\n" +
	"\x06labels\x18\x03 \x03(\v2,.nerdctl.v1.UpdateNetworkRequest.LabelsEntryR\x06labels\x12G\n" +
	"\aoptions\x18\x04 \x03(\v2-.nerdctl.v1.UpdateNetworkRequest.OptionsEntryR\aoptions\x12\x1d\n" +
	"\n" +
	"enable_icc\x18\x05 \x01(\bR\tenableIcc\x12\x10\n" +
	"\x03mtu\x18\x06 \x01(\x05R\x03mtu\x12%\n" +
	"\x0efirewall_rules\x18\a \x03(\tR\rfirewallRules\x12?\n" +
	"\vipam_update\x18\b \x01(\v2\x1e.nerdctl.v1.IPAMConfigExtendedR\n" +
	"ipamUpdate\x12\x19\n" +
	"\badd_ipam\x18\t \x01(\bR\aaddIpam\x12\x1f\n" +
	"\vupdate_mask\x18\n" +
	" \x01(\tR\n" +
	"updateMask\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc3\x01\n" +
	"\x15UpdateNetworkResponse\x12\x18\n" +
	"\aupdated\x18\x01 \x01(\bR\aupdated\x129\n" +
	"\anetwork\x18\x02 \x01(\v2\x1f.nerdctl.v1.NetworkInfoExtendedR\anetwork\x12\x1a\n" +
	"\bwarnings\x18\x03 \x03(\tR\bwarnings\x129\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1d.nerdctl.v1.OperationMetadataR\bmetadata\"N\n" +
	"\x14NetworkExistsRequest\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"N\n" +
	"\x15NetworkExistsResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\x12\x1d\n" +
	"\n" +
	"network_id\x18\x02 \x01(\tR\tnetworkId\"\xd6\x02\n" +
	"\x14NetworkEventsRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12G\n" +
	"\afilters\x18\x02 \x03(\v2-.nerdctl.v1.NetworkEventsRequest.FiltersEntryR\afilters\x120\n" +
	"\x05since\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x05since\x120\n" +
	"\x05until\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x05until\x12\x16\n" +
	"\x06follow\x18\x05 \x01(\bR\x06follow\x12\x1f\n" +
	"\vevent_types\x18\x06 \x03(\tR\n" +
	"eventTypes\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa2\x06\n" +
	"\fNetworkEvent\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x1d\n" +
	"\n" +
	"network_id\x18\x02 \x01(\tR\tnetworkId\x12!\n" +
	"\fnetwork_name\x18\x03 \x01(\tR\vnetworkName\x12!\n" +
	"\fcontainer_id\x18\x04 \x01(\tR\vcontainerId\x12%\n" +
	"\x0econtainer_name\x18\x05 \x01(\tR\rcontainerName\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12H\n" +
	"\n" +
	"attributes\x18\a \x03(\v2(.nerdctl.v1.NetworkEvent.AttributesEntryR\n" +
	"attributes\x12\x18\n" +
	"\amessage\x18\b \x01(\tR\amessage\x12\x14\n" +
	"\x05actor\x18\t \x01(\tR\x05actor\x12C\n" +
	"\fcreate_event\x18\n" +
	" \x01(\v2\x1e.nerdctl.v1.NetworkCreateEventH\x00R\vcreateEvent\x12C\n" +
	"\fremove_event\x18\v \x01(\v2\x1e.nerdctl.v1.NetworkRemoveEventH\x00R\vremoveEvent\x12F\n" +
	"\rconnect_event\x18\f \x01(\v2\x1f.nerdctl.v1.NetworkConnectEventH\x00R\fconnectEvent\x12O\n" +
	"\x10disconnect_event\x18\r \x01(\v2\".nerdctl.v1.NetworkDisconnectEventH\x00R\x0fdisconnectEvent\x12C\n" +
	"\fupdate_event\x18\x0e \x01(\v2\x1e.nerdctl.v1.NetworkUpdateEventH\x00R\vupdateEvent\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\f\n" +
	"\n" +
	"event_data\"p\n" +
	"\x12NetworkCreateEvent\x129\n" +
	"\anetwork\x18\x01 \x01(\v2\x1f.nerdctl.v1.NetworkInfoExtendedR\anetwork\x12\x1f\n" +
	"\vdriver_used\x18\x02 \x01(\tR\n" +
	"driverUsed\"{\n" +
	"\x12NetworkRemoveEvent\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12!\n" +
	"\fnetwork_name\x18\x02 \x01(\tR\vnetworkName\x12#\n" +
	"\rforce_removed\x18\x03 \x01(\bR\fforceRemoved\"\x99\x01\n" +
	"\x13NetworkConnectEvent\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\x12\x1f\n" +
	"\vendpoint_id\x18\x03 \x01(\tR\n" +
	"endpointId\x12\x1f\n" +
	"\vassigned_ip\x18\x04 \x01(\tR\n" +
	"assignedIp\"\xaa\x01\n" +
	"\x16NetworkDisconnectEvent\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\x12\x1f\n" +
	"\vendpoint_id\x18\x03 \x01(\tR\n" +
	"endpointId\x12-\n" +
	"\x12force_disconnected\x18\x04 \x01(\bR\x11forceDisconnected\"\xf2\x02\n" +
	"\x12NetworkUpdateEvent\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12%\n" +
	"\x0eupdated_fields\x18\x02 \x03(\tR\rupdatedFields\x12L\n" +
	"\n" +
	"old_values\x18\x03 \x03(\v2-.nerdctl.v1.NetworkUpdateEvent.OldValuesEntryR\toldValues\x12L\n" +
	"\n" +
	"new_values\x18\x04 \x03(\v2-.nerdctl.v1.NetworkUpdateEvent.NewValuesEntryR\tnewValues\x1a<\n" +
	"\x0eOldValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a<\n" +
	"\x0eNewValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc4\x01\n" +
	"\x13NetworkStatsRequest\x12\x1a\n" +
	"\bnetworks\x18\x01 \x03(\tR\bnetworks\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06stream\x18\x03 \x01(\bR\x06stream\x12)\n" +
	"\x10interval_seconds\x18\x04 \x01(\x05R\x0fintervalSeconds\x120\n" +
	"\x14include_system_stats\x18\x05 \x01(\bR\x12includeSystemStats\"\x96\x03\n" +
	"\x14NetworkStatsResponse\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12!\n" +
	"\fnetwork_name\x18\x02 \x01(\tR\vnetworkName\x120\n" +
	"\x05stats\x18\x03 \x01(\v2\x1a.nerdctl.v1.NetworkMetricsR\x05stats\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12T\n" +
	"\fsystem_stats\x18\x05 \x03(\v21.nerdctl.v1.NetworkStatsResponse.SystemStatsEntryR\vsystemStats\x12:\n" +
	"\n" +
	"interfaces\x18\x06 \x03(\v2\x1a.nerdctl.v1.InterfaceStatsR\n" +
	"interfaces\x1a>\n" +
	"\x10SystemStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xa4\x02\n" +
	"\x0eInterfaceStats\x12%\n" +
	"\x0einterface_name\x18\x01 \x01(\tR\rinterfaceName\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x02 \x01(\x03R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\x03 \x01(\x03R\rbytesReceived\x12!\n" +
	"\fpackets_sent\x18\x04 \x01(\x03R\vpacketsSent\x12)\n" +
	"\x10packets_received\x18\x05 \x01(\x03R\x0fpacketsReceived\x12\x16\n" +
	"\x06errors\x18\x06 \x01(\x03R\x06errors\x12\x18\n" +
	"\adropped\x18\a \x01(\x03R\adropped\x12\x13\n" +
	"\x05is_up\x18\b \x01(\bR\x04isUp\x12\x10\n" +
	"\x03mtu\x18\t \x01(\x05R\x03mtu\"\xd9\x01\n" +
	"\x13BatchNetworkRequest\x12<\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2\x1c.nerdctl.v1.NetworkOperationR\n" +
	"operations\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1b\n" +
	"\tfail_fast\x18\x03 \x01(\bR\bfailFast\x12 \n" +
	"\vconcurrency\x18\x04 \x01(\x05R\vconcurrency\x12'\n" +
	"\x0ftimeout_seconds\x18\x05 \x01(\x05R\x0etimeoutSeconds\"\x9d\x03\n" +
	"\x10NetworkOperation\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x12B\n" +
	"\x06create\x18\x02 \x01(\v2(.nerdctl.v1.CreateNetworkExtendedRequestH\x00R\x06create\x12B\n" +
	"\x06remove\x18\x03 \x01(\v2(.nerdctl.v1.RemoveNetworkExtendedRequestH\x00R\x06remove\x12E\n" +
	"\aconnect\x18\x04 \x01(\v2).nerdctl.v1.ConnectNetworkExtendedRequestH\x00R\aconnect\x12N\n" +
	"\n" +
	"disconnect\x18\x05 \x01(\v2,.nerdctl.v1.DisconnectNetworkExtendedRequestH\x00R\n" +
	"disconnect\x12:\n" +
	"\x06update\x18\x06 \x01(\v2 .nerdctl.v1.UpdateNetworkRequestH\x00R\x06updateB\v\n" +
	"\toperation\"\xde\x04\n" +
	"\x14BatchNetworkResponse\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12P\n" +
	"\rcreate_result\x18\x04 \x01(\v2).nerdctl.v1.CreateNetworkExtendedResponseH\x00R\fcreateResult\x12P\n" +
	"\rremove_result\x18\x05 \x01(\v2).nerdctl.v1.RemoveNetworkExtendedResponseH\x00R\fremoveResult\x12S\n" +
	"\x0econnect_result\x18\x06 \x01(\v2*.nerdctl.v1.ConnectNetworkExtendedResponseH\x00R\rconnectResult\x12\\\n" +
	"\x11disconnect_result\x18\a \x01(\v2-.nerdctl.v1.DisconnectNetworkExtendedResponseH\x00R\x10disconnectResult\x12H\n" +
	"\rupdate_result\x18\b \x01(\v2!.nerdctl.v1.UpdateNetworkResponseH\x00R\fupdateResult\x129\n" +
	"\bmetadata\x18\t \x01(\v2\x1d.nerdctl.v1.OperationMetadataR\bmetadataB\b\n" +
	"\x06result\"\xdf\x01\n" +
	"\x19BulkInspectNetworkRequest\x12\x1a\n" +
	"\bnetworks\x18\x01 \x03(\tR\bnetworks\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x18\n" +
	"\averbose\x18\x03 \x01(\bR\averbose\x12-\n" +
	"\x12include_containers\x18\x04 \x01(\bR\x11includeContainers\x12'\n" +
	"\x0finclude_metrics\x18\x05 \x01(\bR\x0eincludeMetrics\x12\x16\n" +
	"\x06fields\x18\x06 \x03(\tR\x06fields\"\x96\x02\n" +
	"\x1aBulkInspectNetworkResponse\x12:\n" +
	"\aresults\x18\x01 \x03(\v2 .nerdctl.v1.NetworkInspectResultR\aresults\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12#\n" +
	"\rsuccess_count\x18\x03 \x01(\x05R\fsuccessCount\x12\x1f\n" +
	"\verror_count\x18\x04 \x01(\x05R\n" +
	"errorCount\x12\x1a\n" +
	"\bwarnings\x18\x05 \x03(\tR\bwarnings\x129\n" +
	"\bmetadata\x18\x06 \x01(\v2\x1d.nerdctl.v1.OperationMetadataR\bmetadata\"\xb3\x01\n" +
	"\x14NetworkInspectResult\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12B\n" +
	"\fnetwork_info\x18\x04 \x01(\v2\x1f.nerdctl.v1.NetworkInfoExtendedR\vnetworkInfo\"i\n" +
	"\x19ListNetworkDriversRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12.\n" +
	"\x13include_plugin_info\x18\x02 \x01(\bR\x11includePluginInfo\"m\n" +
	"\x1aListNetworkDriversResponse\x123\n" +
	"\adrivers\x18\x01 \x03(\v2\x19.nerdctl.v1.NetworkDriverR\adrivers\x12\x1a\n" +
	"\bwarnings\x18\x02 \x03(\tR\bwarnings\"\xf7\x03\n" +
	"\rNetworkDriver\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\"\n" +
	"\fcapabilities\x18\x04 \x03(\tR\fcapabilities\x12@\n" +
	"\aoptions\x18\x05 \x03(\v2&.nerdctl.v1.NetworkDriver.OptionsEntryR\aoptions\x12!\n" +
	"\fis_available\x18\x06 \x01(\bR\visAvailable\x12\x1d\n" +
	"\n" +
	"is_default\x18\a \x01(\bR\tisDefault\x12\x1f\n" +
	"\vplugin_path\x18\b \x01(\tR\n" +
	"pluginPath\x12P\n" +
	"\rplugin_config\x18\t \x03(\v2+.nerdctl.v1.NetworkDriver.PluginConfigEntryR\fpluginConfig\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a?\n" +
	"\x11PluginConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\x17GetNetworkConfigRequest\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\"\x87\x01\n" +
	"\x18GetNetworkConfigResponse\x12\x16\n" +
	"\x06config\x18\x01 \x01(\tR\x06config\x12\x16\n" +
	"\x06format\x18\x02 \x01(\tR\x06format\x12\x1f\n" +
	"\vconfig_path\x18\x03 \x01(\tR\n" +
	"configPath\x12\x1a\n" +
	"\bwarnings\x18\x04 \x03(\tR\bwarnings\"\x9c\x01\n" +
	"\x1cValidateNetworkConfigRequest\x12\x16\n" +
	"\x06config\x18\x01 \x01(\tR\x06config\x12\x1f\n" +
	"\vconfig_path\x18\x02 \x01(\tR\n" +
	"configPath\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\x12+\n" +
	"\x11strict_validation\x18\x04 \x01(\bR\x10strictValidation\"\x9e\x01\n" +
	"\x1dValidateNetworkConfigResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x16\n" +
	"\x06errors\x18\x02 \x03(\tR\x06errors\x12\x1a\n" +
	"\bwarnings\x18\x03 \x03(\tR\bwarnings\x123\n" +
	"\x06issues\x18\x04 \x03(\v2\x1b.nerdctl.v1.ValidationIssueR\x06issues\"}\n" +
	"\x0fValidationIssue\x12\x1a\n" +
	"\bseverity\x18\x01 \x01(\tR\bseverity\x12\x14\n" +
	"\x05field\x18\x02 \x01(\tR\x05field\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1e\n" +
	"\n" +
	"suggestion\x18\x04 \x01(\tR\n" +
	"suggestion\"\xf2\x01\n" +
	"\x16DiagnoseNetworkRequest\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12'\n" +
	"\x0fdeep_inspection\x18\x03 \x01(\bR\x0edeepInspection\x12-\n" +
	"\x12check_connectivity\x18\x04 \x01(\bR\x11checkConnectivity\x12\x1b\n" +
	"\tcheck_dns\x18\x05 \x01(\bR\bcheckDns\x12+\n" +
	"\x11target_containers\x18\x06 \x03(\tR\x10targetContainers\"\xf5\x02\n" +
	"\x17DiagnoseNetworkResponse\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12!\n" +
	"\fnetwork_name\x18\x02 \x01(\tR\vnetworkName\x12%\n" +
	"\x0eoverall_status\x18\x03 \x01(\tR\roverallStatus\x126\n" +
	"\aresults\x18\x04 \x03(\v2\x1c.nerdctl.v1.DiagnosticResultR\aresults\x12(\n" +
	"\x0frecommendations\x18\x05 \x03(\tR\x0frecommendations\x12Q\n" +
	"\n" +
	"debug_info\x18\x06 \x03(\v22.nerdctl.v1.DiagnoseNetworkResponse.DebugInfoEntryR\tdebugInfo\x1a<\n" +
	"\x0eDebugInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8e\x02\n" +
	"\x10DiagnosticResult\x12\x1b\n" +
	"\ttest_name\x18\x01 \x01(\tR\btestName\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12C\n" +
	"\adetails\x18\x04 \x03(\v2).nerdctl.v1.DiagnosticResult.DetailsEntryR\adetails\x12*\n" +
	"\x11execution_time_ms\x18\x05 \x01(\x01R\x0fexecutionTimeMs\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdc\x02\n" +
	"\x1aNetworkConnectivityRequest\x12%\n" +
	"\x0esource_network\x18\x01 \x01(\tR\rsourceNetwork\x12%\n" +
	"\x0etarget_network\x18\x02 \x01(\tR\rtargetNetwork\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12)\n" +
	"\x10source_container\x18\x04 \x01(\tR\x0fsourceContainer\x12)\n" +
	"\x10target_container\x18\x05 \x01(\tR\x0ftargetContainer\x12\x1c\n" +
	"\tprotocols\x18\x06 \x03(\tR\tprotocols\x12\x14\n" +
	"\x05ports\x18\a \x03(\x05R\x05ports\x12'\n" +
	"\x0ftimeout_seconds\x18\b \x01(\x05R\x0etimeoutSeconds\x12\x1f\n" +
	"\vretry_count\x18\t \x01(\x05R\n" +
	"retryCount\"\x83\x02\n" +
	"\x1bNetworkConnectivityResponse\x12\x1c\n" +
	"\treachable\x18\x01 \x01(\bR\treachable\x128\n" +
	"\aresults\x18\x02 \x03(\v2\x1e.nerdctl.v1.ConnectivityResultR\aresults\x12\x18\n" +
	"\asummary\x18\x03 \x01(\tR\asummary\x12,\n" +
	"\x12average_latency_ms\x18\x04 \x01(\x01R\x10averageLatencyMs\x12(\n" +
	"\x10packet_loss_rate\x18\x05 \x01(\x01R\x0epacketLossRate\x12\x1a\n" +
	"\bwarnings\x18\x06 \x03(\tR\bwarnings\"\xc7\x01\n" +
	"\x12ConnectivityResult\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x04 \x01(\x01R\tlatencyMs\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\x12#\n" +
	"\rattempt_count\x18\x06 \x01(\x05R\fattemptCount\"B\n" +
	"\"GetNetworkSupportedFeaturesRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"g\n" +
	"#GetNetworkSupportedFeaturesResponse\x12@\n" +
	"\bfeatures\x18\x01 \x01(\v2$.nerdctl.v1.NetworkSupportedFeaturesR\bfeatures\"\xeb\t\n" +
	"\x18NetworkSupportedFeatures\x12\x18\n" +
	"\adrivers\x18\x01 \x03(\tR\adrivers\x12!\n" +
	"\fipam_drivers\x18\x02 \x03(\tR\vipamDrivers\x12\x1f\n" +
	"\vcni_plugins\x18\x03 \x03(\tR\n" +
	"cniPlugins\x12#\n" +
	"\rsupports_ipv6\x18\x04 \x01(\bR\fsupportsIpv6\x12)\n" +
	"\x10supports_macvlan\x18\x05 \x01(\bR\x0fsupportsMacvlan\x12)\n" +
	"\x10supports_overlay\x18\x06 \x01(\bR\x0fsupportsOverlay\x12/\n" +
	"\x13supports_encryption\x18\a \x01(\bR\x12supportsEncryption\x12-\n" +
	"\x12supports_multicast\x18\b \x01(\bR\x11supportsMulticast\x12#\n" +
	"\rsupports_vlan\x18\t \x01(\bR\fsupportsVlan\x12<\n" +
	"\x1asupports_bridge_networking\x18\n" +
	" \x01(\bR\x18supportsBridgeNetworking\x128\n" +
	"\x18supports_host_networking\x18\v \x01(\bR\x16supportsHostNetworking\x128\n" +
	"\x18supports_none_networking\x18\f \x01(\bR\x16supportsNoneNetworking\x12:\n" +
	"\x19supports_network_policies\x18\r \x01(\bR\x17supportsNetworkPolicies\x12<\n" +
	"\x1asupports_service_discovery\x18\x0e \x01(\bR\x18supportsServiceDiscovery\x126\n" +
	"\x17supports_load_balancing\x18\x0f \x01(\bR\x15supportsLoadBalancing\x128\n" +
	"\x18supports_traffic_shaping\x18\x10 \x01(\bR\x16supportsTrafficShaping\x12>\n" +
	"\x1bsupports_network_monitoring\x18\x11 \x01(\bR\x19supportsNetworkMonitoring\x12@\n" +
	"\x1csupports_network_diagnostics\x18\x12 \x01(\bR\x1asupportsNetworkDiagnostics\x12\x1f\n" +
	"\vcni_version\x18\x13 \x01(\tR\n" +
	"cniVersion\x12.\n" +
	"\x13min_nerdctl_version\x18\x14 \x01(\tR\x11minNerdctlVersion\x12.\n" +
	"\x13max_nerdctl_version\x18\x15 \x01(\tR\x11maxNerdctlVersion\x12Z\n" +
	"\fcapabilities\x18\x16 \x03(\v26.nerdctl.v1.NetworkSupportedFeatures.CapabilitiesEntryR\fcapabilities\x123\n" +
	"\x15experimental_features\x18\x17 \x03(\tR\x14experimentalFeatures\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9e\x02\n" +
	"\x0fOperationResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12E\n" +
	"\bmetadata\x18\x04 \x03(\v2).nerdctl.v1.OperationResult.MetadataEntryR\bmetadata\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaa\x03\n" +
	"\x11OperationMetadata\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x129\n" +
	"\n" +
	"started_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x01R\n" +
	"durationMs\x12'\n" +
	"\x0fnerdctl_version\x18\x05 \x01(\tR\x0enerdctlVersion\x12\x1f\n" +
	"\vcni_version\x18\x06 \x01(\tR\n" +
	"cniVersion\x12N\n" +
	"\vsystem_info\x18\a \x03(\v2-.nerdctl.v1.OperationMetadata.SystemInfoEntryR\n" +
	"systemInfo\x1a=\n" +
	"\x0fSystemInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\x9a\x01\n" +
	"\x14NetworkEndpointState\x12\x14\n" +
	"\x10ENDPOINT_UNKNOWN\x10\x00\x12\x15\n" +
	"\x11ENDPOINT_CREATING\x10\x01\x12\x13\n" +
	"\x0fENDPOINT_ACTIVE\x10\x02\x12\x15\n" +
	"\x11ENDPOINT_INACTIVE\x10\x03\x12\x12\n" +
	"\x0eENDPOINT_ERROR\x10\x04\x12\x15\n" +
	"\x11ENDPOINT_REMOVING\x10\x052\xfb\x0e\n" +
	"\x16NetworkServiceExtended\x12d\n" +
	"\rCreateNetwork\x12(.nerdctl.v1.CreateNetworkExtendedRequest\x1a).nerdctl.v1.CreateNetworkExtendedResponse\x12d\n" +
	"\rRemoveNetwork\x12(.nerdctl.v1.RemoveNetworkExtendedRequest\x1a).nerdctl.v1.RemoveNetworkExtendedResponse\x12a\n" +
	"\fListNetworks\x12'.nerdctl.v1.ListNetworksExtendedRequest\x1a(.nerdctl.v1.ListNetworksExtendedResponse\x12g\n" +
	"\x0eInspectNetwork\x12).nerdctl.v1.InspectNetworkExtendedRequest\x1a*.nerdctl.v1.InspectNetworkExtendedResponse\x12g\n" +
	"\x0eConnectNetwork\x12).nerdctl.v1.ConnectNetworkExtendedRequest\x1a*.nerdctl.v1.ConnectNetworkExtendedResponse\x12p\n" +
	"\x11DisconnectNetwork\x12,.nerdctl.v1.DisconnectNetworkExtendedRequest\x1a-.nerdctl.v1.DisconnectNetworkExtendedResponse\x12d\n" +
	"\rPruneNetworks\x12(.nerdctl.v1.PruneNetworksExtendedRequest\x1a).nerdctl.v1.PruneNetworksExtendedResponse\x12T\n" +
	"\rUpdateNetwork\x12 .nerdctl.v1.UpdateNetworkRequest\x1a!.nerdctl.v1.UpdateNetworkResponse\x12T\n" +
	"\rNetworkExists\x12 .nerdctl.v1.NetworkExistsRequest\x1a!.nerdctl.v1.NetworkExistsResponse\x12M\n" +
	"\rNetworkEvents\x12 .nerdctl.v1.NetworkEventsRequest\x1a\x18.nerdctl.v1.NetworkEvent0\x01\x12S\n" +
	"\fNetworkStats\x12\x1f.nerdctl.v1.NetworkStatsRequest\x1a .nerdctl.v1.NetworkStatsResponse0\x01\x12]\n" +
	"\x16BatchNetworkOperations\x12\x1f.nerdctl.v1.BatchNetworkRequest\x1a .nerdctl.v1.BatchNetworkResponse0\x01\x12c\n" +
	"\x12BulkNetworkInspect\x12%.nerdctl.v1.BulkInspectNetworkRequest\x1a&.nerdctl.v1.BulkInspectNetworkResponse\x12c\n" +
	"\x12ListNetworkDrivers\x12%.nerdctl.v1.ListNetworkDriversRequest\x1a&.nerdctl.v1.ListNetworkDriversResponse\x12]\n" +
	"\x10GetNetworkConfig\x12#.nerdctl.v1.GetNetworkConfigRequest\x1a$.nerdctl.v1.GetNetworkConfigResponse\x12l\n" +
	"\x15ValidateNetworkConfig\x12(.nerdctl.v1.ValidateNetworkConfigRequest\x1a).nerdctl.v1.ValidateNetworkConfigResponse\x12Z\n" +
	"\x0fDiagnoseNetwork\x12\".nerdctl.v1.DiagnoseNetworkRequest\x1a#.nerdctl.v1.DiagnoseNetworkResponse\x12f\n" +
	"\x13NetworkConnectivity\x12&.nerdctl.v1.NetworkConnectivityRequest\x1a'.nerdctl.v1.NetworkConnectivityResponse\x12~\n" +
	"\x1bGetNetworkSupportedFeatures\x12..nerdctl.v1.GetNetworkSupportedFeaturesRequest\x1a/.nerdctl.v1.GetNetworkSupportedFeaturesResponseB5Z3github.com/containerd/nerdctl-grpc-server/api/protob\x06proto3"

var (
	file_api_proto_network_service_extended_proto_rawDescOnce sync.Once
	file_api_proto_network_service_extended_proto_rawDescData []byte
)

func file_api_proto_network_service_extended_proto_rawDescGZIP() []byte {
	file_api_proto_network_service_extended_proto_rawDescOnce.Do(func() {
		file_api_proto_network_service_extended_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_network_service_extended_proto_rawDesc), len(file_api_proto_network_service_extended_proto_rawDesc)))
	})
	return file_api_proto_network_service_extended_proto_rawDescData
}

var file_api_proto_network_service_extended_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_network_service_extended_proto_msgTypes = make([]protoimpl.MessageInfo, 92)
var file_api_proto_network_service_extended_proto_goTypes = []any{
	(NetworkEndpointState)(0),                   // 0: nerdctl.v1.NetworkEndpointState
	(*NetworkInfoExtended)(nil),                 // 1: nerdctl.v1.NetworkInfoExtended
	(*IPAMConfigExtended)(nil),                  // 2: nerdctl.v1.IPAMConfigExtended
	(*IPAMSubnet)(nil),                          // 3: nerdctl.v1.IPAMSubnet
	(*NetworkContainerExtended)(nil),            // 4: nerdctl.v1.NetworkContainerExtended
	(*NetworkEndpoint)(nil),                     // 5: nerdctl.v1.NetworkEndpoint
	(*NetworkState)(nil),                        // 6: nerdctl.v1.NetworkState
	(*ExtendedNetworkConfig)(nil),               // 7: nerdctl.v1.ExtendedNetworkConfig
	(*NetworkMetrics)(nil),                      // 8: nerdctl.v1.NetworkMetrics
	(*ExtendedPortMapping)(nil),                 // 9: nerdctl.v1.ExtendedPortMapping
	(*CreateNetworkExtendedRequest)(nil),        // 10: nerdctl.v1.CreateNetworkExtendedRequest
	(*CreateNetworkExtendedResponse)(nil),       // 11: nerdctl.v1.CreateNetworkExtendedResponse
	(*RemoveNetworkExtendedRequest)(nil),        // 12: nerdctl.v1.RemoveNetworkExtendedRequest
	(*RemoveNetworkExtendedResponse)(nil),       // 13: nerdctl.v1.RemoveNetworkExtendedResponse
	(*ListNetworksExtendedRequest)(nil),         // 14: nerdctl.v1.ListNetworksExtendedRequest
	(*ListNetworksExtendedResponse)(nil),        // 15: nerdctl.v1.ListNetworksExtendedResponse
	(*InspectNetworkExtendedRequest)(nil),       // 16: nerdctl.v1.InspectNetworkExtendedRequest
	(*InspectNetworkExtendedResponse)(nil),      // 17: nerdctl.v1.InspectNetworkExtendedResponse
	(*ConnectNetworkExtendedRequest)(nil),       // 18: nerdctl.v1.ConnectNetworkExtendedRequest
	(*NetworkEndpointConfigExtended)(nil),       // 19: nerdctl.v1.NetworkEndpointConfigExtended
	(*ConnectNetworkExtendedResponse)(nil),      // 20: nerdctl.v1.ConnectNetworkExtendedResponse
	(*DisconnectNetworkExtendedRequest)(nil),    // 21: nerdctl.v1.DisconnectNetworkExtendedRequest
	(*DisconnectNetworkExtendedResponse)(nil),   // 22: nerdctl.v1.DisconnectNetworkExtendedResponse
	(*PruneNetworksExtendedRequest)(nil),        // 23: nerdctl.v1.PruneNetworksExtendedRequest
	(*PruneNetworksExtendedResponse)(nil),       // 24: nerdctl.v1.PruneNetworksExtendedResponse
	(*UpdateNetworkRequest)(nil),                // 25: nerdctl.v1.UpdateNetworkRequest
	(*UpdateNetworkResponse)(nil),               // 26: nerdctl.v1.UpdateNetworkResponse
	(*NetworkExistsRequest)(nil),                // 27: nerdctl.v1.NetworkExistsRequest
	(*NetworkExistsResponse)(nil),               // 28: nerdctl.v1.NetworkExistsResponse
	(*NetworkEventsRequest)(nil),                // 29: nerdctl.v1.NetworkEventsRequest
	(*NetworkEvent)(nil),                        // 30: nerdctl.v1.NetworkEvent
	(*NetworkCreateEvent)(nil),                  // 31: nerdctl.v1.NetworkCreateEvent
	(*NetworkRemoveEvent)(nil),                  // 32: nerdctl.v1.NetworkRemoveEvent
	(*NetworkConnectEvent)(nil),                 // 33: nerdctl.v1.NetworkConnectEvent
	(*NetworkDisconnectEvent)(nil),              // 34: nerdctl.v1.NetworkDisconnectEvent
	(*NetworkUpdateEvent)(nil),                  // 35: nerdctl.v1.NetworkUpdateEvent
	(*NetworkStatsRequest)(nil),                 // 36: nerdctl.v1.NetworkStatsRequest
	(*NetworkStatsResponse)(nil),                // 37: nerdctl.v1.NetworkStatsResponse
	(*InterfaceStats)(nil),                      // 38: nerdctl.v1.InterfaceStats
	(*BatchNetworkRequest)(nil),                 // 39: nerdctl.v1.BatchNetworkRequest
	(*NetworkOperation)(nil),                    // 40: nerdctl.v1.NetworkOperation
	(*BatchNetworkResponse)(nil),                // 41: nerdctl.v1.BatchNetworkResponse
	(*BulkInspectNetworkRequest)(nil),           // 42: nerdctl.v1.BulkInspectNetworkRequest
	(*BulkInspectNetworkResponse)(nil),          // 43: nerdctl.v1.BulkInspectNetworkResponse
	(*NetworkInspectResult)(nil),                // 44: nerdctl.v1.NetworkInspectResult
	(*ListNetworkDriversRequest)(nil),           // 45: nerdctl.v1.ListNetworkDriversRequest
	(*ListNetworkDriversResponse)(nil),          // 46: nerdctl.v1.ListNetworkDriversResponse
	(*NetworkDriver)(nil),                       // 47: nerdctl.v1.NetworkDriver
	(*GetNetworkConfigRequest)(nil),             // 48: nerdctl.v1.GetNetworkConfigRequest
	(*GetNetworkConfigResponse)(nil),            // 49: nerdctl.v1.GetNetworkConfigResponse
	(*ValidateNetworkConfigRequest)(nil),        // 50: nerdctl.v1.ValidateNetworkConfigRequest
	(*ValidateNetworkConfigResponse)(nil),       // 51: nerdctl.v1.ValidateNetworkConfigResponse
	(*ValidationIssue)(nil),                     // 52: nerdctl.v1.ValidationIssue
	(*DiagnoseNetworkRequest)(nil),              // 53: nerdctl.v1.DiagnoseNetworkRequest
	(*DiagnoseNetworkResponse)(nil),             // 54: nerdctl.v1.DiagnoseNetworkResponse
	(*DiagnosticResult)(nil),                    // 55: nerdctl.v1.DiagnosticResult
	(*NetworkConnectivityRequest)(nil),          // 56: nerdctl.v1.NetworkConnectivityRequest
	(*NetworkConnectivityResponse)(nil),         // 57: nerdctl.v1.NetworkConnectivityResponse
	(*ConnectivityResult)(nil),                  // 58: nerdctl.v1.ConnectivityResult
	(*GetNetworkSupportedFeaturesRequest)(nil),  // 59: nerdctl.v1.GetNetworkSupportedFeaturesRequest
	(*GetNetworkSupportedFeaturesResponse)(nil), // 60: nerdctl.v1.GetNetworkSupportedFeaturesResponse
	(*NetworkSupportedFeatures)(nil),            // 61: nerdctl.v1.NetworkSupportedFeatures
	(*OperationResult)(nil),                     // 62: nerdctl.v1.OperationResult
	(*OperationMetadata)(nil),                   // 63: nerdctl.v1.OperationMetadata
	nil,                                         // 64: nerdctl.v1.NetworkInfoExtended.OptionsEntry
	nil,                                         // 65: nerdctl.v1.NetworkInfoExtended.LabelsEntry
	nil,                                         // 66: nerdctl.v1.NetworkInfoExtended.DriverDataEntry
	nil,                                         // 67: nerdctl.v1.IPAMConfigExtended.OptionsEntry
	nil,                                         // 68: nerdctl.v1.IPAMConfigExtended.DriverOptsEntry
	nil,                                         // 69: nerdctl.v1.IPAMSubnet.AuxAddressesEntry
	nil,                                         // 70: nerdctl.v1.NetworkContainerExtended.EndpointsEntry
	nil,                                         // 71: nerdctl.v1.NetworkEndpoint.OptionsEntry
	nil,                                         // 72: nerdctl.v1.ExtendedNetworkConfig.DriverConfigEntry
	nil,                                         // 73: nerdctl.v1.CreateNetworkExtendedRequest.OptionsEntry
	nil,                                         // 74: nerdctl.v1.CreateNetworkExtendedRequest.LabelsEntry
	nil,                                         // 75: nerdctl.v1.ListNetworksExtendedRequest.FiltersEntry
	nil,                                         // 76: nerdctl.v1.NetworkEndpointConfigExtended.DriverOptsEntry
	nil,                                         // 77: nerdctl.v1.NetworkEndpointConfigExtended.ExtraHostsEntry
	nil,                                         // 78: nerdctl.v1.PruneNetworksExtendedRequest.FiltersEntry
	nil,                                         // 79: nerdctl.v1.UpdateNetworkRequest.LabelsEntry
	nil,                                         // 80: nerdctl.v1.UpdateNetworkRequest.OptionsEntry
	nil,                                         // 81: nerdctl.v1.NetworkEventsRequest.FiltersEntry
	nil,                                         // 82: nerdctl.v1.NetworkEvent.AttributesEntry
	nil,                                         // 83: nerdctl.v1.NetworkUpdateEvent.OldValuesEntry
	nil,                                         // 84: nerdctl.v1.NetworkUpdateEvent.NewValuesEntry
	nil,                                         // 85: nerdctl.v1.NetworkStatsResponse.SystemStatsEntry
	nil,                                         // 86: nerdctl.v1.NetworkDriver.OptionsEntry
	nil,                                         // 87: nerdctl.v1.NetworkDriver.PluginConfigEntry
	nil,                                         // 88: nerdctl.v1.DiagnoseNetworkResponse.DebugInfoEntry
	nil,                                         // 89: nerdctl.v1.DiagnosticResult.DetailsEntry
	nil,                                         // 90: nerdctl.v1.NetworkSupportedFeatures.CapabilitiesEntry
	nil,                                         // 91: nerdctl.v1.OperationResult.MetadataEntry
	nil,                                         // 92: nerdctl.v1.OperationMetadata.SystemInfoEntry
	(*timestamp.Timestamp)(nil),                 // 93: google.protobuf.Timestamp
	(*NetworkConfig)(nil),                       // 94: nerdctl.v1.NetworkConfig
	(*PortMapping)(nil),                         // 95: nerdctl.v1.PortMapping
}
var file_api_proto_network_service_extended_proto_depIdxs = []int32{
	2,   // 0: nerdctl.v1.NetworkInfoExtended.ipam:type_name -> nerdctl.v1.IPAMConfigExtended
	64,  // 1: nerdctl.v1.NetworkInfoExtended.options:type_name -> nerdctl.v1.NetworkInfoExtended.OptionsEntry
	65,  // 2: nerdctl.v1.NetworkInfoExtended.labels:type_name -> nerdctl.v1.NetworkInfoExtended.LabelsEntry
	93,  // 3: nerdctl.v1.NetworkInfoExtended.created:type_name -> google.protobuf.Timestamp
	93,  // 4: nerdctl.v1.NetworkInfoExtended.updated:type_name -> google.protobuf.Timestamp
	4,   // 5: nerdctl.v1.NetworkInfoExtended.containers:type_name -> nerdctl.v1.NetworkContainerExtended
	5,   // 6: nerdctl.v1.NetworkInfoExtended.endpoints:type_name -> nerdctl.v1.NetworkEndpoint
	6,   // 7: nerdctl.v1.NetworkInfoExtended.state:type_name -> nerdctl.v1.NetworkState
	94,  // 8: nerdctl.v1.NetworkInfoExtended.config:type_name -> nerdctl.v1.NetworkConfig
	8,   // 9: nerdctl.v1.NetworkInfoExtended.metrics:type_name -> nerdctl.v1.NetworkMetrics
	66,  // 10: nerdctl.v1.NetworkInfoExtended.driver_data:type_name -> nerdctl.v1.NetworkInfoExtended.DriverDataEntry
	3,   // 11: nerdctl.v1.IPAMConfigExtended.subnets:type_name -> nerdctl.v1.IPAMSubnet
	67,  // 12: nerdctl.v1.IPAMConfigExtended.options:type_name -> nerdctl.v1.IPAMConfigExtended.OptionsEntry
	68,  // 13: nerdctl.v1.IPAMConfigExtended.driver_opts:type_name -> nerdctl.v1.IPAMConfigExtended.DriverOptsEntry
	69,  // 14: nerdctl.v1.IPAMSubnet.aux_addresses:type_name -> nerdctl.v1.IPAMSubnet.AuxAddressesEntry
	70,  // 15: nerdctl.v1.NetworkContainerExtended.endpoints:type_name -> nerdctl.v1.NetworkContainerExtended.EndpointsEntry
	0,   // 16: nerdctl.v1.NetworkContainerExtended.state:type_name -> nerdctl.v1.NetworkEndpointState
	93,  // 17: nerdctl.v1.NetworkContainerExtended.connected_at:type_name -> google.protobuf.Timestamp
	95,  // 18: nerdctl.v1.NetworkContainerExtended.port_mappings:type_name -> nerdctl.v1.PortMapping
	71,  // 19: nerdctl.v1.NetworkEndpoint.options:type_name -> nerdctl.v1.NetworkEndpoint.OptionsEntry
	0,   // 20: nerdctl.v1.NetworkEndpoint.state:type_name -> nerdctl.v1.NetworkEndpointState
	93,  // 21: nerdctl.v1.NetworkEndpoint.created:type_name -> google.protobuf.Timestamp
	93,  // 22: nerdctl.v1.NetworkState.last_activity:type_name -> google.protobuf.Timestamp
	72,  // 23: nerdctl.v1.ExtendedNetworkConfig.driver_config:type_name -> nerdctl.v1.ExtendedNetworkConfig.DriverConfigEntry
	93,  // 24: nerdctl.v1.NetworkMetrics.collected_at:type_name -> google.protobuf.Timestamp
	2,   // 25: nerdctl.v1.CreateNetworkExtendedRequest.ipam:type_name -> nerdctl.v1.IPAMConfigExtended
	73,  // 26: nerdctl.v1.CreateNetworkExtendedRequest.options:type_name -> nerdctl.v1.CreateNetworkExtendedRequest.OptionsEntry
	74,  // 27: nerdctl.v1.CreateNetworkExtendedRequest.labels:type_name -> nerdctl.v1.CreateNetworkExtendedRequest.LabelsEntry
	1,   // 28: nerdctl.v1.CreateNetworkExtendedResponse.network:type_name -> nerdctl.v1.NetworkInfoExtended
	63,  // 29: nerdctl.v1.CreateNetworkExtendedResponse.metadata:type_name -> nerdctl.v1.OperationMetadata
	62,  // 30: nerdctl.v1.RemoveNetworkExtendedResponse.results:type_name -> nerdctl.v1.OperationResult
	63,  // 31: nerdctl.v1.RemoveNetworkExtendedResponse.metadata:type_name -> nerdctl.v1.OperationMetadata
	75,  // 32: nerdctl.v1.ListNetworksExtendedRequest.filters:type_name -> nerdctl.v1.ListNetworksExtendedRequest.FiltersEntry
	1,   // 33: nerdctl.v1.ListNetworksExtendedResponse.networks:type_name -> nerdctl.v1.NetworkInfoExtended
	63,  // 34: nerdctl.v1.ListNetworksExtendedResponse.metadata:type_name -> nerdctl.v1.OperationMetadata
	1,   // 35: nerdctl.v1.InspectNetworkExtendedResponse.network:type_name -> nerdctl.v1.NetworkInfoExtended
	63,  // 36: nerdctl.v1.InspectNetworkExtendedResponse.metadata:type_name -> nerdctl.v1.OperationMetadata
	19,  // 37: nerdctl.v1.ConnectNetworkExtendedRequest.endpoint_config:type_name -> nerdctl.v1.NetworkEndpointConfigExtended
	76,  // 38: nerdctl.v1.NetworkEndpointConfigExtended.driver_opts:type_name -> nerdctl.v1.NetworkEndpointConfigExtended.DriverOptsEntry
	77,  // 39: nerdctl.v1.NetworkEndpointConfigExtended.extra_hosts:type_name -> nerdctl.v1.NetworkEndpointConfigExtended.ExtraHostsEntry
	95,  // 40: nerdctl.v1.NetworkEndpointConfigExtended.port_mappings:type_name -> nerdctl.v1.PortMapping
	5,   // 41: nerdctl.v1.ConnectNetworkExtendedResponse.endpoint:type_name -> nerdctl.v1.NetworkEndpoint
	63,  // 42: nerdctl.v1.ConnectNetworkExtendedResponse.metadata:type_name -> nerdctl.v1.OperationMetadata
	63,  // 43: nerdctl.v1.DisconnectNetworkExtendedResponse.metadata:type_name -> nerdctl.v1.OperationMetadata
	78,  // 44: nerdctl.v1.PruneNetworksExtendedRequest.filters:type_name -> nerdctl.v1.PruneNetworksExtendedRequest.FiltersEntry
	62,  // 45: nerdctl.v1.PruneNetworksExtendedResponse.results:type_name -> nerdctl.v1.OperationResult
	63,  // 46: nerdctl.v1.PruneNetworksExtendedResponse.metadata:type_name -> nerdctl.v1.OperationMetadata
	79,  // 47: nerdctl.v1.UpdateNetworkRequest.labels:type_name -> nerdctl.v1.UpdateNetworkRequest.LabelsEntry
	80,  // 48: nerdctl.v1.UpdateNetworkRequest.options:type_name -> nerdctl.v1.UpdateNetworkRequest.OptionsEntry
	2,   // 49: nerdctl.v1.UpdateNetworkRequest.ipam_update:type_name -> nerdctl.v1.IPAMConfigExtended
	1,   // 50: nerdctl.v1.UpdateNetworkResponse.network:type_name -> nerdctl.v1.NetworkInfoExtended
	63,  // 51: nerdctl.v1.UpdateNetworkResponse.metadata:type_name -> nerdctl.v1.OperationMetadata
	81,  // 52: nerdctl.v1.NetworkEventsRequest.filters:type_name -> nerdctl.v1.NetworkEventsRequest.FiltersEntry
	93,  // 53: nerdctl.v1.NetworkEventsRequest.since:type_name -> google.protobuf.Timestamp
	93,  // 54: nerdctl.v1.NetworkEventsRequest.until:type_name -> google.protobuf.Timestamp
	93,  // 55: nerdctl.v1.NetworkEvent.timestamp:type_name -> google.protobuf.Timestamp
	82,  // 56: nerdctl.v1.NetworkEvent.attributes:type_name -> nerdctl.v1.NetworkEvent.AttributesEntry
	31,  // 57: nerdctl.v1.NetworkEvent.create_event:type_name -> nerdctl.v1.NetworkCreateEvent
	32,  // 58: nerdctl.v1.NetworkEvent.remove_event:type_name -> nerdctl.v1.NetworkRemoveEvent
	33,  // 59: nerdctl.v1.NetworkEvent.connect_event:type_name -> nerdctl.v1.NetworkConnectEvent
	34,  // 60: nerdctl.v1.NetworkEvent.disconnect_event:type_name -> nerdctl.v1.NetworkDisconnectEvent
	35,  // 61: nerdctl.v1.NetworkEvent.update_event:type_name -> nerdctl.v1.NetworkUpdateEvent
	1,   // 62: nerdctl.v1.NetworkCreateEvent.network:type_name -> nerdctl.v1.NetworkInfoExtended
	83,  // 63: nerdctl.v1.NetworkUpdateEvent.old_values:type_name -> nerdctl.v1.NetworkUpdateEvent.OldValuesEntry
	84,  // 64: nerdctl.v1.NetworkUpdateEvent.new_values:type_name -> nerdctl.v1.NetworkUpdateEvent.NewValuesEntry
	8,   // 65: nerdctl.v1.NetworkStatsResponse.stats:type_name -> nerdctl.v1.NetworkMetrics
	93,  // 66: nerdctl.v1.NetworkStatsResponse.timestamp:type_name -> google.protobuf.Timestamp
	85,  // 67: nerdctl.v1.NetworkStatsResponse.system_stats:type_name -> nerdctl.v1.NetworkStatsResponse.SystemStatsEntry
	38,  // 68: nerdctl.v1.NetworkStatsResponse.interfaces:type_name -> nerdctl.v1.InterfaceStats
	40,  // 69: nerdctl.v1.BatchNetworkRequest.operations:type_name -> nerdctl.v1.NetworkOperation
	10,  // 70: nerdctl.v1.NetworkOperation.create:type_name -> nerdctl.v1.CreateNetworkExtendedRequest
	12,  // 71: nerdctl.v1.NetworkOperation.remove:type_name -> nerdctl.v1.RemoveNetworkExtendedRequest
	18,  // 72: nerdctl.v1.NetworkOperation.connect:type_name -> nerdctl.v1.ConnectNetworkExtendedRequest
	21,  // 73: nerdctl.v1.NetworkOperation.disconnect:type_name -> nerdctl.v1.DisconnectNetworkExtendedRequest
	25,  // 74: nerdctl.v1.NetworkOperation.update:type_name -> nerdctl.v1.UpdateNetworkRequest
	11,  // 75: nerdctl.v1.BatchNetworkResponse.create_result:type_name -> nerdctl.v1.CreateNetworkExtendedResponse
	13,  // 76: nerdctl.v1.BatchNetworkResponse.remove_result:type_name -> nerdctl.v1.RemoveNetworkExtendedResponse
	20,  // 77: nerdctl.v1.BatchNetworkResponse.connect_result:type_name -> nerdctl.v1.ConnectNetworkExtendedResponse
	22,  // 78: nerdctl.v1.BatchNetworkResponse.disconnect_result:type_name -> nerdctl.v1.DisconnectNetworkExtendedResponse
	26,  // 79: nerdctl.v1.BatchNetworkResponse.update_result:type_name -> nerdctl.v1.UpdateNetworkResponse
	63,  // 80: nerdctl.v1.BatchNetworkResponse.metadata:type_name -> nerdctl.v1.OperationMetadata
	44,  // 81: nerdctl.v1.BulkInspectNetworkResponse.results:type_name -> nerdctl.v1.NetworkInspectResult
	63,  // 82: nerdctl.v1.BulkInspectNetworkResponse.metadata:type_name -> nerdctl.v1.OperationMetadata
	1,   // 83: nerdctl.v1.NetworkInspectResult.network_info:type_name -> nerdctl.v1.NetworkInfoExtended
	47,  // 84: nerdctl.v1.ListNetworkDriversResponse.drivers:type_name -> nerdctl.v1.NetworkDriver
	86,  // 85: nerdctl.v1.NetworkDriver.options:type_name -> nerdctl.v1.NetworkDriver.OptionsEntry
	87,  // 86: nerdctl.v1.NetworkDriver.plugin_config:type_name -> nerdctl.v1.NetworkDriver.PluginConfigEntry
	52,  // 87: nerdctl.v1.ValidateNetworkConfigResponse.issues:type_name -> nerdctl.v1.ValidationIssue
	55,  // 88: nerdctl.v1.DiagnoseNetworkResponse.results:type_name -> nerdctl.v1.DiagnosticResult
	88,  // 89: nerdctl.v1.DiagnoseNetworkResponse.debug_info:type_name -> nerdctl.v1.DiagnoseNetworkResponse.DebugInfoEntry
	89,  // 90: nerdctl.v1.DiagnosticResult.details:type_name -> nerdctl.v1.DiagnosticResult.DetailsEntry
	58,  // 91: nerdctl.v1.NetworkConnectivityResponse.results:type_name -> nerdctl.v1.ConnectivityResult
	61,  // 92: nerdctl.v1.GetNetworkSupportedFeaturesResponse.features:type_name -> nerdctl.v1.NetworkSupportedFeatures
	90,  // 93: nerdctl.v1.NetworkSupportedFeatures.capabilities:type_name -> nerdctl.v1.NetworkSupportedFeatures.CapabilitiesEntry
	91,  // 94: nerdctl.v1.OperationResult.metadata:type_name -> nerdctl.v1.OperationResult.MetadataEntry
	93,  // 95: nerdctl.v1.OperationResult.timestamp:type_name -> google.protobuf.Timestamp
	93,  // 96: nerdctl.v1.OperationMetadata.started_at:type_name -> google.protobuf.Timestamp
	93,  // 97: nerdctl.v1.OperationMetadata.completed_at:type_name -> google.protobuf.Timestamp
	92,  // 98: nerdctl.v1.OperationMetadata.system_info:type_name -> nerdctl.v1.OperationMetadata.SystemInfoEntry
	10,  // 99: nerdctl.v1.NetworkServiceExtended.CreateNetwork:input_type -> nerdctl.v1.CreateNetworkExtendedRequest
	12,  // 100: nerdctl.v1.NetworkServiceExtended.RemoveNetwork:input_type -> nerdctl.v1.RemoveNetworkExtendedRequest
	14,  // 101: nerdctl.v1.NetworkServiceExtended.ListNetworks:input_type -> nerdctl.v1.ListNetworksExtendedRequest
	16,  // 102: nerdctl.v1.NetworkServiceExtended.InspectNetwork:input_type -> nerdctl.v1.InspectNetworkExtendedRequest
	18,  // 103: nerdctl.v1.NetworkServiceExtended.ConnectNetwork:input_type -> nerdctl.v1.ConnectNetworkExtendedRequest
	21,  // 104: nerdctl.v1.NetworkServiceExtended.DisconnectNetwork:input_type -> nerdctl.v1.DisconnectNetworkExtendedRequest
	23,  // 105: nerdctl.v1.NetworkServiceExtended.PruneNetworks:input_type -> nerdctl.v1.PruneNetworksExtendedRequest
	25,  // 106: nerdctl.v1.NetworkServiceExtended.UpdateNetwork:input_type -> nerdctl.v1.UpdateNetworkRequest
	27,  // 107: nerdctl.v1.NetworkServiceExtended.NetworkExists:input_type -> nerdctl.v1.NetworkExistsRequest
	29,  // 108: nerdctl.v1.NetworkServiceExtended.NetworkEvents:input_type -> nerdctl.v1.NetworkEventsRequest
	36,  // 109: nerdctl.v1.NetworkServiceExtended.NetworkStats:input_type -> nerdctl.v1.NetworkStatsRequest
	39,  // 110: nerdctl.v1.NetworkServiceExtended.BatchNetworkOperations:input_type -> nerdctl.v1.BatchNetworkRequest
	42,  // 111: nerdctl.v1.NetworkServiceExtended.BulkNetworkInspect:input_type -> nerdctl.v1.BulkInspectNetworkRequest
	45,  // 112: nerdctl.v1.NetworkServiceExtended.ListNetworkDrivers:input_type -> nerdctl.v1.ListNetworkDriversRequest
	48,  // 113: nerdctl.v1.NetworkServiceExtended.GetNetworkConfig:input_type -> nerdctl.v1.GetNetworkConfigRequest
	50,  // 114: nerdctl.v1.NetworkServiceExtended.ValidateNetworkConfig:input_type -> nerdctl.v1.ValidateNetworkConfigRequest
	53,  // 115: nerdctl.v1.NetworkServiceExtended.DiagnoseNetwork:input_type -> nerdctl.v1.DiagnoseNetworkRequest
	56,  // 116: nerdctl.v1.NetworkServiceExtended.NetworkConnectivity:input_type -> nerdctl.v1.NetworkConnectivityRequest
	59,  // 117: nerdctl.v1.NetworkServiceExtended.GetNetworkSupportedFeatures:input_type -> nerdctl.v1.GetNetworkSupportedFeaturesRequest
	11,  // 118: nerdctl.v1.NetworkServiceExtended.CreateNetwork:output_type -> nerdctl.v1.CreateNetworkExtendedResponse
	13,  // 119: nerdctl.v1.NetworkServiceExtended.RemoveNetwork:output_type -> nerdctl.v1.RemoveNetworkExtendedResponse
	15,  // 120: nerdctl.v1.NetworkServiceExtended.ListNetworks:output_type -> nerdctl.v1.ListNetworksExtendedResponse
	17,  // 121: nerdctl.v1.NetworkServiceExtended.InspectNetwork:output_type -> nerdctl.v1.InspectNetworkExtendedResponse
	20,  // 122: nerdctl.v1.NetworkServiceExtended.ConnectNetwork:output_type -> nerdctl.v1.ConnectNetworkExtendedResponse
	22,  // 123: nerdctl.v1.NetworkServiceExtended.DisconnectNetwork:output_type -> nerdctl.v1.DisconnectNetworkExtendedResponse
	24,  // 124: nerdctl.v1.NetworkServiceExtended.PruneNetworks:output_type -> nerdctl.v1.PruneNetworksExtendedResponse
	26,  // 125: nerdctl.v1.NetworkServiceExtended.UpdateNetwork:output_type -> nerdctl.v1.UpdateNetworkResponse
	28,  // 126: nerdctl.v1.NetworkServiceExtended.NetworkExists:output_type -> nerdctl.v1.NetworkExistsResponse
	30,  // 127: nerdctl.v1.NetworkServiceExtended.NetworkEvents:output_type -> nerdctl.v1.NetworkEvent
	37,  // 128: nerdctl.v1.NetworkServiceExtended.NetworkStats:output_type -> nerdctl.v1.NetworkStatsResponse
	41,  // 129: nerdctl.v1.NetworkServiceExtended.BatchNetworkOperations:output_type -> nerdctl.v1.BatchNetworkResponse
	43,  // 130: nerdctl.v1.NetworkServiceExtended.BulkNetworkInspect:output_type -> nerdctl.v1.BulkInspectNetworkResponse
	46,  // 131: nerdctl.v1.NetworkServiceExtended.ListNetworkDrivers:output_type -> nerdctl.v1.ListNetworkDriversResponse
	49,  // 132: nerdctl.v1.NetworkServiceExtended.GetNetworkConfig:output_type -> nerdctl.v1.GetNetworkConfigResponse
	51,  // 133: nerdctl.v1.NetworkServiceExtended.ValidateNetworkConfig:output_type -> nerdctl.v1.ValidateNetworkConfigResponse
	54,  // 134: nerdctl.v1.NetworkServiceExtended.DiagnoseNetwork:output_type -> nerdctl.v1.DiagnoseNetworkResponse
	57,  // 135: nerdctl.v1.NetworkServiceExtended.NetworkConnectivity:output_type -> nerdctl.v1.NetworkConnectivityResponse
	60,  // 136: nerdctl.v1.NetworkServiceExtended.GetNetworkSupportedFeatures:output_type -> nerdctl.v1.GetNetworkSupportedFeaturesResponse
	118, // [118:137] is the sub-list for method output_type
	99,  // [99:118] is the sub-list for method input_type
	99,  // [99:99] is the sub-list for extension type_name
	99,  // [99:99] is the sub-list for extension extendee
	0,   // [0:99] is the sub-list for field type_name
}

func init() { file_api_proto_network_service_extended_proto_init() }
func file_api_proto_network_service_extended_proto_init() {
	if File_api_proto_network_service_extended_proto != nil {
		return
	}
	file_api_proto_common_proto_init()
	file_api_proto_network_service_proto_init()
	file_api_proto_network_service_extended_proto_msgTypes[29].OneofWrappers = []any{
		(*NetworkEvent_CreateEvent)(nil),
		(*NetworkEvent_RemoveEvent)(nil),
		(*NetworkEvent_ConnectEvent)(nil),
		(*NetworkEvent_DisconnectEvent)(nil),
		(*NetworkEvent_UpdateEvent)(nil),
	}
	file_api_proto_network_service_extended_proto_msgTypes[39].OneofWrappers = []any{
		(*NetworkOperation_Create)(nil),
		(*NetworkOperation_Remove)(nil),
		(*NetworkOperation_Connect)(nil),
		(*NetworkOperation_Disconnect)(nil),
		(*NetworkOperation_Update)(nil),
	}
	file_api_proto_network_service_extended_proto_msgTypes[40].OneofWrappers = []any{
		(*BatchNetworkResponse_CreateResult)(nil),
		(*BatchNetworkResponse_RemoveResult)(nil),
		(*BatchNetworkResponse_ConnectResult)(nil),
		(*BatchNetworkResponse_DisconnectResult)(nil),
		(*BatchNetworkResponse_UpdateResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_network_service_extended_proto_rawDesc), len(file_api_proto_network_service_extended_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   92,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_network_service_extended_proto_goTypes,
		DependencyIndexes: file_api_proto_network_service_extended_proto_depIdxs,
		EnumInfos:         file_api_proto_network_service_extended_proto_enumTypes,
		MessageInfos:      file_api_proto_network_service_extended_proto_msgTypes,
	}.Build()
	File_api_proto_network_service_extended_proto = out.File
	file_api_proto_network_service_extended_proto_goTypes = nil
	file_api_proto_network_service_extended_proto_depIdxs = nil
}
