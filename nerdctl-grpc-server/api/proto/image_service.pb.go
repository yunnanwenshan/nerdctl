// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: api/proto/image_service.proto

package proto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Pull image request/response
type PullImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         string                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`                                                                                                 // Image reference
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                                         // Containerd namespace
	Platform      *Platform              `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`                                                                                           // Platform specification
	AllPlatforms  bool                   `protobuf:"varint,4,opt,name=all_platforms,json=allPlatforms,proto3" json:"all_platforms,omitempty"`                                                              // Pull all platforms
	Quiet         bool                   `protobuf:"varint,5,opt,name=quiet,proto3" json:"quiet,omitempty"`                                                                                                // Suppress output
	Auth          *RegistryAuth          `protobuf:"bytes,6,opt,name=auth,proto3" json:"auth,omitempty"`                                                                                                   // Registry authentication
	PullOpts      map[string]string      `protobuf:"bytes,7,rep,name=pull_opts,json=pullOpts,proto3" json:"pull_opts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional pull options
	Verify        bool                   `protobuf:"varint,8,opt,name=verify,proto3" json:"verify,omitempty"`                                                                                              // Verify image signature
	Snapshotter   string                 `protobuf:"bytes,9,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`                                                                                     // Snapshotter to use
	UnpackOpts    []string               `protobuf:"bytes,10,rep,name=unpack_opts,json=unpackOpts,proto3" json:"unpack_opts,omitempty"`                                                                    // Unpack options
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullImageRequest) Reset() {
	*x = PullImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullImageRequest) ProtoMessage() {}

func (x *PullImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullImageRequest.ProtoReflect.Descriptor instead.
func (*PullImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{0}
}

func (x *PullImageRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PullImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PullImageRequest) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *PullImageRequest) GetAllPlatforms() bool {
	if x != nil {
		return x.AllPlatforms
	}
	return false
}

func (x *PullImageRequest) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *PullImageRequest) GetAuth() *RegistryAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *PullImageRequest) GetPullOpts() map[string]string {
	if x != nil {
		return x.PullOpts
	}
	return nil
}

func (x *PullImageRequest) GetVerify() bool {
	if x != nil {
		return x.Verify
	}
	return false
}

func (x *PullImageRequest) GetSnapshotter() string {
	if x != nil {
		return x.Snapshotter
	}
	return ""
}

func (x *PullImageRequest) GetUnpackOpts() []string {
	if x != nil {
		return x.UnpackOpts
	}
	return nil
}

type PullImageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*PullImageResponse_Progress
	//	*PullImageResponse_LayerId
	//	*PullImageResponse_Offset
	//	*PullImageResponse_Total
	//	*PullImageResponse_Status
	//	*PullImageResponse_Image
	Response      isPullImageResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullImageResponse) Reset() {
	*x = PullImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullImageResponse) ProtoMessage() {}

func (x *PullImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullImageResponse.ProtoReflect.Descriptor instead.
func (*PullImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{1}
}

func (x *PullImageResponse) GetResponse() isPullImageResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *PullImageResponse) GetProgress() *OperationProgress {
	if x != nil {
		if x, ok := x.Response.(*PullImageResponse_Progress); ok {
			return x.Progress
		}
	}
	return nil
}

func (x *PullImageResponse) GetLayerId() string {
	if x != nil {
		if x, ok := x.Response.(*PullImageResponse_LayerId); ok {
			return x.LayerId
		}
	}
	return ""
}

func (x *PullImageResponse) GetOffset() int64 {
	if x != nil {
		if x, ok := x.Response.(*PullImageResponse_Offset); ok {
			return x.Offset
		}
	}
	return 0
}

func (x *PullImageResponse) GetTotal() int64 {
	if x != nil {
		if x, ok := x.Response.(*PullImageResponse_Total); ok {
			return x.Total
		}
	}
	return 0
}

func (x *PullImageResponse) GetStatus() string {
	if x != nil {
		if x, ok := x.Response.(*PullImageResponse_Status); ok {
			return x.Status
		}
	}
	return ""
}

func (x *PullImageResponse) GetImage() *ImageInfo {
	if x != nil {
		if x, ok := x.Response.(*PullImageResponse_Image); ok {
			return x.Image
		}
	}
	return nil
}

type isPullImageResponse_Response interface {
	isPullImageResponse_Response()
}

type PullImageResponse_Progress struct {
	Progress *OperationProgress `protobuf:"bytes,1,opt,name=progress,proto3,oneof"` // Pull progress
}

type PullImageResponse_LayerId struct {
	LayerId string `protobuf:"bytes,2,opt,name=layer_id,json=layerId,proto3,oneof"` // Layer being pulled
}

type PullImageResponse_Offset struct {
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3,oneof"` // Bytes downloaded
}

type PullImageResponse_Total struct {
	Total int64 `protobuf:"varint,4,opt,name=total,proto3,oneof"` // Total bytes
}

type PullImageResponse_Status struct {
	Status string `protobuf:"bytes,5,opt,name=status,proto3,oneof"` // Status message
}

type PullImageResponse_Image struct {
	Image *ImageInfo `protobuf:"bytes,6,opt,name=image,proto3,oneof"` // Final result
}

func (*PullImageResponse_Progress) isPullImageResponse_Response() {}

func (*PullImageResponse_LayerId) isPullImageResponse_Response() {}

func (*PullImageResponse_Offset) isPullImageResponse_Response() {}

func (*PullImageResponse_Total) isPullImageResponse_Response() {}

func (*PullImageResponse_Status) isPullImageResponse_Response() {}

func (*PullImageResponse_Image) isPullImageResponse_Response() {}

// Push image request/response
type PushImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         string                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`                                                                                                 // Image reference
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                                         // Containerd namespace
	Platform      *Platform              `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`                                                                                           // Platform specification
	AllPlatforms  bool                   `protobuf:"varint,4,opt,name=all_platforms,json=allPlatforms,proto3" json:"all_platforms,omitempty"`                                                              // Push all platforms
	Quiet         bool                   `protobuf:"varint,5,opt,name=quiet,proto3" json:"quiet,omitempty"`                                                                                                // Suppress output
	Auth          *RegistryAuth          `protobuf:"bytes,6,opt,name=auth,proto3" json:"auth,omitempty"`                                                                                                   // Registry authentication
	Sign          bool                   `protobuf:"varint,7,opt,name=sign,proto3" json:"sign,omitempty"`                                                                                                  // Sign image during push
	PushOpts      map[string]string      `protobuf:"bytes,8,rep,name=push_opts,json=pushOpts,proto3" json:"push_opts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional push options
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushImageRequest) Reset() {
	*x = PushImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushImageRequest) ProtoMessage() {}

func (x *PushImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushImageRequest.ProtoReflect.Descriptor instead.
func (*PushImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{2}
}

func (x *PushImageRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PushImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PushImageRequest) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *PushImageRequest) GetAllPlatforms() bool {
	if x != nil {
		return x.AllPlatforms
	}
	return false
}

func (x *PushImageRequest) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *PushImageRequest) GetAuth() *RegistryAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *PushImageRequest) GetSign() bool {
	if x != nil {
		return x.Sign
	}
	return false
}

func (x *PushImageRequest) GetPushOpts() map[string]string {
	if x != nil {
		return x.PushOpts
	}
	return nil
}

type PushImageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*PushImageResponse_Progress
	//	*PushImageResponse_LayerId
	//	*PushImageResponse_Offset
	//	*PushImageResponse_Total
	//	*PushImageResponse_Status
	//	*PushImageResponse_Digest
	Response      isPushImageResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushImageResponse) Reset() {
	*x = PushImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushImageResponse) ProtoMessage() {}

func (x *PushImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushImageResponse.ProtoReflect.Descriptor instead.
func (*PushImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{3}
}

func (x *PushImageResponse) GetResponse() isPushImageResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *PushImageResponse) GetProgress() *OperationProgress {
	if x != nil {
		if x, ok := x.Response.(*PushImageResponse_Progress); ok {
			return x.Progress
		}
	}
	return nil
}

func (x *PushImageResponse) GetLayerId() string {
	if x != nil {
		if x, ok := x.Response.(*PushImageResponse_LayerId); ok {
			return x.LayerId
		}
	}
	return ""
}

func (x *PushImageResponse) GetOffset() int64 {
	if x != nil {
		if x, ok := x.Response.(*PushImageResponse_Offset); ok {
			return x.Offset
		}
	}
	return 0
}

func (x *PushImageResponse) GetTotal() int64 {
	if x != nil {
		if x, ok := x.Response.(*PushImageResponse_Total); ok {
			return x.Total
		}
	}
	return 0
}

func (x *PushImageResponse) GetStatus() string {
	if x != nil {
		if x, ok := x.Response.(*PushImageResponse_Status); ok {
			return x.Status
		}
	}
	return ""
}

func (x *PushImageResponse) GetDigest() string {
	if x != nil {
		if x, ok := x.Response.(*PushImageResponse_Digest); ok {
			return x.Digest
		}
	}
	return ""
}

type isPushImageResponse_Response interface {
	isPushImageResponse_Response()
}

type PushImageResponse_Progress struct {
	Progress *OperationProgress `protobuf:"bytes,1,opt,name=progress,proto3,oneof"` // Push progress
}

type PushImageResponse_LayerId struct {
	LayerId string `protobuf:"bytes,2,opt,name=layer_id,json=layerId,proto3,oneof"` // Layer being pushed
}

type PushImageResponse_Offset struct {
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3,oneof"` // Bytes uploaded
}

type PushImageResponse_Total struct {
	Total int64 `protobuf:"varint,4,opt,name=total,proto3,oneof"` // Total bytes
}

type PushImageResponse_Status struct {
	Status string `protobuf:"bytes,5,opt,name=status,proto3,oneof"` // Status message
}

type PushImageResponse_Digest struct {
	Digest string `protobuf:"bytes,6,opt,name=digest,proto3,oneof"` // Final image digest
}

func (*PushImageResponse_Progress) isPushImageResponse_Response() {}

func (*PushImageResponse_LayerId) isPushImageResponse_Response() {}

func (*PushImageResponse_Offset) isPushImageResponse_Response() {}

func (*PushImageResponse_Total) isPushImageResponse_Response() {}

func (*PushImageResponse_Status) isPushImageResponse_Response() {}

func (*PushImageResponse_Digest) isPushImageResponse_Response() {}

// List images request/response
type ListImagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                       // Containerd namespace
	Filters       map[string]string      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Filters (name, label, etc.)
	All           bool                   `protobuf:"varint,3,opt,name=all,proto3" json:"all,omitempty"`                                                                                  // Include intermediate images
	Digests       bool                   `protobuf:"varint,4,opt,name=digests,proto3" json:"digests,omitempty"`                                                                          // Show digests
	Quiet         bool                   `protobuf:"varint,5,opt,name=quiet,proto3" json:"quiet,omitempty"`                                                                              // Only show image IDs
	Format        string                 `protobuf:"bytes,6,opt,name=format,proto3" json:"format,omitempty"`                                                                             // Output format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesRequest) Reset() {
	*x = ListImagesRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesRequest) ProtoMessage() {}

func (x *ListImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesRequest.ProtoReflect.Descriptor instead.
func (*ListImagesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListImagesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListImagesRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListImagesRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ListImagesRequest) GetDigests() bool {
	if x != nil {
		return x.Digests
	}
	return false
}

func (x *ListImagesRequest) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *ListImagesRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type ListImagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*ImageInfo           `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"` // Image list
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesResponse) Reset() {
	*x = ListImagesResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesResponse) ProtoMessage() {}

func (x *ListImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesResponse.ProtoReflect.Descriptor instead.
func (*ListImagesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListImagesResponse) GetImages() []*ImageInfo {
	if x != nil {
		return x.Images
	}
	return nil
}

// Remove image request/response
type RemoveImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []string               `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`                   // Images to remove
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`             // Containerd namespace
	Force         bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`                    // Force removal
	NoPrune       bool                   `protobuf:"varint,4,opt,name=no_prune,json=noPrune,proto3" json:"no_prune,omitempty"` // Don't delete untagged parents
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveImageRequest) Reset() {
	*x = RemoveImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveImageRequest) ProtoMessage() {}

func (x *RemoveImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveImageRequest.ProtoReflect.Descriptor instead.
func (*RemoveImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveImageRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *RemoveImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RemoveImageRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *RemoveImageRequest) GetNoPrune() bool {
	if x != nil {
		return x.NoPrune
	}
	return false
}

type RemovedImage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"` // Removed image ID
	Untagged      string                 `protobuf:"bytes,2,opt,name=untagged,proto3" json:"untagged,omitempty"`              // Untagged reference
	Deleted       string                 `protobuf:"bytes,3,opt,name=deleted,proto3" json:"deleted,omitempty"`                // Deleted image ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemovedImage) Reset() {
	*x = RemovedImage{}
	mi := &file_api_proto_image_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemovedImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovedImage) ProtoMessage() {}

func (x *RemovedImage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovedImage.ProtoReflect.Descriptor instead.
func (*RemovedImage) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{7}
}

func (x *RemovedImage) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *RemovedImage) GetUntagged() string {
	if x != nil {
		return x.Untagged
	}
	return ""
}

func (x *RemovedImage) GetDeleted() string {
	if x != nil {
		return x.Deleted
	}
	return ""
}

type RemoveImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Removed       []*RemovedImage        `protobuf:"bytes,1,rep,name=removed,proto3" json:"removed,omitempty"` // Removed images
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveImageResponse) Reset() {
	*x = RemoveImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveImageResponse) ProtoMessage() {}

func (x *RemoveImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveImageResponse.ProtoReflect.Descriptor instead.
func (*RemoveImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveImageResponse) GetRemoved() []*RemovedImage {
	if x != nil {
		return x.Removed
	}
	return nil
}

// Inspect image request/response
type InspectImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         string                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`         // Image reference
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"` // Containerd namespace
	Platform      *Platform              `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`   // Platform specification
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectImageRequest) Reset() {
	*x = InspectImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectImageRequest) ProtoMessage() {}

func (x *InspectImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectImageRequest.ProtoReflect.Descriptor instead.
func (*InspectImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{9}
}

func (x *InspectImageRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *InspectImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *InspectImageRequest) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

type InspectImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         *ImageInfo             `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`       // Image information
	Manifest      *ImageManifest         `protobuf:"bytes,2,opt,name=manifest,proto3" json:"manifest,omitempty"` // Image manifest
	Config        *ImageConfig           `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`     // Image configuration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectImageResponse) Reset() {
	*x = InspectImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectImageResponse) ProtoMessage() {}

func (x *InspectImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectImageResponse.ProtoReflect.Descriptor instead.
func (*InspectImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{10}
}

func (x *InspectImageResponse) GetImage() *ImageInfo {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *InspectImageResponse) GetManifest() *ImageManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *InspectImageResponse) GetConfig() *ImageConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ImageManifest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaVersion int32                  `protobuf:"varint,1,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`                                                 // Manifest schema version
	MediaType     string                 `protobuf:"bytes,2,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`                                                              // Media type
	Config        *ImageConfig           `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`                                                                                     // Configuration
	Layers        []*ImageLayer          `protobuf:"bytes,4,rep,name=layers,proto3" json:"layers,omitempty"`                                                                                     // Layers
	Annotations   map[string]string      `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Annotations
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageManifest) Reset() {
	*x = ImageManifest{}
	mi := &file_api_proto_image_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageManifest) ProtoMessage() {}

func (x *ImageManifest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageManifest.ProtoReflect.Descriptor instead.
func (*ImageManifest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{11}
}

func (x *ImageManifest) GetSchemaVersion() int32 {
	if x != nil {
		return x.SchemaVersion
	}
	return 0
}

func (x *ImageManifest) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *ImageManifest) GetConfig() *ImageConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ImageManifest) GetLayers() []*ImageLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *ImageManifest) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type ImageConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaType     string                 `protobuf:"bytes,1,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`                                                     // Media type
	Digest        string                 `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`                                                                            // Digest
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                                                                               // Size in bytes
	Env           []string               `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`                                                                                  // Environment variables
	Cmd           []string               `protobuf:"bytes,5,rep,name=cmd,proto3" json:"cmd,omitempty"`                                                                                  // Default command
	Entrypoint    []string               `protobuf:"bytes,6,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`                                                                    // Entrypoint
	WorkingDir    string                 `protobuf:"bytes,7,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`                                                  // Working directory
	User          string                 `protobuf:"bytes,8,opt,name=user,proto3" json:"user,omitempty"`                                                                                // User
	ExposedPorts  []string               `protobuf:"bytes,9,rep,name=exposed_ports,json=exposedPorts,proto3" json:"exposed_ports,omitempty"`                                            // Exposed ports
	Volumes       []string               `protobuf:"bytes,10,rep,name=volumes,proto3" json:"volumes,omitempty"`                                                                         // Volumes
	Labels        map[string]string      `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Labels
	StopSignal    string                 `protobuf:"bytes,12,opt,name=stop_signal,json=stopSignal,proto3" json:"stop_signal,omitempty"`                                                 // Stop signal
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageConfig) Reset() {
	*x = ImageConfig{}
	mi := &file_api_proto_image_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageConfig) ProtoMessage() {}

func (x *ImageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageConfig.ProtoReflect.Descriptor instead.
func (*ImageConfig) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{12}
}

func (x *ImageConfig) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *ImageConfig) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *ImageConfig) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ImageConfig) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ImageConfig) GetCmd() []string {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *ImageConfig) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *ImageConfig) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *ImageConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ImageConfig) GetExposedPorts() []string {
	if x != nil {
		return x.ExposedPorts
	}
	return nil
}

func (x *ImageConfig) GetVolumes() []string {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *ImageConfig) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ImageConfig) GetStopSignal() string {
	if x != nil {
		return x.StopSignal
	}
	return ""
}

type ImageLayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaType     string                 `protobuf:"bytes,1,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"` // Media type
	Digest        string                 `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`                        // Digest
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                           // Size in bytes
	Urls          []string               `protobuf:"bytes,4,rep,name=urls,proto3" json:"urls,omitempty"`                            // Download URLs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageLayer) Reset() {
	*x = ImageLayer{}
	mi := &file_api_proto_image_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageLayer) ProtoMessage() {}

func (x *ImageLayer) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageLayer.ProtoReflect.Descriptor instead.
func (*ImageLayer) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{13}
}

func (x *ImageLayer) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *ImageLayer) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *ImageLayer) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ImageLayer) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

// Tag image request/response
type TagImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceImage   string                 `protobuf:"bytes,1,opt,name=source_image,json=sourceImage,proto3" json:"source_image,omitempty"` // Source image reference
	TargetImage   string                 `protobuf:"bytes,2,opt,name=target_image,json=targetImage,proto3" json:"target_image,omitempty"` // Target image reference
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`                        // Containerd namespace
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagImageRequest) Reset() {
	*x = TagImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagImageRequest) ProtoMessage() {}

func (x *TagImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagImageRequest.ProtoReflect.Descriptor instead.
func (*TagImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{14}
}

func (x *TagImageRequest) GetSourceImage() string {
	if x != nil {
		return x.SourceImage
	}
	return ""
}

func (x *TagImageRequest) GetTargetImage() string {
	if x != nil {
		return x.TargetImage
	}
	return ""
}

func (x *TagImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type TagImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tagged        bool                   `protobuf:"varint,1,opt,name=tagged,proto3" json:"tagged,omitempty"` // Whether image was tagged
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagImageResponse) Reset() {
	*x = TagImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagImageResponse) ProtoMessage() {}

func (x *TagImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagImageResponse.ProtoReflect.Descriptor instead.
func (*TagImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{15}
}

func (x *TagImageResponse) GetTagged() bool {
	if x != nil {
		return x.Tagged
	}
	return false
}

// Build image request/response
type BuildImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*BuildImageRequest_Options
	//	*BuildImageRequest_Dockerfile
	//	*BuildImageRequest_Context
	Request       isBuildImageRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildImageRequest) Reset() {
	*x = BuildImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildImageRequest) ProtoMessage() {}

func (x *BuildImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildImageRequest.ProtoReflect.Descriptor instead.
func (*BuildImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{16}
}

func (x *BuildImageRequest) GetRequest() isBuildImageRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *BuildImageRequest) GetOptions() *BuildImageOptions {
	if x != nil {
		if x, ok := x.Request.(*BuildImageRequest_Options); ok {
			return x.Options
		}
	}
	return nil
}

func (x *BuildImageRequest) GetDockerfile() []byte {
	if x != nil {
		if x, ok := x.Request.(*BuildImageRequest_Dockerfile); ok {
			return x.Dockerfile
		}
	}
	return nil
}

func (x *BuildImageRequest) GetContext() []byte {
	if x != nil {
		if x, ok := x.Request.(*BuildImageRequest_Context); ok {
			return x.Context
		}
	}
	return nil
}

type isBuildImageRequest_Request interface {
	isBuildImageRequest_Request()
}

type BuildImageRequest_Options struct {
	Options *BuildImageOptions `protobuf:"bytes,1,opt,name=options,proto3,oneof"` // Build options
}

type BuildImageRequest_Dockerfile struct {
	Dockerfile []byte `protobuf:"bytes,2,opt,name=dockerfile,proto3,oneof"` // Dockerfile content
}

type BuildImageRequest_Context struct {
	Context []byte `protobuf:"bytes,3,opt,name=context,proto3,oneof"` // Build context data
}

func (*BuildImageRequest_Options) isBuildImageRequest_Request() {}

func (*BuildImageRequest_Dockerfile) isBuildImageRequest_Request() {}

func (*BuildImageRequest_Context) isBuildImageRequest_Request() {}

type BuildImageOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           string                 `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`                                                                                            // Image tag
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                                // Containerd namespace
	Dockerfile    string                 `protobuf:"bytes,3,opt,name=dockerfile,proto3" json:"dockerfile,omitempty"`                                                                              // Dockerfile path
	BuildArgs     []string               `protobuf:"bytes,4,rep,name=build_args,json=buildArgs,proto3" json:"build_args,omitempty"`                                                               // Build arguments
	Labels        []string               `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`                                                                                      // Image labels
	Target        string                 `protobuf:"bytes,6,opt,name=target,proto3" json:"target,omitempty"`                                                                                      // Build target
	Platform      *Platform              `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`                                                                                  // Platform specification
	NoCache       bool                   `protobuf:"varint,8,opt,name=no_cache,json=noCache,proto3" json:"no_cache,omitempty"`                                                                    // Don't use cache
	Pull          bool                   `protobuf:"varint,9,opt,name=pull,proto3" json:"pull,omitempty"`                                                                                         // Always pull base images
	Rm            bool                   `protobuf:"varint,10,opt,name=rm,proto3" json:"rm,omitempty"`                                                                                            // Remove intermediate containers
	ForceRm       bool                   `protobuf:"varint,11,opt,name=force_rm,json=forceRm,proto3" json:"force_rm,omitempty"`                                                                   // Always remove intermediate containers
	Quiet         bool                   `protobuf:"varint,12,opt,name=quiet,proto3" json:"quiet,omitempty"`                                                                                      // Suppress build output
	Memory        int64                  `protobuf:"varint,13,opt,name=memory,proto3" json:"memory,omitempty"`                                                                                    // Memory limit
	MemorySwap    int64                  `protobuf:"varint,14,opt,name=memory_swap,json=memorySwap,proto3" json:"memory_swap,omitempty"`                                                          // Memory + swap limit
	CpuShares     int32                  `protobuf:"varint,15,opt,name=cpu_shares,json=cpuShares,proto3" json:"cpu_shares,omitempty"`                                                             // CPU shares
	CpuSetCpus    string                 `protobuf:"bytes,16,opt,name=cpu_set_cpus,json=cpuSetCpus,proto3" json:"cpu_set_cpus,omitempty"`                                                         // CPUs to use
	CpuSetMems    string                 `protobuf:"bytes,17,opt,name=cpu_set_mems,json=cpuSetMems,proto3" json:"cpu_set_mems,omitempty"`                                                         // Memory nodes to use
	CacheFrom     []string               `protobuf:"bytes,18,rep,name=cache_from,json=cacheFrom,proto3" json:"cache_from,omitempty"`                                                              // Cache source images
	Isolation     string                 `protobuf:"bytes,19,opt,name=isolation,proto3" json:"isolation,omitempty"`                                                                               // Container isolation
	ShmSize       string                 `protobuf:"bytes,20,opt,name=shm_size,json=shmSize,proto3" json:"shm_size,omitempty"`                                                                    // Shared memory size
	Squash        bool                   `protobuf:"varint,21,opt,name=squash,proto3" json:"squash,omitempty"`                                                                                    // Squash layers
	Annotations   map[string]string      `protobuf:"bytes,22,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Image annotations
	Network       string                 `protobuf:"bytes,23,opt,name=network,proto3" json:"network,omitempty"`                                                                                   // Network mode during build
	Secrets       []string               `protobuf:"bytes,24,rep,name=secrets,proto3" json:"secrets,omitempty"`                                                                                   // Build secrets
	Ssh           []string               `protobuf:"bytes,25,rep,name=ssh,proto3" json:"ssh,omitempty"`                                                                                           // SSH agent sockets
	BuildkitHost  string                 `protobuf:"bytes,26,opt,name=buildkit_host,json=buildkitHost,proto3" json:"buildkit_host,omitempty"`                                                     // BuildKit daemon address
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildImageOptions) Reset() {
	*x = BuildImageOptions{}
	mi := &file_api_proto_image_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildImageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildImageOptions) ProtoMessage() {}

func (x *BuildImageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildImageOptions.ProtoReflect.Descriptor instead.
func (*BuildImageOptions) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{17}
}

func (x *BuildImageOptions) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *BuildImageOptions) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *BuildImageOptions) GetDockerfile() string {
	if x != nil {
		return x.Dockerfile
	}
	return ""
}

func (x *BuildImageOptions) GetBuildArgs() []string {
	if x != nil {
		return x.BuildArgs
	}
	return nil
}

func (x *BuildImageOptions) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *BuildImageOptions) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *BuildImageOptions) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *BuildImageOptions) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

func (x *BuildImageOptions) GetPull() bool {
	if x != nil {
		return x.Pull
	}
	return false
}

func (x *BuildImageOptions) GetRm() bool {
	if x != nil {
		return x.Rm
	}
	return false
}

func (x *BuildImageOptions) GetForceRm() bool {
	if x != nil {
		return x.ForceRm
	}
	return false
}

func (x *BuildImageOptions) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *BuildImageOptions) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *BuildImageOptions) GetMemorySwap() int64 {
	if x != nil {
		return x.MemorySwap
	}
	return 0
}

func (x *BuildImageOptions) GetCpuShares() int32 {
	if x != nil {
		return x.CpuShares
	}
	return 0
}

func (x *BuildImageOptions) GetCpuSetCpus() string {
	if x != nil {
		return x.CpuSetCpus
	}
	return ""
}

func (x *BuildImageOptions) GetCpuSetMems() string {
	if x != nil {
		return x.CpuSetMems
	}
	return ""
}

func (x *BuildImageOptions) GetCacheFrom() []string {
	if x != nil {
		return x.CacheFrom
	}
	return nil
}

func (x *BuildImageOptions) GetIsolation() string {
	if x != nil {
		return x.Isolation
	}
	return ""
}

func (x *BuildImageOptions) GetShmSize() string {
	if x != nil {
		return x.ShmSize
	}
	return ""
}

func (x *BuildImageOptions) GetSquash() bool {
	if x != nil {
		return x.Squash
	}
	return false
}

func (x *BuildImageOptions) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BuildImageOptions) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *BuildImageOptions) GetSecrets() []string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *BuildImageOptions) GetSsh() []string {
	if x != nil {
		return x.Ssh
	}
	return nil
}

func (x *BuildImageOptions) GetBuildkitHost() string {
	if x != nil {
		return x.BuildkitHost
	}
	return ""
}

type BuildImageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*BuildImageResponse_Output
	//	*BuildImageResponse_Progress
	//	*BuildImageResponse_Image
	//	*BuildImageResponse_Error
	Response      isBuildImageResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildImageResponse) Reset() {
	*x = BuildImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildImageResponse) ProtoMessage() {}

func (x *BuildImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildImageResponse.ProtoReflect.Descriptor instead.
func (*BuildImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{18}
}

func (x *BuildImageResponse) GetResponse() isBuildImageResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *BuildImageResponse) GetOutput() string {
	if x != nil {
		if x, ok := x.Response.(*BuildImageResponse_Output); ok {
			return x.Output
		}
	}
	return ""
}

func (x *BuildImageResponse) GetProgress() *OperationProgress {
	if x != nil {
		if x, ok := x.Response.(*BuildImageResponse_Progress); ok {
			return x.Progress
		}
	}
	return nil
}

func (x *BuildImageResponse) GetImage() *ImageInfo {
	if x != nil {
		if x, ok := x.Response.(*BuildImageResponse_Image); ok {
			return x.Image
		}
	}
	return nil
}

func (x *BuildImageResponse) GetError() *ErrorDetail {
	if x != nil {
		if x, ok := x.Response.(*BuildImageResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isBuildImageResponse_Response interface {
	isBuildImageResponse_Response()
}

type BuildImageResponse_Output struct {
	Output string `protobuf:"bytes,1,opt,name=output,proto3,oneof"` // Build output
}

type BuildImageResponse_Progress struct {
	Progress *OperationProgress `protobuf:"bytes,2,opt,name=progress,proto3,oneof"` // Build progress
}

type BuildImageResponse_Image struct {
	Image *ImageInfo `protobuf:"bytes,3,opt,name=image,proto3,oneof"` // Final result
}

type BuildImageResponse_Error struct {
	Error *ErrorDetail `protobuf:"bytes,4,opt,name=error,proto3,oneof"` // Build error
}

func (*BuildImageResponse_Output) isBuildImageResponse_Response() {}

func (*BuildImageResponse_Progress) isBuildImageResponse_Response() {}

func (*BuildImageResponse_Image) isBuildImageResponse_Response() {}

func (*BuildImageResponse_Error) isBuildImageResponse_Response() {}

// Load image request/response
type LoadImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*LoadImageRequest_Options
	//	*LoadImageRequest_Data
	Request       isLoadImageRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadImageRequest) Reset() {
	*x = LoadImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadImageRequest) ProtoMessage() {}

func (x *LoadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadImageRequest.ProtoReflect.Descriptor instead.
func (*LoadImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{19}
}

func (x *LoadImageRequest) GetRequest() isLoadImageRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *LoadImageRequest) GetOptions() *LoadImageOptions {
	if x != nil {
		if x, ok := x.Request.(*LoadImageRequest_Options); ok {
			return x.Options
		}
	}
	return nil
}

func (x *LoadImageRequest) GetData() []byte {
	if x != nil {
		if x, ok := x.Request.(*LoadImageRequest_Data); ok {
			return x.Data
		}
	}
	return nil
}

type isLoadImageRequest_Request interface {
	isLoadImageRequest_Request()
}

type LoadImageRequest_Options struct {
	Options *LoadImageOptions `protobuf:"bytes,1,opt,name=options,proto3,oneof"` // Load options
}

type LoadImageRequest_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"` // Tar archive data
}

func (*LoadImageRequest_Options) isLoadImageRequest_Request() {}

func (*LoadImageRequest_Data) isLoadImageRequest_Request() {}

type LoadImageOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`                            // Containerd namespace
	Quiet         bool                   `protobuf:"varint,2,opt,name=quiet,proto3" json:"quiet,omitempty"`                                   // Suppress output
	Platforms     []*Platform            `protobuf:"bytes,3,rep,name=platforms,proto3" json:"platforms,omitempty"`                            // Platforms to load
	AllPlatforms  bool                   `protobuf:"varint,4,opt,name=all_platforms,json=allPlatforms,proto3" json:"all_platforms,omitempty"` // Load all platforms
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadImageOptions) Reset() {
	*x = LoadImageOptions{}
	mi := &file_api_proto_image_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadImageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadImageOptions) ProtoMessage() {}

func (x *LoadImageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadImageOptions.ProtoReflect.Descriptor instead.
func (*LoadImageOptions) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{20}
}

func (x *LoadImageOptions) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *LoadImageOptions) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *LoadImageOptions) GetPlatforms() []*Platform {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *LoadImageOptions) GetAllPlatforms() bool {
	if x != nil {
		return x.AllPlatforms
	}
	return false
}

type LoadImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Loaded        []string               `protobuf:"bytes,1,rep,name=loaded,proto3" json:"loaded,omitempty"` // Loaded image references
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadImageResponse) Reset() {
	*x = LoadImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadImageResponse) ProtoMessage() {}

func (x *LoadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadImageResponse.ProtoReflect.Descriptor instead.
func (*LoadImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{21}
}

func (x *LoadImageResponse) GetLoaded() []string {
	if x != nil {
		return x.Loaded
	}
	return nil
}

// Save image request/response
type SaveImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []string               `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`                                  // Images to save
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`                            // Containerd namespace
	Platforms     []*Platform            `protobuf:"bytes,3,rep,name=platforms,proto3" json:"platforms,omitempty"`                            // Platforms to save
	AllPlatforms  bool                   `protobuf:"varint,4,opt,name=all_platforms,json=allPlatforms,proto3" json:"all_platforms,omitempty"` // Save all platforms
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveImageRequest) Reset() {
	*x = SaveImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveImageRequest) ProtoMessage() {}

func (x *SaveImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveImageRequest.ProtoReflect.Descriptor instead.
func (*SaveImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{22}
}

func (x *SaveImageRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *SaveImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SaveImageRequest) GetPlatforms() []*Platform {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *SaveImageRequest) GetAllPlatforms() bool {
	if x != nil {
		return x.AllPlatforms
	}
	return false
}

type SaveImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`          // Tar archive data chunk
	Finished      bool                   `protobuf:"varint,2,opt,name=finished,proto3" json:"finished,omitempty"` // Whether save is finished
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveImageResponse) Reset() {
	*x = SaveImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveImageResponse) ProtoMessage() {}

func (x *SaveImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveImageResponse.ProtoReflect.Descriptor instead.
func (*SaveImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{23}
}

func (x *SaveImageResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SaveImageResponse) GetFinished() bool {
	if x != nil {
		return x.Finished
	}
	return false
}

// Import image request/response
type ImportImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*ImportImageRequest_Options
	//	*ImportImageRequest_Data
	Request       isImportImageRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportImageRequest) Reset() {
	*x = ImportImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportImageRequest) ProtoMessage() {}

func (x *ImportImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportImageRequest.ProtoReflect.Descriptor instead.
func (*ImportImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{24}
}

func (x *ImportImageRequest) GetRequest() isImportImageRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ImportImageRequest) GetOptions() *ImportImageOptions {
	if x != nil {
		if x, ok := x.Request.(*ImportImageRequest_Options); ok {
			return x.Options
		}
	}
	return nil
}

func (x *ImportImageRequest) GetData() []byte {
	if x != nil {
		if x, ok := x.Request.(*ImportImageRequest_Data); ok {
			return x.Data
		}
	}
	return nil
}

type isImportImageRequest_Request interface {
	isImportImageRequest_Request()
}

type ImportImageRequest_Options struct {
	Options *ImportImageOptions `protobuf:"bytes,1,opt,name=options,proto3,oneof"` // Import options
}

type ImportImageRequest_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"` // Tar archive data
}

func (*ImportImageRequest_Options) isImportImageRequest_Request() {}

func (*ImportImageRequest_Data) isImportImageRequest_Request() {}

type ImportImageOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repository    string                 `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"` // Repository name
	Tag           string                 `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`               // Tag name
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`   // Containerd namespace
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`       // Commit message
	Changes       []string               `protobuf:"bytes,5,rep,name=changes,proto3" json:"changes,omitempty"`       // Dockerfile changes
	Platform      *Platform              `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform,omitempty"`     // Platform specification
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportImageOptions) Reset() {
	*x = ImportImageOptions{}
	mi := &file_api_proto_image_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportImageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportImageOptions) ProtoMessage() {}

func (x *ImportImageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportImageOptions.ProtoReflect.Descriptor instead.
func (*ImportImageOptions) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{25}
}

func (x *ImportImageOptions) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *ImportImageOptions) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ImportImageOptions) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImportImageOptions) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ImportImageOptions) GetChanges() []string {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *ImportImageOptions) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

type ImportImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"` // Imported image ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportImageResponse) Reset() {
	*x = ImportImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportImageResponse) ProtoMessage() {}

func (x *ImportImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportImageResponse.ProtoReflect.Descriptor instead.
func (*ImportImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{26}
}

func (x *ImportImageResponse) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

// Export image request/response
type ExportImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         string                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`         // Image reference
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"` // Containerd namespace
	Platform      *Platform              `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`   // Platform specification
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportImageRequest) Reset() {
	*x = ExportImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportImageRequest) ProtoMessage() {}

func (x *ExportImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportImageRequest.ProtoReflect.Descriptor instead.
func (*ExportImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{27}
}

func (x *ExportImageRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ExportImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ExportImageRequest) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

type ExportImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`          // Tar archive data chunk
	Finished      bool                   `protobuf:"varint,2,opt,name=finished,proto3" json:"finished,omitempty"` // Whether export is finished
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportImageResponse) Reset() {
	*x = ExportImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportImageResponse) ProtoMessage() {}

func (x *ExportImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportImageResponse.ProtoReflect.Descriptor instead.
func (*ExportImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{28}
}

func (x *ExportImageResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ExportImageResponse) GetFinished() bool {
	if x != nil {
		return x.Finished
	}
	return false
}

// Image history request/response
type ImageHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         string                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`                     // Image reference
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`             // Containerd namespace
	Human         bool                   `protobuf:"varint,3,opt,name=human,proto3" json:"human,omitempty"`                    // Human readable output
	Quiet         bool                   `protobuf:"varint,4,opt,name=quiet,proto3" json:"quiet,omitempty"`                    // Only show image IDs
	NoTrunc       bool                   `protobuf:"varint,5,opt,name=no_trunc,json=noTrunc,proto3" json:"no_trunc,omitempty"` // Don't truncate output
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageHistoryRequest) Reset() {
	*x = ImageHistoryRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageHistoryRequest) ProtoMessage() {}

func (x *ImageHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageHistoryRequest.ProtoReflect.Descriptor instead.
func (*ImageHistoryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{29}
}

func (x *ImageHistoryRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ImageHistoryRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageHistoryRequest) GetHuman() bool {
	if x != nil {
		return x.Human
	}
	return false
}

func (x *ImageHistoryRequest) GetQuiet() bool {
	if x != nil {
		return x.Quiet
	}
	return false
}

func (x *ImageHistoryRequest) GetNoTrunc() bool {
	if x != nil {
		return x.NoTrunc
	}
	return false
}

type ImageHistoryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // Layer ID
	Created       *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`                      // Creation time
	CreatedBy     string                 `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"` // Command that created the layer
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                           // Layer size
	Comment       string                 `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`                      // Layer comment
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`                            // Associated tags
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageHistoryEntry) Reset() {
	*x = ImageHistoryEntry{}
	mi := &file_api_proto_image_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageHistoryEntry) ProtoMessage() {}

func (x *ImageHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageHistoryEntry.ProtoReflect.Descriptor instead.
func (*ImageHistoryEntry) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{30}
}

func (x *ImageHistoryEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ImageHistoryEntry) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ImageHistoryEntry) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ImageHistoryEntry) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ImageHistoryEntry) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ImageHistoryEntry) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ImageHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	History       []*ImageHistoryEntry   `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"` // Image history
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageHistoryResponse) Reset() {
	*x = ImageHistoryResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageHistoryResponse) ProtoMessage() {}

func (x *ImageHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageHistoryResponse.ProtoReflect.Descriptor instead.
func (*ImageHistoryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{31}
}

func (x *ImageHistoryResponse) GetHistory() []*ImageHistoryEntry {
	if x != nil {
		return x.History
	}
	return nil
}

// Prune images request/response
type PruneImagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                       // Containerd namespace
	Filters       map[string]string      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Filters for pruning
	All           bool                   `protobuf:"varint,3,opt,name=all,proto3" json:"all,omitempty"`                                                                                  // Remove all unused images
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PruneImagesRequest) Reset() {
	*x = PruneImagesRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PruneImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PruneImagesRequest) ProtoMessage() {}

func (x *PruneImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PruneImagesRequest.ProtoReflect.Descriptor instead.
func (*PruneImagesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{32}
}

func (x *PruneImagesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PruneImagesRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *PruneImagesRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

type PrunedImage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`    // Pruned image ID
	RepoTags      []string               `protobuf:"bytes,2,rep,name=repo_tags,json=repoTags,proto3" json:"repo_tags,omitempty"` // Repository tags
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                        // Reclaimed size
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrunedImage) Reset() {
	*x = PrunedImage{}
	mi := &file_api_proto_image_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrunedImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrunedImage) ProtoMessage() {}

func (x *PrunedImage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrunedImage.ProtoReflect.Descriptor instead.
func (*PrunedImage) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{33}
}

func (x *PrunedImage) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *PrunedImage) GetRepoTags() []string {
	if x != nil {
		return x.RepoTags
	}
	return nil
}

func (x *PrunedImage) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PruneImagesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Pruned         []*PrunedImage         `protobuf:"bytes,1,rep,name=pruned,proto3" json:"pruned,omitempty"`                                        // Pruned images
	SpaceReclaimed int64                  `protobuf:"varint,2,opt,name=space_reclaimed,json=spaceReclaimed,proto3" json:"space_reclaimed,omitempty"` // Total space reclaimed
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PruneImagesResponse) Reset() {
	*x = PruneImagesResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PruneImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PruneImagesResponse) ProtoMessage() {}

func (x *PruneImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PruneImagesResponse.ProtoReflect.Descriptor instead.
func (*PruneImagesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{34}
}

func (x *PruneImagesResponse) GetPruned() []*PrunedImage {
	if x != nil {
		return x.Pruned
	}
	return nil
}

func (x *PruneImagesResponse) GetSpaceReclaimed() int64 {
	if x != nil {
		return x.SpaceReclaimed
	}
	return 0
}

// Search images request/response
type SearchImagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          string                 `protobuf:"bytes,1,opt,name=term,proto3" json:"term,omitempty"`                                                                                 // Search term
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                                                                              // Maximum results
	Filters       map[string]string      `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Search filters
	NoTrunc       bool                   `protobuf:"varint,4,opt,name=no_trunc,json=noTrunc,proto3" json:"no_trunc,omitempty"`                                                           // Don't truncate output
	Auth          *RegistryAuth          `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`                                                                                 // Registry authentication
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchImagesRequest) Reset() {
	*x = SearchImagesRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchImagesRequest) ProtoMessage() {}

func (x *SearchImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchImagesRequest.ProtoReflect.Descriptor instead.
func (*SearchImagesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{35}
}

func (x *SearchImagesRequest) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *SearchImagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchImagesRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchImagesRequest) GetNoTrunc() bool {
	if x != nil {
		return x.NoTrunc
	}
	return false
}

func (x *SearchImagesRequest) GetAuth() *RegistryAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type SearchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                             // Image name
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`               // Image description
	StarCount     int32                  `protobuf:"varint,3,opt,name=star_count,json=starCount,proto3" json:"star_count,omitempty"` // Star count
	Official      bool                   `protobuf:"varint,4,opt,name=official,proto3" json:"official,omitempty"`                    // Official image
	Automated     bool                   `protobuf:"varint,5,opt,name=automated,proto3" json:"automated,omitempty"`                  // Automated build
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	mi := &file_api_proto_image_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{36}
}

func (x *SearchResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchResult) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SearchResult) GetStarCount() int32 {
	if x != nil {
		return x.StarCount
	}
	return 0
}

func (x *SearchResult) GetOfficial() bool {
	if x != nil {
		return x.Official
	}
	return false
}

func (x *SearchResult) GetAutomated() bool {
	if x != nil {
		return x.Automated
	}
	return false
}

type SearchImagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*SearchResult        `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // Search results
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchImagesResponse) Reset() {
	*x = SearchImagesResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchImagesResponse) ProtoMessage() {}

func (x *SearchImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchImagesResponse.ProtoReflect.Descriptor instead.
func (*SearchImagesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{37}
}

func (x *SearchImagesResponse) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// Convert image request/response
type ConvertImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceImage   string                 `protobuf:"bytes,1,opt,name=source_image,json=sourceImage,proto3" json:"source_image,omitempty"`         // Source image reference
	TargetImage   string                 `protobuf:"bytes,2,opt,name=target_image,json=targetImage,proto3" json:"target_image,omitempty"`         // Target image reference
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`                                // Containerd namespace
	Format        string                 `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`                                      // Target format (oci, docker)
	Platform      *Platform              `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`                                  // Platform specification
	Uncompress    bool                   `protobuf:"varint,6,opt,name=uncompress,proto3" json:"uncompress,omitempty"`                             // Uncompress layers
	OciMediaTypes string                 `protobuf:"bytes,7,opt,name=oci_media_types,json=ociMediaTypes,proto3" json:"oci_media_types,omitempty"` // Use OCI media types
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertImageRequest) Reset() {
	*x = ConvertImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertImageRequest) ProtoMessage() {}

func (x *ConvertImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertImageRequest.ProtoReflect.Descriptor instead.
func (*ConvertImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{38}
}

func (x *ConvertImageRequest) GetSourceImage() string {
	if x != nil {
		return x.SourceImage
	}
	return ""
}

func (x *ConvertImageRequest) GetTargetImage() string {
	if x != nil {
		return x.TargetImage
	}
	return ""
}

func (x *ConvertImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConvertImageRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *ConvertImageRequest) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *ConvertImageRequest) GetUncompress() bool {
	if x != nil {
		return x.Uncompress
	}
	return false
}

func (x *ConvertImageRequest) GetOciMediaTypes() string {
	if x != nil {
		return x.OciMediaTypes
	}
	return ""
}

type ConvertImageResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConvertedImage string                 `protobuf:"bytes,1,opt,name=converted_image,json=convertedImage,proto3" json:"converted_image,omitempty"` // Converted image reference
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConvertImageResponse) Reset() {
	*x = ConvertImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertImageResponse) ProtoMessage() {}

func (x *ConvertImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertImageResponse.ProtoReflect.Descriptor instead.
func (*ConvertImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{39}
}

func (x *ConvertImageResponse) GetConvertedImage() string {
	if x != nil {
		return x.ConvertedImage
	}
	return ""
}

// Encrypt image request/response
type EncryptImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceImage   string                 `protobuf:"bytes,1,opt,name=source_image,json=sourceImage,proto3" json:"source_image,omitempty"`       // Source image reference
	TargetImage   string                 `protobuf:"bytes,2,opt,name=target_image,json=targetImage,proto3" json:"target_image,omitempty"`       // Target image reference
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`                              // Containerd namespace
	Recipients    []string               `protobuf:"bytes,4,rep,name=recipients,proto3" json:"recipients,omitempty"`                            // Encryption recipients
	EncryptionKey string                 `protobuf:"bytes,5,opt,name=encryption_key,json=encryptionKey,proto3" json:"encryption_key,omitempty"` // Encryption key
	Platform      *Platform              `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform,omitempty"`                                // Platform specification
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncryptImageRequest) Reset() {
	*x = EncryptImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptImageRequest) ProtoMessage() {}

func (x *EncryptImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptImageRequest.ProtoReflect.Descriptor instead.
func (*EncryptImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{40}
}

func (x *EncryptImageRequest) GetSourceImage() string {
	if x != nil {
		return x.SourceImage
	}
	return ""
}

func (x *EncryptImageRequest) GetTargetImage() string {
	if x != nil {
		return x.TargetImage
	}
	return ""
}

func (x *EncryptImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EncryptImageRequest) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *EncryptImageRequest) GetEncryptionKey() string {
	if x != nil {
		return x.EncryptionKey
	}
	return ""
}

func (x *EncryptImageRequest) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

type EncryptImageResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EncryptedImage string                 `protobuf:"bytes,1,opt,name=encrypted_image,json=encryptedImage,proto3" json:"encrypted_image,omitempty"` // Encrypted image reference
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EncryptImageResponse) Reset() {
	*x = EncryptImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptImageResponse) ProtoMessage() {}

func (x *EncryptImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptImageResponse.ProtoReflect.Descriptor instead.
func (*EncryptImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{41}
}

func (x *EncryptImageResponse) GetEncryptedImage() string {
	if x != nil {
		return x.EncryptedImage
	}
	return ""
}

// Decrypt image request/response
type DecryptImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceImage   string                 `protobuf:"bytes,1,opt,name=source_image,json=sourceImage,proto3" json:"source_image,omitempty"`       // Source image reference
	TargetImage   string                 `protobuf:"bytes,2,opt,name=target_image,json=targetImage,proto3" json:"target_image,omitempty"`       // Target image reference
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`                              // Containerd namespace
	DecryptionKey string                 `protobuf:"bytes,4,opt,name=decryption_key,json=decryptionKey,proto3" json:"decryption_key,omitempty"` // Decryption key
	Platform      *Platform              `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`                                // Platform specification
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecryptImageRequest) Reset() {
	*x = DecryptImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecryptImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptImageRequest) ProtoMessage() {}

func (x *DecryptImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptImageRequest.ProtoReflect.Descriptor instead.
func (*DecryptImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{42}
}

func (x *DecryptImageRequest) GetSourceImage() string {
	if x != nil {
		return x.SourceImage
	}
	return ""
}

func (x *DecryptImageRequest) GetTargetImage() string {
	if x != nil {
		return x.TargetImage
	}
	return ""
}

func (x *DecryptImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DecryptImageRequest) GetDecryptionKey() string {
	if x != nil {
		return x.DecryptionKey
	}
	return ""
}

func (x *DecryptImageRequest) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

type DecryptImageResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DecryptedImage string                 `protobuf:"bytes,1,opt,name=decrypted_image,json=decryptedImage,proto3" json:"decrypted_image,omitempty"` // Decrypted image reference
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DecryptImageResponse) Reset() {
	*x = DecryptImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecryptImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptImageResponse) ProtoMessage() {}

func (x *DecryptImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptImageResponse.ProtoReflect.Descriptor instead.
func (*DecryptImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{43}
}

func (x *DecryptImageResponse) GetDecryptedImage() string {
	if x != nil {
		return x.DecryptedImage
	}
	return ""
}

// Sign image request/response
type SignImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         string                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`                                                                                       // Image reference
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                               // Containerd namespace
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`                                                                                           // Signing key
	Cert          string                 `protobuf:"bytes,4,opt,name=cert,proto3" json:"cert,omitempty"`                                                                                         // Certificate
	Format        string                 `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`                                                                                     // Signature format
	Annotations   map[string]string      `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Signature annotations
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignImageRequest) Reset() {
	*x = SignImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignImageRequest) ProtoMessage() {}

func (x *SignImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignImageRequest.ProtoReflect.Descriptor instead.
func (*SignImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{44}
}

func (x *SignImageRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SignImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SignImageRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SignImageRequest) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *SignImageRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *SignImageRequest) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type SignImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     string                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"` // Image signature
	Digest        string                 `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`       // Signed image digest
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignImageResponse) Reset() {
	*x = SignImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignImageResponse) ProtoMessage() {}

func (x *SignImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignImageResponse.ProtoReflect.Descriptor instead.
func (*SignImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{45}
}

func (x *SignImageResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignImageResponse) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

// Verify image request/response
type VerifyImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         string                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`                                 // Image reference
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`                         // Containerd namespace
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`                                     // Verification key
	Cert          string                 `protobuf:"bytes,4,opt,name=cert,proto3" json:"cert,omitempty"`                                   // Certificate
	CheckClaims   bool                   `protobuf:"varint,5,opt,name=check_claims,json=checkClaims,proto3" json:"check_claims,omitempty"` // Check signature claims
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyImageRequest) Reset() {
	*x = VerifyImageRequest{}
	mi := &file_api_proto_image_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyImageRequest) ProtoMessage() {}

func (x *VerifyImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyImageRequest.ProtoReflect.Descriptor instead.
func (*VerifyImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{46}
}

func (x *VerifyImageRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *VerifyImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *VerifyImageRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *VerifyImageRequest) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *VerifyImageRequest) GetCheckClaims() bool {
	if x != nil {
		return x.CheckClaims
	}
	return false
}

type VerifyImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Verified      bool                   `protobuf:"varint,1,opt,name=verified,proto3" json:"verified,omitempty"`                // Whether signature is valid
	Signer        string                 `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`                     // Signature signer
	Claims        []string               `protobuf:"bytes,3,rep,name=claims,proto3" json:"claims,omitempty"`                     // Signature claims
	SignedAt      *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=signed_at,json=signedAt,proto3" json:"signed_at,omitempty"` // Signature timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyImageResponse) Reset() {
	*x = VerifyImageResponse{}
	mi := &file_api_proto_image_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyImageResponse) ProtoMessage() {}

func (x *VerifyImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_image_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyImageResponse.ProtoReflect.Descriptor instead.
func (*VerifyImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_image_service_proto_rawDescGZIP(), []int{47}
}

func (x *VerifyImageResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *VerifyImageResponse) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *VerifyImageResponse) GetClaims() []string {
	if x != nil {
		return x.Claims
	}
	return nil
}

func (x *VerifyImageResponse) GetSignedAt() *timestamp.Timestamp {
	if x != nil {
		return x.SignedAt
	}
	return nil
}

var File_api_proto_image_service_proto protoreflect.FileDescriptor

const file_api_proto_image_service_proto_rawDesc = "" +
	"\n" +
	"\x1dapi/proto/image_service.proto\x12\n" +
	"nerdctl.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x16api/proto/common.proto\"\xc2\x03\n" +
	"\x10PullImageRequest\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x120\n" +
	"\bplatform\x18\x03 \x01(\v2\x14.nerdctl.v1.PlatformR\bplatform\x12#\n" +
	"\rall_platforms\x18\x04 \x01(\bR\fallPlatforms\x12\x14\n" +
	"\x05quiet\x18\x05 \x01(\bR\x05quiet\x12,\n" +
	"\x04auth\x18\x06 \x01(\v2\x18.nerdctl.v1.RegistryAuthR\x04auth\x12G\n" +
	"\tpull_opts\x18\a \x03(\v2*.nerdctl.v1.PullImageRequest.PullOptsEntryR\bpullOpts\x12\x16\n" +
	"\x06verify\x18\b \x01(\bR\x06verify\x12 \n" +
	"\vsnapshotter\x18\t \x01(\tR\vsnapshotter\x12\x1f\n" +
	"\vunpack_opts\x18\n" +
	" \x03(\tR\n" +
	"unpackOpts\x1a;\n" +
	"\rPullOptsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf4\x01\n" +
	"\x11PullImageResponse\x12;\n" +
	"\bprogress\x18\x01 \x01(\v2\x1d.nerdctl.v1.OperationProgressH\x00R\bprogress\x12\x1b\n" +
	"\blayer_id\x18\x02 \x01(\tH\x00R\alayerId\x12\x18\n" +
	"\x06offset\x18\x03 \x01(\x03H\x00R\x06offset\x12\x16\n" +
	"\x05total\x18\x04 \x01(\x03H\x00R\x05total\x12\x18\n" +
	"\x06status\x18\x05 \x01(\tH\x00R\x06status\x12-\n" +
	"\x05image\x18\x06 \x01(\v2\x15.nerdctl.v1.ImageInfoH\x00R\x05imageB\n" +
	"\n" +
	"\bresponse\"\xfb\x02\n" +
	"\x10PushImageRequest\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x120\n" +
	"\bplatform\x18\x03 \x01(\v2\x14.nerdctl.v1.PlatformR\bplatform\x12#\n" +
	"\rall_platforms\x18\x04 \x01(\bR\fallPlatforms\x12\x14\n" +
	"\x05quiet\x18\x05 \x01(\bR\x05quiet\x12,\n" +
	"\x04auth\x18\x06 \x01(\v2\x18.nerdctl.v1.RegistryAuthR\x04auth\x12\x12\n" +
	"\x04sign\x18\a \x01(\bR\x04sign\x12G\n" +
	"\tpush_opts\x18\b \x03(\v2*.nerdctl.v1.PushImageRequest.PushOptsEntryR\bpushOpts\x1a;\n" +
	"\rPushOptsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdf\x01\n" +
	"\x11PushImageResponse\x12;\n" +
	"\bprogress\x18\x01 \x01(\v2\x1d.nerdctl.v1.OperationProgressH\x00R\bprogress\x12\x1b\n" +
	"\blayer_id\x18\x02 \x01(\tH\x00R\alayerId\x12\x18\n" +
	"\x06offset\x18\x03 \x01(\x03H\x00R\x06offset\x12\x16\n" +
	"\x05total\x18\x04 \x01(\x03H\x00R\x05total\x12\x18\n" +
	"\x06status\x18\x05 \x01(\tH\x00R\x06status\x12\x18\n" +
	"\x06digest\x18\x06 \x01(\tH\x00R\x06digestB\n" +
	"\n" +
	"\bresponse\"\x8d\x02\n" +
	"\x11ListImagesRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12D\n" +
	"\afilters\x18\x02 \x03(\v2*.nerdctl.v1.ListImagesRequest.FiltersEntryR\afilters\x12\x10\n" +
	"\x03all\x18\x03 \x01(\bR\x03all\x12\x18\n" +
	"\adigests\x18\x04 \x01(\bR\adigests\x12\x14\n" +
	"\x05quiet\x18\x05 \x01(\bR\x05quiet\x12\x16\n" +
	"\x06format\x18\x06 \x01(\tR\x06format\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"C\n" +
	"\x12ListImagesResponse\x12-\n" +
	"\x06images\x18\x01 \x03(\v2\x15.nerdctl.v1.ImageInfoR\x06images\"{\n" +
	"\x12RemoveImageRequest\x12\x16\n" +
	"\x06images\x18\x01 \x03(\tR\x06images\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\x12\x19\n" +
	"\bno_prune\x18\x04 \x01(\bR\anoPrune\"_\n" +
	"\fRemovedImage\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\x12\x1a\n" +
	"\buntagged\x18\x02 \x01(\tR\buntagged\x12\x18\n" +
	"\adeleted\x18\x03 \x01(\tR\adeleted\"I\n" +
	"\x13RemoveImageResponse\x122\n" +
	"\aremoved\x18\x01 \x03(\v2\x18.nerdctl.v1.RemovedImageR\aremoved\"{\n" +
	"\x13InspectImageRequest\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x120\n" +
	"\bplatform\x18\x03 \x01(\v2\x14.nerdctl.v1.PlatformR\bplatform\"\xab\x01\n" +
	"\x14InspectImageResponse\x12+\n" +
	"\x05image\x18\x01 \x01(\v2\x15.nerdctl.v1.ImageInfoR\x05image\x125\n" +
	"\bmanifest\x18\x02 \x01(\v2\x19.nerdctl.v1.ImageManifestR\bmanifest\x12/\n" +
	"\x06config\x18\x03 \x01(\v2\x17.nerdctl.v1.ImageConfigR\x06config\"\xc4\x02\n" +
	"\rImageManifest\x12%\n" +
	"\x0eschema_version\x18\x01 \x01(\x05R\rschemaVersion\x12\x1d\n" +
	"\n" +
	"media_type\x18\x02 \x01(\tR\tmediaType\x12/\n" +
	"\x06config\x18\x03 \x01(\v2\x17.nerdctl.v1.ImageConfigR\x06config\x12.\n" +
	"\x06layers\x18\x04 \x03(\v2\x16.nerdctl.v1.ImageLayerR\x06layers\x12L\n" +
	"\vannotations\x18\x05 \x03(\v2*.nerdctl.v1.ImageManifest.AnnotationsEntryR\vannotations\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa9\x03\n" +
	"\vImageConfig\x12\x1d\n" +
	"\n" +
	"media_type\x18\x01 \x01(\tR\tmediaType\x12\x16\n" +
	"\x06digest\x18\x02 \x01(\tR\x06digest\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x10\n" +
	"\x03env\x18\x04 \x03(\tR\x03env\x12\x10\n" +
	"\x03cmd\x18\x05 \x03(\tR\x03cmd\x12\x1e\n" +
	"\n" +
	"entrypoint\x18\x06 \x03(\tR\n" +
	"entrypoint\x12\x1f\n" +
	"\vworking_dir\x18\a \x01(\tR\n" +
	"workingDir\x12\x12\n" +
	"\x04user\x18\b \x01(\tR\x04user\x12#\n" +
	"\rexposed_ports\x18\t \x03(\tR\fexposedPorts\x12\x18\n" +
	"\avolumes\x18\n" +
	" \x03(\tR\avolumes\x12;\n" +
	"\x06labels\x18\v \x03(\v2#.nerdctl.v1.ImageConfig.LabelsEntryR\x06labels\x12\x1f\n" +
	"\vstop_signal\x18\f \x01(\tR\n" +
	"stopSignal\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"k\n" +
	"\n" +
	"ImageLayer\x12\x1d\n" +
	"\n" +
	"media_type\x18\x01 \x01(\tR\tmediaType\x12\x16\n" +
	"\x06digest\x18\x02 \x01(\tR\x06digest\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x12\n" +
	"\x04urls\x18\x04 \x03(\tR\x04urls\"u\n" +
	"\x0fTagImageRequest\x12!\n" +
	"\fsource_image\x18\x01 \x01(\tR\vsourceImage\x12!\n" +
	"\ftarget_image\x18\x02 \x01(\tR\vtargetImage\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\"*\n" +
	"\x10TagImageResponse\x12\x16\n" +
	"\x06tagged\x18\x01 \x01(\bR\x06tagged\"\x97\x01\n" +
	"\x11BuildImageRequest\x129\n" +
	"\aoptions\x18\x01 \x01(\v2\x1d.nerdctl.v1.BuildImageOptionsH\x00R\aoptions\x12 \n" +
	"\n" +
	"dockerfile\x18\x02 \x01(\fH\x00R\n" +
	"dockerfile\x12\x1a\n" +
	"\acontext\x18\x03 \x01(\fH\x00R\acontextB\t\n" +
	"\arequest\"\xdd\x06\n" +
	"\x11BuildImageOptions\x12\x10\n" +
	"\x03tag\x18\x01 \x01(\tR\x03tag\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1e\n" +
	"\n" +
	"dockerfile\x18\x03 \x01(\tR\n" +
	"dockerfile\x12\x1d\n" +
	"\n" +
	"build_args\x18\x04 \x03(\tR\tbuildArgs\x12\x16\n" +
	"\x06labels\x18\x05 \x03(\tR\x06labels\x12\x16\n" +
	"\x06target\x18\x06 \x01(\tR\x06target\x120\n" +
	"\bplatform\x18\a \x01(\v2\x14.nerdctl.v1.PlatformR\bplatform\x12\x19\n" +
	"\bno_cache\x18\b \x01(\bR\anoCache\x12\x12\n" +
	"\x04pull\x18\t \x01(\bR\x04pull\x12\x0e\n" +
	"\x02rm\x18\n" +
	" \x01(\bR\x02rm\x12\x19\n" +
	"\bforce_rm\x18\v \x01(\bR\aforceRm\x12\x14\n" +
	"\x05quiet\x18\f \x01(\bR\x05quiet\x12\x16\n" +
	"\x06memory\x18\r \x01(\x03R\x06memory\x12\x1f\n" +
	"\vmemory_swap\x18\x0e \x01(\x03R\n" +
	"memorySwap\x12\x1d\n" +
	"\n" +
	"cpu_shares\x18\x0f \x01(\x05R\tcpuShares\x12 \n" +
	"\fcpu_set_cpus\x18\x10 \x01(\tR\n" +
	"cpuSetCpus\x12 \n" +
	"\fcpu_set_mems\x18\x11 \x01(\tR\n" +
	"cpuSetMems\x12\x1d\n" +
	"\n" +
	"cache_from\x18\x12 \x03(\tR\tcacheFrom\x12\x1c\n" +
	"\tisolation\x18\x13 \x01(\tR\tisolation\x12\x19\n" +
	"\bshm_size\x18\x14 \x01(\tR\ashmSize\x12\x16\n" +
	"\x06squash\x18\x15 \x01(\bR\x06squash\x12P\n" +
	"\vannotations\x18\x16 \x03(\v2..nerdctl.v1.BuildImageOptions.AnnotationsEntryR\vannotations\x12\x18\n" +
	"\anetwork\x18\x17 \x01(\tR\anetwork\x12\x18\n" +
	"\asecrets\x18\x18 \x03(\tR\asecrets\x12\x10\n" +
	"\x03ssh\x18\x19 \x03(\tR\x03ssh\x12#\n" +
	"\rbuildkit_host\x18\x1a \x01(\tR\fbuildkitHost\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x01\n" +
	"\x12BuildImageResponse\x12\x18\n" +
	"\x06output\x18\x01 \x01(\tH\x00R\x06output\x12;\n" +
	"\bprogress\x18\x02 \x01(\v2\x1d.nerdctl.v1.OperationProgressH\x00R\bprogress\x12-\n" +
	"\x05image\x18\x03 \x01(\v2\x15.nerdctl.v1.ImageInfoH\x00R\x05image\x12/\n" +
	"\x05error\x18\x04 \x01(\v2\x17.nerdctl.v1.ErrorDetailH\x00R\x05errorB\n" +
	"\n" +
	"\bresponse\"m\n" +
	"\x10LoadImageRequest\x128\n" +
	"\aoptions\x18\x01 \x01(\v2\x1c.nerdctl.v1.LoadImageOptionsH\x00R\aoptions\x12\x14\n" +
	"\x04data\x18\x02 \x01(\fH\x00R\x04dataB\t\n" +
	"\arequest\"\x9f\x01\n" +
	"\x10LoadImageOptions\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05quiet\x18\x02 \x01(\bR\x05quiet\x122\n" +
	"\tplatforms\x18\x03 \x03(\v2\x14.nerdctl.v1.PlatformR\tplatforms\x12#\n" +
	"\rall_platforms\x18\x04 \x01(\bR\fallPlatforms\"+\n" +
	"\x11LoadImageResponse\x12\x16\n" +
	"\x06loaded\x18\x01 \x03(\tR\x06loaded\"\xa1\x01\n" +
	"\x10SaveImageRequest\x12\x16\n" +
	"\x06images\x18\x01 \x03(\tR\x06images\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x122\n" +
	"\tplatforms\x18\x03 \x03(\v2\x14.nerdctl.v1.PlatformR\tplatforms\x12#\n" +
	"\rall_platforms\x18\x04 \x01(\bR\fallPlatforms\"C\n" +
	"\x11SaveImageResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1a\n" +
	"\bfinished\x18\x02 \x01(\bR\bfinished\"q\n" +
	"\x12ImportImageRequest\x12:\n" +
	"\aoptions\x18\x01 \x01(\v2\x1e.nerdctl.v1.ImportImageOptionsH\x00R\aoptions\x12\x14\n" +
	"\x04data\x18\x02 \x01(\fH\x00R\x04dataB\t\n" +
	"\arequest\"\xca\x01\n" +
	"\x12ImportImageOptions\x12\x1e\n" +
	"\n" +
	"repository\x18\x01 \x01(\tR\n" +
	"repository\x12\x10\n" +
	"\x03tag\x18\x02 \x01(\tR\x03tag\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x18\n" +
	"\achanges\x18\x05 \x03(\tR\achanges\x120\n" +
	"\bplatform\x18\x06 \x01(\v2\x14.nerdctl.v1.PlatformR\bplatform\"0\n" +
	"\x13ImportImageResponse\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\"z\n" +
	"\x12ExportImageRequest\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x120\n" +
	"\bplatform\x18\x03 \x01(\v2\x14.nerdctl.v1.PlatformR\bplatform\"E\n" +
	"\x13ExportImageResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1a\n" +
	"\bfinished\x18\x02 \x01(\bR\bfinished\"\x90\x01\n" +
	"\x13ImageHistoryRequest\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05human\x18\x03 \x01(\bR\x05human\x12\x14\n" +
	"\x05quiet\x18\x04 \x01(\bR\x05quiet\x12\x19\n" +
	"\bno_trunc\x18\x05 \x01(\bR\anoTrunc\"\xba\x01\n" +
	"\x11ImageHistoryEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x124\n" +
	"\acreated\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x12\x1d\n" +
	"\n" +
	"created_by\x18\x03 \x01(\tR\tcreatedBy\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x18\n" +
	"\acomment\x18\x05 \x01(\tR\acomment\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\"O\n" +
	"\x14ImageHistoryResponse\x127\n" +
	"\ahistory\x18\x01 \x03(\v2\x1d.nerdctl.v1.ImageHistoryEntryR\ahistory\"\xc7\x01\n" +
	"\x12PruneImagesRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12E\n" +
	"\afilters\x18\x02 \x03(\v2+.nerdctl.v1.PruneImagesRequest.FiltersEntryR\afilters\x12\x10\n" +
	"\x03all\x18\x03 \x01(\bR\x03all\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Y\n" +
	"\vPrunedImage\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\x12\x1b\n" +
	"\trepo_tags\x18\x02 \x03(\tR\brepoTags\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\"o\n" +
	"\x13PruneImagesResponse\x12/\n" +
	"\x06pruned\x18\x01 \x03(\v2\x17.nerdctl.v1.PrunedImageR\x06pruned\x12'\n" +
	"\x0fspace_reclaimed\x18\x02 \x01(\x03R\x0espaceReclaimed\"\x8c\x02\n" +
	"\x13SearchImagesRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\tR\x04term\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12F\n" +
	"\afilters\x18\x03 \x03(\v2,.nerdctl.v1.SearchImagesRequest.FiltersEntryR\afilters\x12\x19\n" +
	"\bno_trunc\x18\x04 \x01(\bR\anoTrunc\x12,\n" +
	"\x04auth\x18\x05 \x01(\v2\x18.nerdctl.v1.RegistryAuthR\x04auth\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9d\x01\n" +
	"\fSearchResult\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"star_count\x18\x03 \x01(\x05R\tstarCount\x12\x1a\n" +
	"\bofficial\x18\x04 \x01(\bR\bofficial\x12\x1c\n" +
	"\tautomated\x18\x05 \x01(\bR\tautomated\"J\n" +
	"\x14SearchImagesResponse\x122\n" +
	"\aresults\x18\x01 \x03(\v2\x18.nerdctl.v1.SearchResultR\aresults\"\x8b\x02\n" +
	"\x13ConvertImageRequest\x12!\n" +
	"\fsource_image\x18\x01 \x01(\tR\vsourceImage\x12!\n" +
	"\ftarget_image\x18\x02 \x01(\tR\vtargetImage\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06format\x18\x04 \x01(\tR\x06format\x120\n" +
	"\bplatform\x18\x05 \x01(\v2\x14.nerdctl.v1.PlatformR\bplatform\x12\x1e\n" +
	"\n" +
	"uncompress\x18\x06 \x01(\bR\n" +
	"uncompress\x12&\n" +
	"\x0foci_media_types\x18\a \x01(\tR\rociMediaTypes\"?\n" +
	"\x14ConvertImageResponse\x12'\n" +
	"\x0fconverted_image\x18\x01 \x01(\tR\x0econvertedImage\"\xf2\x01\n" +
	"\x13EncryptImageRequest\x12!\n" +
	"\fsource_image\x18\x01 \x01(\tR\vsourceImage\x12!\n" +
	"\ftarget_image\x18\x02 \x01(\tR\vtargetImage\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x1e\n" +
	"\n" +
	"recipients\x18\x04 \x03(\tR\n" +
	"recipients\x12%\n" +
	"\x0eencryption_key\x18\x05 \x01(\tR\rencryptionKey\x120\n" +
	"\bplatform\x18\x06 \x01(\v2\x14.nerdctl.v1.PlatformR\bplatform\"?\n" +
	"\x14EncryptImageResponse\x12'\n" +
	"\x0fencrypted_image\x18\x01 \x01(\tR\x0eencryptedImage\"\xd2\x01\n" +
	"\x13DecryptImageRequest\x12!\n" +
	"\fsource_image\x18\x01 \x01(\tR\vsourceImage\x12!\n" +
	"\ftarget_image\x18\x02 \x01(\tR\vtargetImage\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12%\n" +
	"\x0edecryption_key\x18\x04 \x01(\tR\rdecryptionKey\x120\n" +
	"\bplatform\x18\x05 \x01(\v2\x14.nerdctl.v1.PlatformR\bplatform\"?\n" +
	"\x14DecryptImageResponse\x12'\n" +
	"\x0fdecrypted_image\x18\x01 \x01(\tR\x0edecryptedImage\"\x95\x02\n" +
	"\x10SignImageRequest\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12\x12\n" +
	"\x04cert\x18\x04 \x01(\tR\x04cert\x12\x16\n" +
	"\x06format\x18\x05 \x01(\tR\x06format\x12O\n" +
	"\vannotations\x18\x06 \x03(\v2-.nerdctl.v1.SignImageRequest.AnnotationsEntryR\vannotations\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"I\n" +
	"\x11SignImageResponse\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\tR\tsignature\x12\x16\n" +
	"\x06digest\x18\x02 \x01(\tR\x06digest\"\x91\x01\n" +
	"\x12VerifyImageRequest\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12\x12\n" +
	"\x04cert\x18\x04 \x01(\tR\x04cert\x12!\n" +
	"\fcheck_claims\x18\x05 \x01(\bR\vcheckClaims\"\x9a\x01\n" +
	"\x13VerifyImageResponse\x12\x1a\n" +
	"\bverified\x18\x01 \x01(\bR\bverified\x12\x16\n" +
	"\x06signer\x18\x02 \x01(\tR\x06signer\x12\x16\n" +
	"\x06claims\x18\x03 \x03(\tR\x06claims\x127\n" +
	"\tsigned_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bsignedAt2\xf3\v\n" +
	"\fImageService\x12J\n" +
	"\tPullImage\x12\x1c.nerdctl.v1.PullImageRequest\x1a\x1d.nerdctl.v1.PullImageResponse0\x01\x12J\n" +
	"\tPushImage\x12\x1c.nerdctl.v1.PushImageRequest\x1a\x1d.nerdctl.v1.PushImageResponse0\x01\x12K\n" +
	"\n" +
	"ListImages\x12\x1d.nerdctl.v1.ListImagesRequest\x1a\x1e.nerdctl.v1.ListImagesResponse\x12N\n" +
	"\vRemoveImage\x12\x1e.nerdctl.v1.RemoveImageRequest\x1a\x1f.nerdctl.v1.RemoveImageResponse\x12Q\n" +
	"\fInspectImage\x12\x1f.nerdctl.v1.InspectImageRequest\x1a .nerdctl.v1.InspectImageResponse\x12E\n" +
	"\bTagImage\x12\x1b.nerdctl.v1.TagImageRequest\x1a\x1c.nerdctl.v1.TagImageResponse\x12O\n" +
	"\n" +
	"BuildImage\x12\x1d.nerdctl.v1.BuildImageRequest\x1a\x1e.nerdctl.v1.BuildImageResponse(\x010\x01\x12J\n" +
	"\tLoadImage\x12\x1c.nerdctl.v1.LoadImageRequest\x1a\x1d.nerdctl.v1.LoadImageResponse(\x01\x12J\n" +
	"\tSaveImage\x12\x1c.nerdctl.v1.SaveImageRequest\x1a\x1d.nerdctl.v1.SaveImageResponse0\x01\x12P\n" +
	"\vImportImage\x12\x1e.nerdctl.v1.ImportImageRequest\x1a\x1f.nerdctl.v1.ImportImageResponse(\x01\x12P\n" +
	"\vExportImage\x12\x1e.nerdctl.v1.ExportImageRequest\x1a\x1f.nerdctl.v1.ExportImageResponse0\x01\x12Q\n" +
	"\fImageHistory\x12\x1f.nerdctl.v1.ImageHistoryRequest\x1a .nerdctl.v1.ImageHistoryResponse\x12N\n" +
	"\vPruneImages\x12\x1e.nerdctl.v1.PruneImagesRequest\x1a\x1f.nerdctl.v1.PruneImagesResponse\x12Q\n" +
	"\fSearchImages\x12\x1f.nerdctl.v1.SearchImagesRequest\x1a .nerdctl.v1.SearchImagesResponse\x12Q\n" +
	"\fConvertImage\x12\x1f.nerdctl.v1.ConvertImageRequest\x1a .nerdctl.v1.ConvertImageResponse\x12Q\n" +
	"\fEncryptImage\x12\x1f.nerdctl.v1.EncryptImageRequest\x1a .nerdctl.v1.EncryptImageResponse\x12Q\n" +
	"\fDecryptImage\x12\x1f.nerdctl.v1.DecryptImageRequest\x1a .nerdctl.v1.DecryptImageResponse\x12H\n" +
	"\tSignImage\x12\x1c.nerdctl.v1.SignImageRequest\x1a\x1d.nerdctl.v1.SignImageResponse\x12N\n" +
	"\vVerifyImage\x12\x1e.nerdctl.v1.VerifyImageRequest\x1a\x1f.nerdctl.v1.VerifyImageResponseB5Z3github.com/containerd/nerdctl-grpc-server/api/protob\x06proto3"

var (
	file_api_proto_image_service_proto_rawDescOnce sync.Once
	file_api_proto_image_service_proto_rawDescData []byte
)

func file_api_proto_image_service_proto_rawDescGZIP() []byte {
	file_api_proto_image_service_proto_rawDescOnce.Do(func() {
		file_api_proto_image_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_image_service_proto_rawDesc), len(file_api_proto_image_service_proto_rawDesc)))
	})
	return file_api_proto_image_service_proto_rawDescData
}

var file_api_proto_image_service_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_api_proto_image_service_proto_goTypes = []any{
	(*PullImageRequest)(nil),     // 0: nerdctl.v1.PullImageRequest
	(*PullImageResponse)(nil),    // 1: nerdctl.v1.PullImageResponse
	(*PushImageRequest)(nil),     // 2: nerdctl.v1.PushImageRequest
	(*PushImageResponse)(nil),    // 3: nerdctl.v1.PushImageResponse
	(*ListImagesRequest)(nil),    // 4: nerdctl.v1.ListImagesRequest
	(*ListImagesResponse)(nil),   // 5: nerdctl.v1.ListImagesResponse
	(*RemoveImageRequest)(nil),   // 6: nerdctl.v1.RemoveImageRequest
	(*RemovedImage)(nil),         // 7: nerdctl.v1.RemovedImage
	(*RemoveImageResponse)(nil),  // 8: nerdctl.v1.RemoveImageResponse
	(*InspectImageRequest)(nil),  // 9: nerdctl.v1.InspectImageRequest
	(*InspectImageResponse)(nil), // 10: nerdctl.v1.InspectImageResponse
	(*ImageManifest)(nil),        // 11: nerdctl.v1.ImageManifest
	(*ImageConfig)(nil),          // 12: nerdctl.v1.ImageConfig
	(*ImageLayer)(nil),           // 13: nerdctl.v1.ImageLayer
	(*TagImageRequest)(nil),      // 14: nerdctl.v1.TagImageRequest
	(*TagImageResponse)(nil),     // 15: nerdctl.v1.TagImageResponse
	(*BuildImageRequest)(nil),    // 16: nerdctl.v1.BuildImageRequest
	(*BuildImageOptions)(nil),    // 17: nerdctl.v1.BuildImageOptions
	(*BuildImageResponse)(nil),   // 18: nerdctl.v1.BuildImageResponse
	(*LoadImageRequest)(nil),     // 19: nerdctl.v1.LoadImageRequest
	(*LoadImageOptions)(nil),     // 20: nerdctl.v1.LoadImageOptions
	(*LoadImageResponse)(nil),    // 21: nerdctl.v1.LoadImageResponse
	(*SaveImageRequest)(nil),     // 22: nerdctl.v1.SaveImageRequest
	(*SaveImageResponse)(nil),    // 23: nerdctl.v1.SaveImageResponse
	(*ImportImageRequest)(nil),   // 24: nerdctl.v1.ImportImageRequest
	(*ImportImageOptions)(nil),   // 25: nerdctl.v1.ImportImageOptions
	(*ImportImageResponse)(nil),  // 26: nerdctl.v1.ImportImageResponse
	(*ExportImageRequest)(nil),   // 27: nerdctl.v1.ExportImageRequest
	(*ExportImageResponse)(nil),  // 28: nerdctl.v1.ExportImageResponse
	(*ImageHistoryRequest)(nil),  // 29: nerdctl.v1.ImageHistoryRequest
	(*ImageHistoryEntry)(nil),    // 30: nerdctl.v1.ImageHistoryEntry
	(*ImageHistoryResponse)(nil), // 31: nerdctl.v1.ImageHistoryResponse
	(*PruneImagesRequest)(nil),   // 32: nerdctl.v1.PruneImagesRequest
	(*PrunedImage)(nil),          // 33: nerdctl.v1.PrunedImage
	(*PruneImagesResponse)(nil),  // 34: nerdctl.v1.PruneImagesResponse
	(*SearchImagesRequest)(nil),  // 35: nerdctl.v1.SearchImagesRequest
	(*SearchResult)(nil),         // 36: nerdctl.v1.SearchResult
	(*SearchImagesResponse)(nil), // 37: nerdctl.v1.SearchImagesResponse
	(*ConvertImageRequest)(nil),  // 38: nerdctl.v1.ConvertImageRequest
	(*ConvertImageResponse)(nil), // 39: nerdctl.v1.ConvertImageResponse
	(*EncryptImageRequest)(nil),  // 40: nerdctl.v1.EncryptImageRequest
	(*EncryptImageResponse)(nil), // 41: nerdctl.v1.EncryptImageResponse
	(*DecryptImageRequest)(nil),  // 42: nerdctl.v1.DecryptImageRequest
	(*DecryptImageResponse)(nil), // 43: nerdctl.v1.DecryptImageResponse
	(*SignImageRequest)(nil),     // 44: nerdctl.v1.SignImageRequest
	(*SignImageResponse)(nil),    // 45: nerdctl.v1.SignImageResponse
	(*VerifyImageRequest)(nil),   // 46: nerdctl.v1.VerifyImageRequest
	(*VerifyImageResponse)(nil),  // 47: nerdctl.v1.VerifyImageResponse
	nil,                          // 48: nerdctl.v1.PullImageRequest.PullOptsEntry
	nil,                          // 49: nerdctl.v1.PushImageRequest.PushOptsEntry
	nil,                          // 50: nerdctl.v1.ListImagesRequest.FiltersEntry
	nil,                          // 51: nerdctl.v1.ImageManifest.AnnotationsEntry
	nil,                          // 52: nerdctl.v1.ImageConfig.LabelsEntry
	nil,                          // 53: nerdctl.v1.BuildImageOptions.AnnotationsEntry
	nil,                          // 54: nerdctl.v1.PruneImagesRequest.FiltersEntry
	nil,                          // 55: nerdctl.v1.SearchImagesRequest.FiltersEntry
	nil,                          // 56: nerdctl.v1.SignImageRequest.AnnotationsEntry
	(*Platform)(nil),             // 57: nerdctl.v1.Platform
	(*RegistryAuth)(nil),         // 58: nerdctl.v1.RegistryAuth
	(*OperationProgress)(nil),    // 59: nerdctl.v1.OperationProgress
	(*ImageInfo)(nil),            // 60: nerdctl.v1.ImageInfo
	(*ErrorDetail)(nil),          // 61: nerdctl.v1.ErrorDetail
	(*timestamp.Timestamp)(nil),  // 62: google.protobuf.Timestamp
}
var file_api_proto_image_service_proto_depIdxs = []int32{
	57, // 0: nerdctl.v1.PullImageRequest.platform:type_name -> nerdctl.v1.Platform
	58, // 1: nerdctl.v1.PullImageRequest.auth:type_name -> nerdctl.v1.RegistryAuth
	48, // 2: nerdctl.v1.PullImageRequest.pull_opts:type_name -> nerdctl.v1.PullImageRequest.PullOptsEntry
	59, // 3: nerdctl.v1.PullImageResponse.progress:type_name -> nerdctl.v1.OperationProgress
	60, // 4: nerdctl.v1.PullImageResponse.image:type_name -> nerdctl.v1.ImageInfo
	57, // 5: nerdctl.v1.PushImageRequest.platform:type_name -> nerdctl.v1.Platform
	58, // 6: nerdctl.v1.PushImageRequest.auth:type_name -> nerdctl.v1.RegistryAuth
	49, // 7: nerdctl.v1.PushImageRequest.push_opts:type_name -> nerdctl.v1.PushImageRequest.PushOptsEntry
	59, // 8: nerdctl.v1.PushImageResponse.progress:type_name -> nerdctl.v1.OperationProgress
	50, // 9: nerdctl.v1.ListImagesRequest.filters:type_name -> nerdctl.v1.ListImagesRequest.FiltersEntry
	60, // 10: nerdctl.v1.ListImagesResponse.images:type_name -> nerdctl.v1.ImageInfo
	7,  // 11: nerdctl.v1.RemoveImageResponse.removed:type_name -> nerdctl.v1.RemovedImage
	57, // 12: nerdctl.v1.InspectImageRequest.platform:type_name -> nerdctl.v1.Platform
	60, // 13: nerdctl.v1.InspectImageResponse.image:type_name -> nerdctl.v1.ImageInfo
	11, // 14: nerdctl.v1.InspectImageResponse.manifest:type_name -> nerdctl.v1.ImageManifest
	12, // 15: nerdctl.v1.InspectImageResponse.config:type_name -> nerdctl.v1.ImageConfig
	12, // 16: nerdctl.v1.ImageManifest.config:type_name -> nerdctl.v1.ImageConfig
	13, // 17: nerdctl.v1.ImageManifest.layers:type_name -> nerdctl.v1.ImageLayer
	51, // 18: nerdctl.v1.ImageManifest.annotations:type_name -> nerdctl.v1.ImageManifest.AnnotationsEntry
	52, // 19: nerdctl.v1.ImageConfig.labels:type_name -> nerdctl.v1.ImageConfig.LabelsEntry
	17, // 20: nerdctl.v1.BuildImageRequest.options:type_name -> nerdctl.v1.BuildImageOptions
	57, // 21: nerdctl.v1.BuildImageOptions.platform:type_name -> nerdctl.v1.Platform
	53, // 22: nerdctl.v1.BuildImageOptions.annotations:type_name -> nerdctl.v1.BuildImageOptions.AnnotationsEntry
	59, // 23: nerdctl.v1.BuildImageResponse.progress:type_name -> nerdctl.v1.OperationProgress
	60, // 24: nerdctl.v1.BuildImageResponse.image:type_name -> nerdctl.v1.ImageInfo
	61, // 25: nerdctl.v1.BuildImageResponse.error:type_name -> nerdctl.v1.ErrorDetail
	20, // 26: nerdctl.v1.LoadImageRequest.options:type_name -> nerdctl.v1.LoadImageOptions
	57, // 27: nerdctl.v1.LoadImageOptions.platforms:type_name -> nerdctl.v1.Platform
	57, // 28: nerdctl.v1.SaveImageRequest.platforms:type_name -> nerdctl.v1.Platform
	25, // 29: nerdctl.v1.ImportImageRequest.options:type_name -> nerdctl.v1.ImportImageOptions
	57, // 30: nerdctl.v1.ImportImageOptions.platform:type_name -> nerdctl.v1.Platform
	57, // 31: nerdctl.v1.ExportImageRequest.platform:type_name -> nerdctl.v1.Platform
	62, // 32: nerdctl.v1.ImageHistoryEntry.created:type_name -> google.protobuf.Timestamp
	30, // 33: nerdctl.v1.ImageHistoryResponse.history:type_name -> nerdctl.v1.ImageHistoryEntry
	54, // 34: nerdctl.v1.PruneImagesRequest.filters:type_name -> nerdctl.v1.PruneImagesRequest.FiltersEntry
	33, // 35: nerdctl.v1.PruneImagesResponse.pruned:type_name -> nerdctl.v1.PrunedImage
	55, // 36: nerdctl.v1.SearchImagesRequest.filters:type_name -> nerdctl.v1.SearchImagesRequest.FiltersEntry
	58, // 37: nerdctl.v1.SearchImagesRequest.auth:type_name -> nerdctl.v1.RegistryAuth
	36, // 38: nerdctl.v1.SearchImagesResponse.results:type_name -> nerdctl.v1.SearchResult
	57, // 39: nerdctl.v1.ConvertImageRequest.platform:type_name -> nerdctl.v1.Platform
	57, // 40: nerdctl.v1.EncryptImageRequest.platform:type_name -> nerdctl.v1.Platform
	57, // 41: nerdctl.v1.DecryptImageRequest.platform:type_name -> nerdctl.v1.Platform
	56, // 42: nerdctl.v1.SignImageRequest.annotations:type_name -> nerdctl.v1.SignImageRequest.AnnotationsEntry
	62, // 43: nerdctl.v1.VerifyImageResponse.signed_at:type_name -> google.protobuf.Timestamp
	0,  // 44: nerdctl.v1.ImageService.PullImage:input_type -> nerdctl.v1.PullImageRequest
	2,  // 45: nerdctl.v1.ImageService.PushImage:input_type -> nerdctl.v1.PushImageRequest
	4,  // 46: nerdctl.v1.ImageService.ListImages:input_type -> nerdctl.v1.ListImagesRequest
	6,  // 47: nerdctl.v1.ImageService.RemoveImage:input_type -> nerdctl.v1.RemoveImageRequest
	9,  // 48: nerdctl.v1.ImageService.InspectImage:input_type -> nerdctl.v1.InspectImageRequest
	14, // 49: nerdctl.v1.ImageService.TagImage:input_type -> nerdctl.v1.TagImageRequest
	16, // 50: nerdctl.v1.ImageService.BuildImage:input_type -> nerdctl.v1.BuildImageRequest
	19, // 51: nerdctl.v1.ImageService.LoadImage:input_type -> nerdctl.v1.LoadImageRequest
	22, // 52: nerdctl.v1.ImageService.SaveImage:input_type -> nerdctl.v1.SaveImageRequest
	24, // 53: nerdctl.v1.ImageService.ImportImage:input_type -> nerdctl.v1.ImportImageRequest
	27, // 54: nerdctl.v1.ImageService.ExportImage:input_type -> nerdctl.v1.ExportImageRequest
	29, // 55: nerdctl.v1.ImageService.ImageHistory:input_type -> nerdctl.v1.ImageHistoryRequest
	32, // 56: nerdctl.v1.ImageService.PruneImages:input_type -> nerdctl.v1.PruneImagesRequest
	35, // 57: nerdctl.v1.ImageService.SearchImages:input_type -> nerdctl.v1.SearchImagesRequest
	38, // 58: nerdctl.v1.ImageService.ConvertImage:input_type -> nerdctl.v1.ConvertImageRequest
	40, // 59: nerdctl.v1.ImageService.EncryptImage:input_type -> nerdctl.v1.EncryptImageRequest
	42, // 60: nerdctl.v1.ImageService.DecryptImage:input_type -> nerdctl.v1.DecryptImageRequest
	44, // 61: nerdctl.v1.ImageService.SignImage:input_type -> nerdctl.v1.SignImageRequest
	46, // 62: nerdctl.v1.ImageService.VerifyImage:input_type -> nerdctl.v1.VerifyImageRequest
	1,  // 63: nerdctl.v1.ImageService.PullImage:output_type -> nerdctl.v1.PullImageResponse
	3,  // 64: nerdctl.v1.ImageService.PushImage:output_type -> nerdctl.v1.PushImageResponse
	5,  // 65: nerdctl.v1.ImageService.ListImages:output_type -> nerdctl.v1.ListImagesResponse
	8,  // 66: nerdctl.v1.ImageService.RemoveImage:output_type -> nerdctl.v1.RemoveImageResponse
	10, // 67: nerdctl.v1.ImageService.InspectImage:output_type -> nerdctl.v1.InspectImageResponse
	15, // 68: nerdctl.v1.ImageService.TagImage:output_type -> nerdctl.v1.TagImageResponse
	18, // 69: nerdctl.v1.ImageService.BuildImage:output_type -> nerdctl.v1.BuildImageResponse
	21, // 70: nerdctl.v1.ImageService.LoadImage:output_type -> nerdctl.v1.LoadImageResponse
	23, // 71: nerdctl.v1.ImageService.SaveImage:output_type -> nerdctl.v1.SaveImageResponse
	26, // 72: nerdctl.v1.ImageService.ImportImage:output_type -> nerdctl.v1.ImportImageResponse
	28, // 73: nerdctl.v1.ImageService.ExportImage:output_type -> nerdctl.v1.ExportImageResponse
	31, // 74: nerdctl.v1.ImageService.ImageHistory:output_type -> nerdctl.v1.ImageHistoryResponse
	34, // 75: nerdctl.v1.ImageService.PruneImages:output_type -> nerdctl.v1.PruneImagesResponse
	37, // 76: nerdctl.v1.ImageService.SearchImages:output_type -> nerdctl.v1.SearchImagesResponse
	39, // 77: nerdctl.v1.ImageService.ConvertImage:output_type -> nerdctl.v1.ConvertImageResponse
	41, // 78: nerdctl.v1.ImageService.EncryptImage:output_type -> nerdctl.v1.EncryptImageResponse
	43, // 79: nerdctl.v1.ImageService.DecryptImage:output_type -> nerdctl.v1.DecryptImageResponse
	45, // 80: nerdctl.v1.ImageService.SignImage:output_type -> nerdctl.v1.SignImageResponse
	47, // 81: nerdctl.v1.ImageService.VerifyImage:output_type -> nerdctl.v1.VerifyImageResponse
	63, // [63:82] is the sub-list for method output_type
	44, // [44:63] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_api_proto_image_service_proto_init() }
func file_api_proto_image_service_proto_init() {
	if File_api_proto_image_service_proto != nil {
		return
	}
	file_api_proto_common_proto_init()
	file_api_proto_image_service_proto_msgTypes[1].OneofWrappers = []any{
		(*PullImageResponse_Progress)(nil),
		(*PullImageResponse_LayerId)(nil),
		(*PullImageResponse_Offset)(nil),
		(*PullImageResponse_Total)(nil),
		(*PullImageResponse_Status)(nil),
		(*PullImageResponse_Image)(nil),
	}
	file_api_proto_image_service_proto_msgTypes[3].OneofWrappers = []any{
		(*PushImageResponse_Progress)(nil),
		(*PushImageResponse_LayerId)(nil),
		(*PushImageResponse_Offset)(nil),
		(*PushImageResponse_Total)(nil),
		(*PushImageResponse_Status)(nil),
		(*PushImageResponse_Digest)(nil),
	}
	file_api_proto_image_service_proto_msgTypes[16].OneofWrappers = []any{
		(*BuildImageRequest_Options)(nil),
		(*BuildImageRequest_Dockerfile)(nil),
		(*BuildImageRequest_Context)(nil),
	}
	file_api_proto_image_service_proto_msgTypes[18].OneofWrappers = []any{
		(*BuildImageResponse_Output)(nil),
		(*BuildImageResponse_Progress)(nil),
		(*BuildImageResponse_Image)(nil),
		(*BuildImageResponse_Error)(nil),
	}
	file_api_proto_image_service_proto_msgTypes[19].OneofWrappers = []any{
		(*LoadImageRequest_Options)(nil),
		(*LoadImageRequest_Data)(nil),
	}
	file_api_proto_image_service_proto_msgTypes[24].OneofWrappers = []any{
		(*ImportImageRequest_Options)(nil),
		(*ImportImageRequest_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_image_service_proto_rawDesc), len(file_api_proto_image_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_image_service_proto_goTypes,
		DependencyIndexes: file_api_proto_image_service_proto_depIdxs,
		MessageInfos:      file_api_proto_image_service_proto_msgTypes,
	}.Build()
	File_api_proto_image_service_proto = out.File
	file_api_proto_image_service_proto_goTypes = nil
	file_api_proto_image_service_proto_depIdxs = nil
}
